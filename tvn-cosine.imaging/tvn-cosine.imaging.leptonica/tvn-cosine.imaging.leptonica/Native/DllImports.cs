using System;
using System.Runtime.InteropServices;

namespace Leptonica.Native
{
    internal class DllImports
    {
        #region set up
        private const string zlibDllName = "zlib.dll";
        private const string libPngDllName = "libpng16.dll";
        private const string jpegDllName = "jpeg.dll";
        private const string tiffDllName = "tiff.dll";
        private const string tiffXxDllName = "tiffxx.dll";
        private const string leptonicaDllName = "leptonica-1.74.1.dll";

        private static readonly bool initialised;

        static DllImports()
        {
            if (!initialised)
            {
                var path = string.Format("{0}\\lib", AppDomain.CurrentDomain.BaseDirectory);
                if (Architecture.is64BitProcess)
                {
                    path = string.Format("{0}\\{1}", path, "x64");
                }
                else
                {
                    path = string.Format("{0}\\{1}", path, "x86");
                }

                Architecture.LoadLibrary(string.Format("{0}\\{1}", path, zlibDllName));
                Architecture.LoadLibrary(string.Format("{0}\\{1}", path, libPngDllName));
                Architecture.LoadLibrary(string.Format("{0}\\{1}", path, jpegDllName));
                Architecture.LoadLibrary(string.Format("{0}\\{1}", path, tiffDllName));
                Architecture.LoadLibrary(string.Format("{0}\\{1}", path, tiffXxDllName));
                Architecture.LoadLibrary(string.Format("{0}\\{1}", path, leptonicaDllName));

                initialised = true;
            }
        }
        #endregion

        #region internal constants
        #region Colors for 32 bpp
        /// <summary>
        /// 24
        /// </summary>
        internal const int L_RED_SHIFT = 8 * (sizeof(uint) - 1 - (int)ColorsFor32Bpp.COLOR_RED);
        /// <summary>
        /// 16
        /// </summary>
        internal const int L_GREEN_SHIFT = 8 * (sizeof(uint) - 1 - (int)ColorsFor32Bpp.COLOR_GREEN);
        /// <summary>
        /// 8
        /// </summary>
        internal const int L_BLUE_SHIFT = 8 * (sizeof(uint) - 1 - (int)ColorsFor32Bpp.COLOR_BLUE);
        /// <summary>
        /// 0
        /// </summary>
        internal const int L_ALPHA_SHIFT = 8 * (sizeof(uint) - 1 - (int)ColorsFor32Bpp.L_ALPHA_CHANNEL);
        #endregion

        #region Perceptual color weigths
        /// <summary>
        /// Percept. weight for red
        /// </summary>
        internal const float L_RED_WEIGHT = 0.3F;
        /// <summary>
        /// Percept. weight for green
        /// </summary>
        internal const float L_GREEN_WEIGHT = 0.5F;
        /// <summary>
        /// Percept. weight for blue
        /// </summary>
        internal const float L_BLUE_WEIGHT = 0.2F;
        #endregion
        #endregion

        #region adaptmap.c 
        // Clean background to white using background normalization
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixCleanBackgroundToWhite")]
        internal static extern IntPtr pixCleanBackgroundToWhite(HandleRef pixs, HandleRef pixim, HandleRef pixg, float gamma, int blackval, int whiteval);

        // Adaptive background normalization (top-level functions)
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormSimple")]
        internal static extern IntPtr pixBackgroundNormSimple(HandleRef pixs, HandleRef pixim, HandleRef pixg);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNorm")]
        internal static extern IntPtr pixBackgroundNorm(HandleRef pixs, HandleRef pixim, HandleRef pixg, int sx, int sy, int thresh, int mincount, int bgval, int smoothx, int smoothy);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormMorph")]
        internal static extern IntPtr pixBackgroundNormMorph(HandleRef pixs, HandleRef pixim, int reduction, int size, int bgval);

        // Arrays of inverted background values for normalization (16 bpp)
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormGrayArray")]
        internal static extern int pixBackgroundNormGrayArray(HandleRef pixs, HandleRef pixim, int sx, int sy, int thresh, int mincount, int bgval, int smoothx, int smoothy, out IntPtr ppixd);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormRGBArrays")]
        internal static extern int pixBackgroundNormRGBArrays(HandleRef pixs, HandleRef pixim, HandleRef pixg, int sx, int sy, int thresh, int mincount, int bgval, int smoothx, int smoothy, out IntPtr ppixr, out IntPtr ppixg, out IntPtr ppixb);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormGrayArrayMorph")]
        internal static extern int pixBackgroundNormGrayArrayMorph(HandleRef pixs, HandleRef pixim, int reduction, int size, int bgval, out IntPtr ppixd);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormRGBArraysMorph")]
        internal static extern int pixBackgroundNormRGBArraysMorph(HandleRef pixs, HandleRef pixim, int reduction, int size, int bgval, out IntPtr ppixr, out IntPtr ppixg, out IntPtr ppixb);

        // Measurement of local background
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGetBackgroundGrayMap")]
        internal static extern int pixGetBackgroundGrayMap(HandleRef pixs, HandleRef pixim, int sx, int sy, int thresh, int mincount, out IntPtr ppixd);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGetBackgroundRGBMap")]
        internal static extern int pixGetBackgroundRGBMap(HandleRef pixs, HandleRef pixim, HandleRef pixg, int sx, int sy, int thresh, int mincount, out IntPtr ppixmr, out IntPtr ppixmg, out IntPtr ppixmb);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGetBackgroundGrayMapMorph")]
        internal static extern int pixGetBackgroundGrayMapMorph(HandleRef pixs, HandleRef pixim, int reduction, int size, out IntPtr ppixm);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGetBackgroundRGBMapMorph")]
        internal static extern int pixGetBackgroundRGBMapMorph(HandleRef pixs, HandleRef pixim, int reduction, int size, out IntPtr ppixmr, out IntPtr ppixmg, out IntPtr ppixmb);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixFillMapHoles")]
        internal static extern int pixFillMapHoles(HandleRef pix, int nx, int ny, int filltype);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixExtendByReplication")]
        internal static extern IntPtr pixExtendByReplication(HandleRef pixs, int addw, int addh);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixSmoothConnectedRegions")]
        internal static extern int pixSmoothConnectedRegions(HandleRef pixs, HandleRef pixm, int factor);

        // Generate inverted background map for each component 
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGetInvBackgroundMap")]
        internal static extern IntPtr pixGetInvBackgroundMap(HandleRef pixs, int bgval, int smoothx, int smoothy);

        // Apply inverse background map to image
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixApplyInvBackgroundGrayMap")]
        internal static extern IntPtr pixApplyInvBackgroundGrayMap(HandleRef pixs, HandleRef pixm, int sx, int sy);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixApplyInvBackgroundRGBMap")]
        internal static extern IntPtr pixApplyInvBackgroundRGBMap(HandleRef pixs, HandleRef pixmr, HandleRef pixmg, HandleRef pixmb, int sx, int sy);

        // Apply variable map
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixApplyVariableGrayMap")]
        internal static extern IntPtr pixApplyVariableGrayMap(HandleRef pixs, HandleRef pixg, int target);

        // Non-adaptive (global) mapping
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGlobalNormRGB")]
        internal static extern IntPtr pixGlobalNormRGB(HandleRef pixd, HandleRef pixs, int rval, int gval, int bval, int mapval);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixGlobalNormNoSatRGB")]
        internal static extern IntPtr pixGlobalNormNoSatRGB(HandleRef pixd, HandleRef pixs, int rval, int gval, int bval, int factor, float rank);

        // Adaptive threshold spread normalization
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixThresholdSpreadNorm")]
        internal static extern int pixThresholdSpreadNorm(HandleRef pixs, int filtertype, int edgethresh, int smoothx, int smoothy, float gamma, int minval, int maxval, int targetthresh, out IntPtr ppixth, out IntPtr ppixb, out IntPtr ppixd);

        // Adaptive background normalization (flexible adaptaption)
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixBackgroundNormFlex")]
        internal static extern IntPtr pixBackgroundNormFlex(HandleRef pixs, int sx, int sy, int smoothx, int smoothy, int delta);

        // Adaptive contrast normalization
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixContrastNorm")]
        internal static extern IntPtr pixContrastNorm(HandleRef pixd, HandleRef pixs, int sx, int sy, int mindiff, int smoothx, int smoothy);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixMinMaxTiles")]
        internal static extern int pixMinMaxTiles(HandleRef pixs, int sx, int sy, int mindiff, int smoothx, int smoothy, out IntPtr ppixmin, out IntPtr ppixmax);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixSetLowContrast")]
        internal static extern int pixSetLowContrast(HandleRef pixs1, HandleRef pixs2, int mindiff);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixLinearTRCTiled")]
        internal static extern IntPtr pixLinearTRCTiled(HandleRef pixd, HandleRef pixs, int sx, int sy, HandleRef pixmin, HandleRef pixmax);
        #endregion

        #region affine.c

        // Affine (3 pt) image transformation using a sampled (to nearest integer) transform on each dest point
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffineSampledPta")]
        internal static extern IntPtr pixAffineSampledPta(HandleRef pixs, HandleRef ptad, HandleRef ptas, int incolor);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffineSampled")]
        internal static extern IntPtr pixAffineSampled(HandleRef pixs, IntPtr vc, int incolor);

        // Affine (3 pt) image transformation using interpolation (or area mapping) for anti-aliasing images that are 2, 4, or 8 bpp gray, or colormapped, or 32 bpp RGB
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffinePta")]
        internal static extern IntPtr pixAffinePta(HandleRef pixs, HandleRef ptad, HandleRef ptas, int incolor);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffine")]
        internal static extern IntPtr pixAffine(HandleRef pixs, IntPtr vc, int incolor);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffinePtaColor")]
        internal static extern IntPtr pixAffinePtaColor(HandleRef pixs, HandleRef ptad, HandleRef ptas, uint colorval);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffineColor")]
        internal static extern IntPtr pixAffineColor(HandleRef pixs, IntPtr vc, uint colorval);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffinePtaGray")]
        internal static extern IntPtr pixAffinePtaGray(HandleRef pixs, HandleRef ptad, HandleRef ptas, byte grayval);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffineGray")]
        internal static extern IntPtr pixAffineGray(HandleRef pixs, IntPtr vc, byte grayval);

        // Affine transform including alpha (blend) component
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffinePtaWithAlpha")]
        internal static extern IntPtr pixAffinePtaWithAlpha(HandleRef pixs, HandleRef ptad, HandleRef ptas, HandleRef pixg, float fract, int border);

        // Affine coordinate transformation
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "getAffineXformCoeffs")]
        internal static extern int getAffineXformCoeffs(HandleRef ptas, HandleRef ptad, out IntPtr pvc);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "affineInvertXform")]
        internal static extern int affineInvertXform(IntPtr vc, out IntPtr pvci);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "affineXformSampledPt")]
        internal static extern int affineXformSampledPt(IntPtr vc, int x, int y, out int pxp, out int pyp);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "affineXformPt")]
        internal static extern int affineXformPt(IntPtr vc, int x, int y, out float pxp, out float pyp);

        // Interpolation helper functions 
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "linearInterpolatePixelColor")]
        internal static extern int linearInterpolatePixelColor(IntPtr datas, int wpls, int w, int h, float x, float y, uint colorval, out uint pval);
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "linearInterpolatePixelGray")]
        internal static extern int linearInterpolatePixelGray(IntPtr datas, int wpls, int w, int h, float x, float y, int grayval, out int pval);

        // Gauss-jordan linear equation solver
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "gaussjordan")]
        internal static extern int gaussjordan(IntPtr a, IntPtr b, int n);

        // Affine image transformation using a sequence of  shear/scale/translation operations
        [DllImport(leptonicaDllName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "pixAffineSequential")]
        internal static extern IntPtr pixAffineSequential(HandleRef pixs, HandleRef ptad, HandleRef ptas, int bw, int bh);

        #endregion

        /* 
        LEPT_DLL extern l_float32* createMatrix2dTranslate(l_float32 transx, float transy);
        LEPT_DLL extern l_float32* createMatrix2dScale(l_float32 scalex, float scaley);
        LEPT_DLL extern l_float32* createMatrix2dRotate(l_float32 xc, float yc, float angle);
        LEPT_DLL extern PTA* ptaTranslate(PTA* ptas, float transx, float transy);
        LEPT_DLL extern PTA* ptaScale(PTA* ptas, float scalex, float scaley);
        LEPT_DLL extern PTA* ptaRotate(PTA* ptas, float xc, float yc, float angle);
        LEPT_DLL extern BOXA* boxaTranslate(BOXA* boxas, float transx, float transy);
        LEPT_DLL extern BOXA* boxaScale(BOXA* boxas, float scalex, float scaley);
        LEPT_DLL extern BOXA* boxaRotate(BOXA* boxas, float xc, float yc, float angle);
        LEPT_DLL extern PTA* ptaAffineTransform(PTA* ptas, l_float32* mat);
        LEPT_DLL extern BOXA* boxaAffineTransform(BOXA* boxas, l_float32* mat);
        LEPT_DLL extern int l_productMatVec(l_float32* mat, l_float32* vecs, l_float32* vecd, int size);
        LEPT_DLL extern int l_productMat2(l_float32* mat1, l_float32* mat2, l_float32* matd, int size);
        LEPT_DLL extern int l_productMat3(l_float32* mat1, l_float32* mat2, l_float32* mat3, l_float32* matd, int size);
        LEPT_DLL extern int l_productMat4(l_float32* mat1, l_float32* mat2, l_float32* mat3, l_float32* mat4, l_float32* matd, int size);
        LEPT_DLL extern int l_getDataBit(void* line, int n);
        LEPT_DLL extern void l_setDataBit(void* line, int n);
        LEPT_DLL extern void l_clearDataBit(void* line, int n);
        LEPT_DLL extern void l_setDataBitVal(void* line, int n, int val);
        LEPT_DLL extern int l_getDataDibit(void* line, int n);
        LEPT_DLL extern void l_setDataDibit(void* line, int n, int val);
        LEPT_DLL extern void l_clearDataDibit(void* line, int n);
        LEPT_DLL extern int l_getDataQbit(void* line, int n);
        LEPT_DLL extern void l_setDataQbit(void* line, int n, int val);
        LEPT_DLL extern void l_clearDataQbit(void* line, int n);
        LEPT_DLL extern int l_getDataByte(void* line, int n);
        LEPT_DLL extern void l_setDataByte(void* line, int n, int val);
        LEPT_DLL extern int l_getDataTwoBytes(void* line, int n);
        LEPT_DLL extern void l_setDataTwoBytes(void* line, int n, int val);
        LEPT_DLL extern int l_getDataFourBytes(void* line, int n);
        LEPT_DLL extern void l_setDataFourBytes(void* line, int n, int val);
        LEPT_DLL extern char* barcodeDispatchDecoder(char* barstr, int format, int debugflag);
        LEPT_DLL extern int barcodeFormatIsSupported(l_int32 format);
        LEPT_DLL extern NUMA* pixFindBaselines(PIX* pixs, PTA** ppta, PIXA* pixadb);
        LEPT_DLL extern PIX* pixDeskewLocal(PIX* pixs, int nslices, int redsweep, int redsearch, float sweeprange, float sweepdelta, float minbsdelta);
        LEPT_DLL extern int pixGetLocalSkewTransform(PIX* pixs, int nslices, int redsweep, int redsearch, float sweeprange, float sweepdelta, float minbsdelta, PTA** pptas, PTA** pptad);
        LEPT_DLL extern NUMA* pixGetLocalSkewAngles(PIX* pixs, int nslices, int redsweep, int redsearch, float sweeprange, float sweepdelta, float minbsdelta, l_float32* pa, l_float32* pb, int debug);
        LEPT_DLL extern L_BBUFFER* bbufferCreate(l_uint8* indata, int nalloc);
        LEPT_DLL extern void bbufferDestroy(L_BBUFFER** pbb);
        LEPT_DLL extern l_uint8* bbufferDestroyAndSaveData(L_BBUFFER** pbb, size_t* pnbytes);
        LEPT_DLL extern int bbufferRead(L_BBUFFER* bb, l_uint8* src, int nbytes);
        LEPT_DLL extern int bbufferReadStream(L_BBUFFER* bb, FILE* fp, int nbytes);
        LEPT_DLL extern int bbufferExtendArray(L_BBUFFER* bb, int nbytes);
        LEPT_DLL extern int bbufferWrite(L_BBUFFER* bb, l_uint8* dest, size_t nbytes, size_t* pnout);
        LEPT_DLL extern int bbufferWriteStream(L_BBUFFER* bb, FILE* fp, size_t nbytes, size_t* pnout);
        LEPT_DLL extern PIX* pixBilateral(PIX* pixs, float spatial_stdev, float range_stdev, int ncomps, int reduction);
        LEPT_DLL extern PIX* pixBilateralGray(PIX* pixs, float spatial_stdev, float range_stdev, int ncomps, int reduction);
        LEPT_DLL extern PIX* pixBilateralExact(PIX* pixs, L_KERNEL* spatial_kel, L_KERNEL* range_kel);
        LEPT_DLL extern PIX* pixBilateralGrayExact(PIX* pixs, L_KERNEL* spatial_kel, L_KERNEL* range_kel);
        LEPT_DLL extern PIX* pixBlockBilateralExact(PIX* pixs, float spatial_stdev, float range_stdev);
        LEPT_DLL extern L_KERNEL* makeRangeKernel(l_float32 range_stdev);
        LEPT_DLL extern PIX* pixBilinearSampledPta(PIX* pixs, PTA* ptad, PTA* ptas, int incolor);
        LEPT_DLL extern PIX* pixBilinearSampled(PIX* pixs, l_float32* vc, int incolor);
        LEPT_DLL extern PIX* pixBilinearPta(PIX* pixs, PTA* ptad, PTA* ptas, int incolor);
        LEPT_DLL extern PIX* pixBilinear(PIX* pixs, l_float32* vc, int incolor);
        LEPT_DLL extern PIX* pixBilinearPtaColor(PIX* pixs, PTA* ptad, PTA* ptas, uint colorval);
        LEPT_DLL extern PIX* pixBilinearColor(PIX* pixs, l_float32* vc, uint colorval);
        LEPT_DLL extern PIX* pixBilinearPtaGray(PIX* pixs, PTA* ptad, PTA* ptas, byte grayval);
        LEPT_DLL extern PIX* pixBilinearGray(PIX* pixs, l_float32* vc, byte grayval);
        LEPT_DLL extern PIX* pixBilinearPtaWithAlpha(PIX* pixs, PTA* ptad, PTA* ptas, PIX* pixg, float fract, int border);
        LEPT_DLL extern int getBilinearXformCoeffs(PTA* ptas, PTA* ptad, l_float32** pvc);
        LEPT_DLL extern int bilinearXformSampledPt(l_float32* vc, int x, int y, l_int32* pxp, l_int32* pyp);
        LEPT_DLL extern int bilinearXformPt(l_float32* vc, int x, int y, l_float32* pxp, l_float32* pyp);
        LEPT_DLL extern int pixOtsuAdaptiveThreshold(PIX* pixs, int sx, int sy, int smoothx, int smoothy, float scorefract, PIX** ppixth, PIX** ppixd);
        LEPT_DLL extern PIX* pixOtsuThreshOnBackgroundNorm(PIX* pixs, PIX* pixim, int sx, int sy, int thresh, int mincount, int bgval, int smoothx, int smoothy, float scorefract, l_int32* pthresh);
        LEPT_DLL extern PIX* pixMaskedThreshOnBackgroundNorm(PIX* pixs, PIX* pixim, int sx, int sy, int thresh, int mincount, int smoothx, int smoothy, float scorefract, l_int32* pthresh);
        LEPT_DLL extern int pixSauvolaBinarizeTiled(PIX* pixs, int whsize, float factor, int nx, int ny, PIX** ppixth, PIX** ppixd);
        LEPT_DLL extern int pixSauvolaBinarize(PIX* pixs, int whsize, float factor, int addborder, PIX** ppixm, PIX** ppixsd, PIX** ppixth, PIX** ppixd);
        LEPT_DLL extern PIX* pixSauvolaGetThreshold(PIX* pixm, PIX* pixms, float factor, PIX** ppixsd);
        LEPT_DLL extern PIX* pixApplyLocalThreshold(PIX* pixs, PIX* pixth, int redfactor);
        LEPT_DLL extern int pixThresholdByConnComp(PIX* pixs, PIX* pixm, int start, int end, int incr, float thresh48, float threshdiff, l_int32* pglobthresh, PIX** ppixd, int debugflag);
        LEPT_DLL extern PIX* pixExpandBinaryReplicate(PIX* pixs, int xfact, int yfact);
        LEPT_DLL extern PIX* pixExpandBinaryPower2(PIX* pixs, int factor);
        LEPT_DLL extern PIX* pixReduceBinary2(PIX* pixs, l_uint8* intab);
        LEPT_DLL extern PIX* pixReduceRankBinaryCascade(PIX* pixs, int level1, int level2, int level3, int level4);
        LEPT_DLL extern PIX* pixReduceRankBinary2(PIX* pixs, int level, l_uint8* intab);
        LEPT_DLL extern l_uint8* makeSubsampleTab2x(void );
        LEPT_DLL extern PIX* pixBlend(PIX* pixs1, PIX* pixs2, int x, int y, float fract);
        LEPT_DLL extern PIX* pixBlendMask(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float fract, int type);
        LEPT_DLL extern PIX* pixBlendGray(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float fract, int type, int transparent, uint transpix);
        LEPT_DLL extern PIX* pixBlendGrayInverse(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float fract);
        LEPT_DLL extern PIX* pixBlendColor(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float fract, int transparent, uint transpix);
        LEPT_DLL extern PIX* pixBlendColorByChannel(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float rfract, float gfract, float bfract, int transparent, uint transpix);
        LEPT_DLL extern PIX* pixBlendGrayAdapt(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float fract, int shift);
        LEPT_DLL extern PIX* pixFadeWithGray(PIX* pixs, PIX* pixb, float factor, int type);
        LEPT_DLL extern PIX* pixBlendHardLight(PIX* pixd, PIX* pixs1, PIX* pixs2, int x, int y, float fract);
        LEPT_DLL extern int pixBlendCmap(PIX* pixs, PIX* pixb, int x, int y, int sindex);
        LEPT_DLL extern PIX* pixBlendWithGrayMask(PIX* pixs1, PIX* pixs2, PIX* pixg, int x, int y);
        LEPT_DLL extern PIX* pixBlendBackgroundToColor(PIX* pixd, PIX* pixs, BOX* box, uint color, float gamma, int minval, int maxval);
        LEPT_DLL extern PIX* pixMultiplyByColor(PIX* pixd, PIX* pixs, BOX* box, uint color);
        LEPT_DLL extern PIX* pixAlphaBlendUniform(PIX* pixs, uint color);
        LEPT_DLL extern PIX* pixAddAlphaToBlend(PIX* pixs, float fract, int invert);
        LEPT_DLL extern PIX* pixSetAlphaOverWhite(PIX* pixs);
        LEPT_DLL extern L_BMF* bmfCreate( const char* dir, int fontsize );
        LEPT_DLL extern void bmfDestroy(L_BMF** pbmf);
        LEPT_DLL extern PIX* bmfGetPix(L_BMF* bmf, char chr);
        LEPT_DLL extern int bmfGetWidth(L_BMF* bmf, char chr, l_int32* pw);
        LEPT_DLL extern int bmfGetBaseline(L_BMF* bmf, char chr, l_int32* pbaseline);
        LEPT_DLL extern PIXA* pixaGetFont( const char* dir, int fontsize, l_int32* pbl0, int *pbl1, l_int32* pbl2 );
        LEPT_DLL extern int pixaSaveFont( const char* indir, const char* outdir, int fontsize );
        LEPT_DLL extern PIX* pixReadStreamBmp(FILE* fp);
        LEPT_DLL extern PIX* pixReadMemBmp( const l_uint8* cdata, size_t size );
        LEPT_DLL extern int pixWriteStreamBmp(FILE* fp, PIX* pix);
        LEPT_DLL extern int pixWriteMemBmp(l_uint8** pfdata, size_t* pfsize, PIX* pixs);
        LEPT_DLL extern PIXA* l_bootnum_gen1(void );
        LEPT_DLL extern PIXA* l_bootnum_gen2(void );
        LEPT_DLL extern PIXA* l_bootnum_gen3(void );
        LEPT_DLL extern BOX* boxCreate(l_int32 x, int y, int w, int h);
        LEPT_DLL extern BOX* boxCreateValid(l_int32 x, int y, int w, int h);
        LEPT_DLL extern BOX* boxCopy(BOX* box);
        LEPT_DLL extern BOX* boxClone(BOX* box);
        LEPT_DLL extern void boxDestroy(BOX** pbox);
        LEPT_DLL extern int boxGetGeometry(BOX* box, l_int32* px, l_int32* py, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int boxSetGeometry(BOX* box, int x, int y, int w, int h);
        LEPT_DLL extern int boxGetSideLocations(BOX* box, l_int32* pl, l_int32* pr, l_int32* pt, l_int32* pb);
        LEPT_DLL extern int boxSetSideLocations(BOX* box, int l, int r, int t, int b);
        LEPT_DLL extern int boxGetRefcount(BOX* box);
        LEPT_DLL extern int boxChangeRefcount(BOX* box, int delta);
        LEPT_DLL extern int boxIsValid(BOX* box, l_int32* pvalid);
        LEPT_DLL extern BOXA* boxaCreate(l_int32 n);
        LEPT_DLL extern BOXA* boxaCopy(BOXA* boxa, int copyflag);
        LEPT_DLL extern void boxaDestroy(BOXA** pboxa);
        LEPT_DLL extern int boxaAddBox(BOXA* boxa, BOX* box, int copyflag);
        LEPT_DLL extern int boxaExtendArray(BOXA* boxa);
        LEPT_DLL extern int boxaExtendArrayToSize(BOXA* boxa, int size);
        LEPT_DLL extern int boxaGetCount(BOXA* boxa);
        LEPT_DLL extern int boxaGetValidCount(BOXA* boxa);
        LEPT_DLL extern BOX* boxaGetBox(BOXA* boxa, int index, int accessflag);
        LEPT_DLL extern BOX* boxaGetValidBox(BOXA* boxa, int index, int accessflag);
        LEPT_DLL extern NUMA* boxaFindInvalidBoxes(BOXA* boxa);
        LEPT_DLL extern int boxaGetBoxGeometry(BOXA* boxa, int index, l_int32* px, l_int32* py, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int boxaIsFull(BOXA* boxa, l_int32* pfull);
        LEPT_DLL extern int boxaReplaceBox(BOXA* boxa, int index, BOX* box);
        LEPT_DLL extern int boxaInsertBox(BOXA* boxa, int index, BOX* box);
        LEPT_DLL extern int boxaRemoveBox(BOXA* boxa, int index);
        LEPT_DLL extern int boxaRemoveBoxAndSave(BOXA* boxa, int index, BOX** pbox);
        LEPT_DLL extern BOXA* boxaSaveValid(BOXA* boxas, int copyflag);
        LEPT_DLL extern int boxaInitFull(BOXA* boxa, BOX* box);
        LEPT_DLL extern int boxaClear(BOXA* boxa);
        LEPT_DLL extern BOXAA* boxaaCreate(l_int32 n);
        LEPT_DLL extern BOXAA* boxaaCopy(BOXAA* baas, int copyflag);
        LEPT_DLL extern void boxaaDestroy(BOXAA** pbaa);
        LEPT_DLL extern int boxaaAddBoxa(BOXAA* baa, BOXA* ba, int copyflag);
        LEPT_DLL extern int boxaaExtendArray(BOXAA* baa);
        LEPT_DLL extern int boxaaExtendArrayToSize(BOXAA* baa, int size);
        LEPT_DLL extern int boxaaGetCount(BOXAA* baa);
        LEPT_DLL extern int boxaaGetBoxCount(BOXAA* baa);
        LEPT_DLL extern BOXA* boxaaGetBoxa(BOXAA* baa, int index, int accessflag);
        LEPT_DLL extern BOX* boxaaGetBox(BOXAA* baa, int iboxa, int ibox, int accessflag);
        LEPT_DLL extern int boxaaInitFull(BOXAA* baa, BOXA* boxa);
        LEPT_DLL extern int boxaaExtendWithInit(BOXAA* baa, int maxindex, BOXA* boxa);
        LEPT_DLL extern int boxaaReplaceBoxa(BOXAA* baa, int index, BOXA* boxa);
        LEPT_DLL extern int boxaaInsertBoxa(BOXAA* baa, int index, BOXA* boxa);
        LEPT_DLL extern int boxaaRemoveBoxa(BOXAA* baa, int index);
        LEPT_DLL extern int boxaaAddBox(BOXAA* baa, int index, BOX* box, int accessflag);
        LEPT_DLL extern BOXAA* boxaaReadFromFiles( const char* dirname, const char* substr, int first, int nfiles );
        LEPT_DLL extern BOXAA* boxaaRead( const char* filename );
        LEPT_DLL extern BOXAA* boxaaReadStream(FILE* fp);
        LEPT_DLL extern BOXAA* boxaaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int boxaaWrite( const char* filename, BOXAA *baa );
        LEPT_DLL extern int boxaaWriteStream(FILE* fp, BOXAA* baa);
        LEPT_DLL extern int boxaaWriteMem(l_uint8** pdata, size_t* psize, BOXAA* baa);
        LEPT_DLL extern BOXA* boxaRead( const char* filename );
        LEPT_DLL extern BOXA* boxaReadStream(FILE* fp);
        LEPT_DLL extern BOXA* boxaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int boxaWrite( const char* filename, BOXA *boxa );
        LEPT_DLL extern int boxaWriteStream(FILE* fp, BOXA* boxa);
        LEPT_DLL extern int boxaWriteMem(l_uint8** pdata, size_t* psize, BOXA* boxa);
        LEPT_DLL extern int boxPrintStreamInfo(FILE* fp, BOX* box);
        LEPT_DLL extern int boxContains(BOX* box1, BOX* box2, l_int32* presult);
        LEPT_DLL extern int boxIntersects(BOX* box1, BOX* box2, l_int32* presult);
        LEPT_DLL extern BOXA* boxaContainedInBox(BOXA* boxas, BOX* box);
        LEPT_DLL extern int boxaContainedInBoxCount(BOXA* boxa, BOX* box, l_int32* pcount);
        LEPT_DLL extern int boxaContainedInBoxa(BOXA* boxa1, BOXA* boxa2, l_int32* pcontained);
        LEPT_DLL extern BOXA* boxaIntersectsBox(BOXA* boxas, BOX* box);
        LEPT_DLL extern int boxaIntersectsBoxCount(BOXA* boxa, BOX* box, l_int32* pcount);
        LEPT_DLL extern BOXA* boxaClipToBox(BOXA* boxas, BOX* box);
        LEPT_DLL extern BOXA* boxaCombineOverlaps(BOXA* boxas, PIXA* pixadb);
        LEPT_DLL extern int boxaCombineOverlapsInPair(BOXA* boxas1, BOXA* boxas2, BOXA** pboxad1, BOXA** pboxad2, PIXA* pixadb);
        LEPT_DLL extern BOX* boxOverlapRegion(BOX* box1, BOX* box2);
        LEPT_DLL extern BOX* boxBoundingRegion(BOX* box1, BOX* box2);
        LEPT_DLL extern int boxOverlapFraction(BOX* box1, BOX* box2, l_float32* pfract);
        LEPT_DLL extern int boxOverlapArea(BOX* box1, BOX* box2, l_int32* parea);
        LEPT_DLL extern BOXA* boxaHandleOverlaps(BOXA* boxas, int op, int range, float min_overlap, float max_ratio, NUMA** pnamap);
        LEPT_DLL extern int boxSeparationDistance(BOX* box1, BOX* box2, l_int32* ph_sep, l_int32* pv_sep);
        LEPT_DLL extern int boxCompareSize(BOX* box1, BOX* box2, int type, l_int32* prel);
        LEPT_DLL extern int boxContainsPt(BOX* box, float x, float y, l_int32* pcontains);
        LEPT_DLL extern BOX* boxaGetNearestToPt(BOXA* boxa, int x, int y);
        LEPT_DLL extern BOX* boxaGetNearestToLine(BOXA* boxa, int x, int y);
        LEPT_DLL extern int boxGetCenter(BOX* box, l_float32* pcx, l_float32* pcy);
        LEPT_DLL extern int boxIntersectByLine(BOX* box, int x, int y, float slope, l_int32* px1, l_int32* py1, l_int32* px2, l_int32* py2, l_int32* pn);
        LEPT_DLL extern BOX* boxClipToRectangle(BOX* box, int wi, int hi);
        LEPT_DLL extern int boxClipToRectangleParams(BOX* box, int w, int h, l_int32* pxstart, l_int32* pystart, l_int32* pxend, l_int32* pyend, l_int32* pbw, l_int32* pbh);
        LEPT_DLL extern BOX* boxRelocateOneSide(BOX* boxd, BOX* boxs, int loc, int sideflag);
        LEPT_DLL extern BOXA* boxaAdjustSides(BOXA* boxas, int delleft, int delright, int deltop, int delbot);
        LEPT_DLL extern BOX* boxAdjustSides(BOX* boxd, BOX* boxs, int delleft, int delright, int deltop, int delbot);
        LEPT_DLL extern BOXA* boxaSetSide(BOXA* boxad, BOXA* boxas, int side, int val, int thresh);
        LEPT_DLL extern BOXA* boxaAdjustWidthToTarget(BOXA* boxad, BOXA* boxas, int sides, int target, int thresh);
        LEPT_DLL extern BOXA* boxaAdjustHeightToTarget(BOXA* boxad, BOXA* boxas, int sides, int target, int thresh);
        LEPT_DLL extern int boxEqual(BOX* box1, BOX* box2, l_int32* psame);
        LEPT_DLL extern int boxaEqual(BOXA* boxa1, BOXA* boxa2, int maxdist, NUMA** pnaindex, l_int32* psame);
        LEPT_DLL extern int boxSimilar(BOX* box1, BOX* box2, int leftdiff, int rightdiff, int topdiff, int botdiff, l_int32* psimilar);
        LEPT_DLL extern int boxaSimilar(BOXA* boxa1, BOXA* boxa2, int leftdiff, int rightdiff, int topdiff, int botdiff, int debug, l_int32* psimilar, NUMA** pnasim);
        LEPT_DLL extern int boxaJoin(BOXA* boxad, BOXA* boxas, int istart, int iend);
        LEPT_DLL extern int boxaaJoin(BOXAA* baad, BOXAA* baas, int istart, int iend);
        LEPT_DLL extern int boxaSplitEvenOdd(BOXA* boxa, int fillflag, BOXA** pboxae, BOXA** pboxao);
        LEPT_DLL extern BOXA* boxaMergeEvenOdd(BOXA* boxae, BOXA* boxao, int fillflag);
        LEPT_DLL extern BOXA* boxaTransform(BOXA* boxas, int shiftx, int shifty, float scalex, float scaley);
        LEPT_DLL extern BOX* boxTransform(BOX* box, int shiftx, int shifty, float scalex, float scaley);
        LEPT_DLL extern BOXA* boxaTransformOrdered(BOXA* boxas, int shiftx, int shifty, float scalex, float scaley, int xcen, int ycen, float angle, int order);
        LEPT_DLL extern BOX* boxTransformOrdered(BOX* boxs, int shiftx, int shifty, float scalex, float scaley, int xcen, int ycen, float angle, int order);
        LEPT_DLL extern BOXA* boxaRotateOrth(BOXA* boxas, int w, int h, int rotation);
        LEPT_DLL extern BOX* boxRotateOrth(BOX* box, int w, int h, int rotation);
        LEPT_DLL extern BOXA* boxaSort(BOXA* boxas, int sorttype, int sortorder, NUMA** pnaindex);
        LEPT_DLL extern BOXA* boxaBinSort(BOXA* boxas, int sorttype, int sortorder, NUMA** pnaindex);
        LEPT_DLL extern BOXA* boxaSortByIndex(BOXA* boxas, NUMA* naindex);
        LEPT_DLL extern BOXAA* boxaSort2d(BOXA* boxas, NUMAA** pnaad, int delta1, int delta2, int minh1);
        LEPT_DLL extern BOXAA* boxaSort2dByIndex(BOXA* boxas, NUMAA* naa);
        LEPT_DLL extern int boxaExtractAsNuma(BOXA* boxa, NUMA** pnal, NUMA** pnat, NUMA** pnar, NUMA** pnab, NUMA** pnaw, NUMA** pnah, int keepinvalid);
        LEPT_DLL extern int boxaExtractAsPta(BOXA* boxa, PTA** pptal, PTA** pptat, PTA** pptar, PTA** pptab, PTA** pptaw, PTA** pptah, int keepinvalid);
        LEPT_DLL extern int boxaGetRankVals(BOXA* boxa, float fract, l_int32* px, l_int32* py, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int boxaGetMedianVals(BOXA* boxa, l_int32* px, l_int32* py, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int boxaGetAverageSize(BOXA* boxa, l_float32* pw, l_float32* ph);
        LEPT_DLL extern int boxaaGetExtent(BOXAA* baa, l_int32* pw, l_int32* ph, BOX** pbox, BOXA** pboxa);
        LEPT_DLL extern BOXA* boxaaFlattenToBoxa(BOXAA* baa, NUMA** pnaindex, int copyflag);
        LEPT_DLL extern BOXA* boxaaFlattenAligned(BOXAA* baa, int num, BOX* fillerbox, int copyflag);
        LEPT_DLL extern BOXAA* boxaEncapsulateAligned(BOXA* boxa, int num, int copyflag);
        LEPT_DLL extern BOXAA* boxaaTranspose(BOXAA* baas);
        LEPT_DLL extern int boxaaAlignBox(BOXAA* baa, BOX* box, int delta, l_int32* pindex);
        LEPT_DLL extern PIX* pixMaskConnComp(PIX* pixs, int connectivity, BOXA** pboxa);
        LEPT_DLL extern PIX* pixMaskBoxa(PIX* pixd, PIX* pixs, BOXA* boxa, int op);
        LEPT_DLL extern PIX* pixPaintBoxa(PIX* pixs, BOXA* boxa, uint val);
        LEPT_DLL extern PIX* pixSetBlackOrWhiteBoxa(PIX* pixs, BOXA* boxa, int op);
        LEPT_DLL extern PIX* pixPaintBoxaRandom(PIX* pixs, BOXA* boxa);
        LEPT_DLL extern PIX* pixBlendBoxaRandom(PIX* pixs, BOXA* boxa, float fract);
        LEPT_DLL extern PIX* pixDrawBoxa(PIX* pixs, BOXA* boxa, int width, uint val);
        LEPT_DLL extern PIX* pixDrawBoxaRandom(PIX* pixs, BOXA* boxa, int width);
        LEPT_DLL extern PIX* boxaaDisplay(PIX* pixs, BOXAA* baa, int linewba, int linewb, uint colorba, uint colorb, int w, int h);
        LEPT_DLL extern PIXA* pixaDisplayBoxaa(PIXA* pixas, BOXAA* baa, int colorflag, int width);
        LEPT_DLL extern BOXA* pixSplitIntoBoxa(PIX* pixs, int minsum, int skipdist, int delta, int maxbg, int maxcomps, int remainder);
        LEPT_DLL extern BOXA* pixSplitComponentIntoBoxa(PIX* pix, BOX* box, int minsum, int skipdist, int delta, int maxbg, int maxcomps, int remainder);
        LEPT_DLL extern BOXA* makeMosaicStrips(l_int32 w, int h, int direction, int size);
        LEPT_DLL extern int boxaCompareRegions(BOXA* boxa1, BOXA* boxa2, int areathresh, l_int32* pnsame, l_float32* pdiffarea, l_float32* pdiffxor, PIX** ppixdb);
        LEPT_DLL extern BOX* pixSelectLargeULComp(PIX* pixs, float areaslop, int yslop, int connectivity);
        LEPT_DLL extern BOX* boxaSelectLargeULBox(BOXA* boxas, float areaslop, int yslop);
        LEPT_DLL extern BOXA* boxaSelectRange(BOXA* boxas, int first, int last, int copyflag);
        LEPT_DLL extern BOXAA* boxaaSelectRange(BOXAA* baas, int first, int last, int copyflag);
        LEPT_DLL extern BOXA* boxaSelectBySize(BOXA* boxas, int width, int height, int type, int relation, l_int32* pchanged);
        LEPT_DLL extern NUMA* boxaMakeSizeIndicator(BOXA* boxa, int width, int height, int type, int relation);
        LEPT_DLL extern BOXA* boxaSelectByArea(BOXA* boxas, int area, int relation, l_int32* pchanged);
        LEPT_DLL extern NUMA* boxaMakeAreaIndicator(BOXA* boxa, int area, int relation);
        LEPT_DLL extern BOXA* boxaSelectByWHRatio(BOXA* boxas, float ratio, int relation, l_int32* pchanged);
        LEPT_DLL extern NUMA* boxaMakeWHRatioIndicator(BOXA* boxa, float ratio, int relation);
        LEPT_DLL extern BOXA* boxaSelectWithIndicator(BOXA* boxas, NUMA* na, l_int32* pchanged);
        LEPT_DLL extern BOXA* boxaPermutePseudorandom(BOXA* boxas);
        LEPT_DLL extern BOXA* boxaPermuteRandom(BOXA* boxad, BOXA* boxas);
        LEPT_DLL extern int boxaSwapBoxes(BOXA* boxa, int i, int j);
        LEPT_DLL extern PTA* boxaConvertToPta(BOXA* boxa, int ncorners);
        LEPT_DLL extern BOXA* ptaConvertToBoxa(PTA* pta, int ncorners);
        LEPT_DLL extern PTA* boxConvertToPta(BOX* box, int ncorners);
        LEPT_DLL extern BOX* ptaConvertToBox(PTA* pta);
        LEPT_DLL extern BOXA* boxaSmoothSequenceLS(BOXA* boxas, float factor, int subflag, int maxdiff, int debug);
        LEPT_DLL extern BOXA* boxaSmoothSequenceMedian(BOXA* boxas, int halfwin, int subflag, int maxdiff, int debug);
        LEPT_DLL extern BOXA* boxaLinearFit(BOXA* boxas, float factor, int debug);
        LEPT_DLL extern BOXA* boxaWindowedMedian(BOXA* boxas, int halfwin, int debug);
        LEPT_DLL extern BOXA* boxaModifyWithBoxa(BOXA* boxas, BOXA* boxam, int subflag, int maxdiff);
        LEPT_DLL extern BOXA* boxaConstrainSize(BOXA* boxas, int width, int widthflag, int height, int heightflag);
        LEPT_DLL extern BOXA* boxaReconcileEvenOddHeight(BOXA* boxas, int sides, int delh, int op, float factor, int start);
        LEPT_DLL extern BOXA* boxaReconcilePairWidth(BOXA* boxas, int delw, int op, float factor, NUMA* na);
        LEPT_DLL extern int boxaPlotSides(BOXA* boxa, const char* plotname, NUMA **pnal, NUMA** pnat, NUMA **pnar, NUMA** pnab, PIX **ppixd );
        LEPT_DLL extern int boxaPlotSizes(BOXA* boxa, const char* plotname, NUMA **pnaw, NUMA** pnah, PIX **ppixd );
        LEPT_DLL extern BOXA* boxaFillSequence(BOXA* boxas, int useflag, int debug);
        LEPT_DLL extern int boxaGetExtent(BOXA* boxa, l_int32* pw, l_int32* ph, BOX** pbox);
        LEPT_DLL extern int boxaGetCoverage(BOXA* boxa, int wc, int hc, int exactflag, l_float32* pfract);
        LEPT_DLL extern int boxaaSizeRange(BOXAA* baa, l_int32* pminw, l_int32* pminh, l_int32* pmaxw, l_int32* pmaxh);
        LEPT_DLL extern int boxaSizeRange(BOXA* boxa, l_int32* pminw, l_int32* pminh, l_int32* pmaxw, l_int32* pmaxh);
        LEPT_DLL extern int boxaLocationRange(BOXA* boxa, l_int32* pminx, l_int32* pminy, l_int32* pmaxx, l_int32* pmaxy);
        LEPT_DLL extern int boxaGetSizes(BOXA* boxa, NUMA** pnaw, NUMA** pnah);
        LEPT_DLL extern int boxaGetArea(BOXA* boxa, l_int32* parea);
        LEPT_DLL extern PIX* boxaDisplayTiled(BOXA* boxas, PIXA* pixa, int maxwidth, int linewidth, float scalefactor, int background, int spacing, int border);
        LEPT_DLL extern L_BYTEA* l_byteaCreate(size_t nbytes);
        LEPT_DLL extern L_BYTEA* l_byteaInitFromMem(l_uint8* data, size_t size);
        LEPT_DLL extern L_BYTEA* l_byteaInitFromFile( const char* fname );
        LEPT_DLL extern L_BYTEA* l_byteaInitFromStream(FILE* fp);
        LEPT_DLL extern L_BYTEA* l_byteaCopy(L_BYTEA* bas, int copyflag);
        LEPT_DLL extern void l_byteaDestroy(L_BYTEA** pba);
        LEPT_DLL extern size_t l_byteaGetSize(L_BYTEA* ba);
        LEPT_DLL extern l_uint8* l_byteaGetData(L_BYTEA* ba, size_t* psize);
        LEPT_DLL extern l_uint8* l_byteaCopyData(L_BYTEA* ba, size_t* psize);
        LEPT_DLL extern int l_byteaAppendData(L_BYTEA* ba, l_uint8* newdata, size_t newbytes);
        LEPT_DLL extern int l_byteaAppendString(L_BYTEA* ba, char* str);
        LEPT_DLL extern int l_byteaJoin(L_BYTEA* ba1, L_BYTEA** pba2);
        LEPT_DLL extern int l_byteaSplit(L_BYTEA* ba1, size_t splitloc, L_BYTEA** pba2);
        LEPT_DLL extern int l_byteaFindEachSequence(L_BYTEA* ba, l_uint8* sequence, int seqlen, L_DNA** pda);
        LEPT_DLL extern int l_byteaWrite( const char* fname, L_BYTEA *ba, size_t startloc, size_t endloc );
        LEPT_DLL extern int l_byteaWriteStream(FILE* fp, L_BYTEA* ba, size_t startloc, size_t endloc);
        LEPT_DLL extern CCBORDA* ccbaCreate(PIX* pixs, int n);
        LEPT_DLL extern void ccbaDestroy(CCBORDA** pccba);
        LEPT_DLL extern CCBORD* ccbCreate(PIX* pixs);
        LEPT_DLL extern void ccbDestroy(CCBORD** pccb);
        LEPT_DLL extern int ccbaAddCcb(CCBORDA* ccba, CCBORD* ccb);
        LEPT_DLL extern int ccbaGetCount(CCBORDA* ccba);
        LEPT_DLL extern CCBORD* ccbaGetCcb(CCBORDA* ccba, int index);
        LEPT_DLL extern CCBORDA* pixGetAllCCBorders(PIX* pixs);
        LEPT_DLL extern CCBORD* pixGetCCBorders(PIX* pixs, BOX* box);
        LEPT_DLL extern PTAA* pixGetOuterBordersPtaa(PIX* pixs);
        LEPT_DLL extern PTA* pixGetOuterBorderPta(PIX* pixs, BOX* box);
        LEPT_DLL extern int pixGetOuterBorder(CCBORD* ccb, PIX* pixs, BOX* box);
        LEPT_DLL extern int pixGetHoleBorder(CCBORD* ccb, PIX* pixs, BOX* box, int xs, int ys);
        LEPT_DLL extern int findNextBorderPixel(l_int32 w, int h, l_uint32* data, int wpl, int px, int py, l_int32* pqpos, l_int32* pnpx, l_int32* pnpy);
        LEPT_DLL extern void locateOutsideSeedPixel(l_int32 fpx, int fpy, int spx, int spy, l_int32* pxs, l_int32* pys);
        LEPT_DLL extern int ccbaGenerateGlobalLocs(CCBORDA* ccba);
        LEPT_DLL extern int ccbaGenerateStepChains(CCBORDA* ccba);
        LEPT_DLL extern int ccbaStepChainsToPixCoords(CCBORDA* ccba, int coordtype);
        LEPT_DLL extern int ccbaGenerateSPGlobalLocs(CCBORDA* ccba, int ptsflag);
        LEPT_DLL extern int ccbaGenerateSinglePath(CCBORDA* ccba);
        LEPT_DLL extern PTA* getCutPathForHole(PIX* pix, PTA* pta, BOX* boxinner, l_int32* pdir, l_int32* plen);
        LEPT_DLL extern PIX* ccbaDisplayBorder(CCBORDA* ccba);
        LEPT_DLL extern PIX* ccbaDisplaySPBorder(CCBORDA* ccba);
        LEPT_DLL extern PIX* ccbaDisplayImage1(CCBORDA* ccba);
        LEPT_DLL extern PIX* ccbaDisplayImage2(CCBORDA* ccba);
        LEPT_DLL extern int ccbaWrite( const char* filename, CCBORDA *ccba );
        LEPT_DLL extern int ccbaWriteStream(FILE* fp, CCBORDA* ccba);
        LEPT_DLL extern CCBORDA* ccbaRead( const char* filename );
        LEPT_DLL extern CCBORDA* ccbaReadStream(FILE* fp);
        LEPT_DLL extern int ccbaWriteSVG( const char* filename, CCBORDA *ccba );
        LEPT_DLL extern char* ccbaWriteSVGString( const char* filename, CCBORDA *ccba );
        LEPT_DLL extern PIXA* pixaThinConnected(PIXA* pixas, int type, int connectivity, int maxiters);
        LEPT_DLL extern PIX* pixThinConnected(PIX* pixs, int type, int connectivity, int maxiters);
        LEPT_DLL extern PIX* pixThinConnectedBySet(PIX* pixs, int type, SELA* sela, int maxiters);
        LEPT_DLL extern SELA* selaMakeThinSets(l_int32 index, int debug);
        LEPT_DLL extern int jbCorrelation( const char* dirin, float thresh, float weight, int components, const char* rootname, int firstpage, int npages, int renderflag );
        LEPT_DLL extern int jbRankHaus( const char* dirin, int size, float rank, int components, const char* rootname, int firstpage, int npages, int renderflag );
        LEPT_DLL extern JBCLASSER* jbWordsInTextlines( const char* dirin, int reduction, int maxwidth, int maxheight, float thresh, float weight, NUMA** pnatl, int firstpage, int npages );
        LEPT_DLL extern int pixGetWordsInTextlines(PIX* pixs, int reduction, int minwidth, int minheight, int maxwidth, int maxheight, BOXA** pboxad, PIXA** ppixad, NUMA** pnai);
        LEPT_DLL extern int pixGetWordBoxesInTextlines(PIX* pixs, int reduction, int minwidth, int minheight, int maxwidth, int maxheight, BOXA** pboxad, NUMA** pnai);
        LEPT_DLL extern NUMAA* boxaExtractSortedPattern(BOXA* boxa, NUMA* na);
        LEPT_DLL extern int numaaCompareImagesByBoxes(NUMAA* naa1, NUMAA* naa2, int nperline, int nreq, int maxshiftx, int maxshifty, int delx, int dely, l_int32* psame, int debugflag);
        LEPT_DLL extern int pixColorContent(PIX* pixs, int rwhite, int gwhite, int bwhite, int mingray, PIX** ppixr, PIX** ppixg, PIX** ppixb);
        LEPT_DLL extern PIX* pixColorMagnitude(PIX* pixs, int rwhite, int gwhite, int bwhite, int type);
        LEPT_DLL extern PIX* pixMaskOverColorPixels(PIX* pixs, int threshdiff, int mindist);
        LEPT_DLL extern PIX* pixMaskOverColorRange(PIX* pixs, int rmin, int rmax, int gmin, int gmax, int bmin, int bmax);
        LEPT_DLL extern int pixColorFraction(PIX* pixs, int darkthresh, int lightthresh, int diffthresh, int factor, l_float32* ppixfract, l_float32* pcolorfract);
        LEPT_DLL extern int pixFindColorRegions(PIX* pixs, PIX* pixm, int factor, int lightthresh, int darkthresh, int mindiff, int colordiff, float edgefract, l_float32* pcolorfract, PIX** pcolormask1, PIX** pcolormask2, PIXA* pixadb);
        LEPT_DLL extern int pixNumSignificantGrayColors(PIX* pixs, int darkthresh, int lightthresh, float minfract, int factor, l_int32* pncolors);
        LEPT_DLL extern int pixColorsForQuantization(PIX* pixs, int thresh, l_int32* pncolors, l_int32* piscolor, int debug);
        LEPT_DLL extern int pixNumColors(PIX* pixs, int factor, l_int32* pncolors);
        LEPT_DLL extern int pixGetMostPopulatedColors(PIX* pixs, int sigbits, int factor, int ncolors, l_uint32** parray, PIXCMAP** pcmap);
        LEPT_DLL extern PIX* pixSimpleColorQuantize(PIX* pixs, int sigbits, int factor, int ncolors);
        LEPT_DLL extern NUMA* pixGetRGBHistogram(PIX* pixs, int sigbits, int factor);
        LEPT_DLL extern int makeRGBIndexTables(l_uint32** prtab, l_uint32** pgtab, l_uint32** pbtab, int sigbits);
        LEPT_DLL extern int getRGBFromIndex(l_uint32 index, int sigbits, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern int pixHasHighlightRed(PIX* pixs, int factor, float fract, float fthresh, l_int32* phasred, l_float32* pratio, PIX** ppixdb);
        LEPT_DLL extern PIX* pixColorGrayRegions(PIX* pixs, BOXA* boxa, int type, int thresh, int rval, int gval, int bval);
        LEPT_DLL extern int pixColorGray(PIX* pixs, BOX* box, int type, int thresh, int rval, int gval, int bval);
        LEPT_DLL extern PIX* pixColorGrayMasked(PIX* pixs, PIX* pixm, int type, int thresh, int rval, int gval, int bval);
        LEPT_DLL extern PIX* pixSnapColor(PIX* pixd, PIX* pixs, uint srcval, uint dstval, int diff);
        LEPT_DLL extern PIX* pixSnapColorCmap(PIX* pixd, PIX* pixs, uint srcval, uint dstval, int diff);
        LEPT_DLL extern PIX* pixLinearMapToTargetColor(PIX* pixd, PIX* pixs, uint srcval, uint dstval);
        LEPT_DLL extern int pixelLinearMapToTargetColor(l_uint32 scolor, uint srcmap, uint dstmap, l_uint32* pdcolor);
        LEPT_DLL extern PIX* pixShiftByComponent(PIX* pixd, PIX* pixs, uint srcval, uint dstval);
        LEPT_DLL extern int pixelShiftByComponent(l_int32 rval, int gval, int bval, uint srcval, uint dstval, l_uint32* ppixel);
        LEPT_DLL extern int pixelFractionalShift(l_int32 rval, int gval, int bval, float fraction, l_uint32* ppixel);
        LEPT_DLL extern PIXCMAP* pixcmapCreate(l_int32 depth);
        LEPT_DLL extern PIXCMAP* pixcmapCreateRandom(l_int32 depth, int hasblack, int haswhite);
        LEPT_DLL extern PIXCMAP* pixcmapCreateLinear(l_int32 d, int nlevels);
        LEPT_DLL extern PIXCMAP* pixcmapCopy(PIXCMAP* cmaps);
        LEPT_DLL extern void pixcmapDestroy(PIXCMAP** pcmap);
        LEPT_DLL extern int pixcmapAddColor(PIXCMAP* cmap, int rval, int gval, int bval);
        LEPT_DLL extern int pixcmapAddRGBA(PIXCMAP* cmap, int rval, int gval, int bval, int aval);
        LEPT_DLL extern int pixcmapAddNewColor(PIXCMAP* cmap, int rval, int gval, int bval, l_int32* pindex);
        LEPT_DLL extern int pixcmapAddNearestColor(PIXCMAP* cmap, int rval, int gval, int bval, l_int32* pindex);
        LEPT_DLL extern int pixcmapUsableColor(PIXCMAP* cmap, int rval, int gval, int bval, l_int32* pusable);
        LEPT_DLL extern int pixcmapAddBlackOrWhite(PIXCMAP* cmap, int color, l_int32* pindex);
        LEPT_DLL extern int pixcmapSetBlackAndWhite(PIXCMAP* cmap, int setblack, int setwhite);
        LEPT_DLL extern int pixcmapGetCount(PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapGetFreeCount(PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapGetDepth(PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapGetMinDepth(PIXCMAP* cmap, l_int32* pmindepth);
        LEPT_DLL extern int pixcmapClear(PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapGetColor(PIXCMAP* cmap, int index, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern int pixcmapGetColor32(PIXCMAP* cmap, int index, l_uint32* pval32);
        LEPT_DLL extern int pixcmapGetRGBA(PIXCMAP* cmap, int index, l_int32* prval, l_int32* pgval, l_int32* pbval, l_int32* paval);
        LEPT_DLL extern int pixcmapGetRGBA32(PIXCMAP* cmap, int index, l_uint32* pval32);
        LEPT_DLL extern int pixcmapResetColor(PIXCMAP* cmap, int index, int rval, int gval, int bval);
        LEPT_DLL extern int pixcmapSetAlpha(PIXCMAP* cmap, int index, int aval);
        LEPT_DLL extern int pixcmapGetIndex(PIXCMAP* cmap, int rval, int gval, int bval, l_int32* pindex);
        LEPT_DLL extern int pixcmapHasColor(PIXCMAP* cmap, l_int32* pcolor);
        LEPT_DLL extern int pixcmapIsOpaque(PIXCMAP* cmap, l_int32* popaque);
        LEPT_DLL extern int pixcmapIsBlackAndWhite(PIXCMAP* cmap, l_int32* pblackwhite);
        LEPT_DLL extern int pixcmapCountGrayColors(PIXCMAP* cmap, l_int32* pngray);
        LEPT_DLL extern int pixcmapGetRankIntensity(PIXCMAP* cmap, float rankval, l_int32* pindex);
        LEPT_DLL extern int pixcmapGetNearestIndex(PIXCMAP* cmap, int rval, int gval, int bval, l_int32* pindex);
        LEPT_DLL extern int pixcmapGetNearestGrayIndex(PIXCMAP* cmap, int val, l_int32* pindex);
        LEPT_DLL extern int pixcmapGetDistanceToColor(PIXCMAP* cmap, int index, int rval, int gval, int bval, l_int32* pdist);
        LEPT_DLL extern int pixcmapGetRangeValues(PIXCMAP* cmap, int select, l_int32* pminval, l_int32* pmaxval, l_int32* pminindex, l_int32* pmaxindex);
        LEPT_DLL extern PIXCMAP* pixcmapGrayToColor(l_uint32 color);
        LEPT_DLL extern PIXCMAP* pixcmapColorToGray(PIXCMAP* cmaps, float rwt, float gwt, float bwt);
        LEPT_DLL extern PIXCMAP* pixcmapConvertTo4(PIXCMAP* cmaps);
        LEPT_DLL extern PIXCMAP* pixcmapConvertTo8(PIXCMAP* cmaps);
        LEPT_DLL extern PIXCMAP* pixcmapRead( const char* filename );
        LEPT_DLL extern PIXCMAP* pixcmapReadStream(FILE* fp);
        LEPT_DLL extern PIXCMAP* pixcmapReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixcmapWrite( const char* filename, PIXCMAP *cmap );
        LEPT_DLL extern int pixcmapWriteStream(FILE* fp, PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapWriteMem(l_uint8** pdata, size_t* psize, PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapToArrays(PIXCMAP* cmap, l_int32** prmap, l_int32** pgmap, l_int32** pbmap, l_int32** pamap);
        LEPT_DLL extern int pixcmapToRGBTable(PIXCMAP* cmap, l_uint32** ptab, l_int32* pncolors);
        LEPT_DLL extern int pixcmapSerializeToMemory(PIXCMAP* cmap, int cpc, l_int32* pncolors, l_uint8** pdata);
        LEPT_DLL extern PIXCMAP* pixcmapDeserializeFromMemory(l_uint8* data, int cpc, int ncolors);
        LEPT_DLL extern char* pixcmapConvertToHex(l_uint8* data, int ncolors);
        LEPT_DLL extern int pixcmapGammaTRC(PIXCMAP* cmap, float gamma, int minval, int maxval);
        LEPT_DLL extern int pixcmapContrastTRC(PIXCMAP* cmap, float factor);
        LEPT_DLL extern int pixcmapShiftIntensity(PIXCMAP* cmap, float fraction);
        LEPT_DLL extern int pixcmapShiftByComponent(PIXCMAP* cmap, uint srcval, uint dstval);
        LEPT_DLL extern PIX* pixColorMorph(PIX* pixs, int type, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOctreeColorQuant(PIX* pixs, int colors, int ditherflag);
        LEPT_DLL extern PIX* pixOctreeColorQuantGeneral(PIX* pixs, int colors, int ditherflag, float validthresh, float colorthresh);
        LEPT_DLL extern int makeRGBToIndexTables(l_uint32** prtab, l_uint32** pgtab, l_uint32** pbtab, int cqlevels);
        LEPT_DLL extern void getOctcubeIndexFromRGB(l_int32 rval, int gval, int bval, l_uint32* rtab, l_uint32* gtab, l_uint32* btab, l_uint32* pindex);
        LEPT_DLL extern PIX* pixOctreeQuantByPopulation(PIX* pixs, int level, int ditherflag);
        LEPT_DLL extern PIX* pixOctreeQuantNumColors(PIX* pixs, int maxcolors, int subsample);
        LEPT_DLL extern PIX* pixOctcubeQuantMixedWithGray(PIX* pixs, int depth, int graylevels, int delta);
        LEPT_DLL extern PIX* pixFixedOctcubeQuant256(PIX* pixs, int ditherflag);
        LEPT_DLL extern PIX* pixFewColorsOctcubeQuant1(PIX* pixs, int level);
        LEPT_DLL extern PIX* pixFewColorsOctcubeQuant2(PIX* pixs, int level, NUMA* na, int ncolors, l_int32* pnerrors);
        LEPT_DLL extern PIX* pixFewColorsOctcubeQuantMixed(PIX* pixs, int level, int darkthresh, int lightthresh, int diffthresh, float minfract, int maxspan);
        LEPT_DLL extern PIX* pixFixedOctcubeQuantGenRGB(PIX* pixs, int level);
        LEPT_DLL extern PIX* pixQuantFromCmap(PIX* pixs, PIXCMAP* cmap, int mindepth, int level, int metric);
        LEPT_DLL extern PIX* pixOctcubeQuantFromCmap(PIX* pixs, PIXCMAP* cmap, int mindepth, int level, int metric);
        LEPT_DLL extern NUMA* pixOctcubeHistogram(PIX* pixs, int level, l_int32* pncolors);
        LEPT_DLL extern l_int32* pixcmapToOctcubeLUT(PIXCMAP* cmap, int level, int metric);
        LEPT_DLL extern int pixRemoveUnusedColors(PIX* pixs);
        LEPT_DLL extern int pixNumberOccupiedOctcubes(PIX* pix, int level, int mincount, float minfract, l_int32* pncolors);
        LEPT_DLL extern PIX* pixMedianCutQuant(PIX* pixs, int ditherflag);
        LEPT_DLL extern PIX* pixMedianCutQuantGeneral(PIX* pixs, int ditherflag, int outdepth, int maxcolors, int sigbits, int maxsub, int checkbw);
        LEPT_DLL extern PIX* pixMedianCutQuantMixed(PIX* pixs, int ncolor, int ngray, int darkthresh, int lightthresh, int diffthresh);
        LEPT_DLL extern PIX* pixFewColorsMedianCutQuantMixed(PIX* pixs, int ncolor, int ngray, int maxncolors, int darkthresh, int lightthresh, int diffthresh);
        LEPT_DLL extern l_int32* pixMedianCutHisto(PIX* pixs, int sigbits, int subsample);
        LEPT_DLL extern PIX* pixColorSegment(PIX* pixs, int maxdist, int maxcolors, int selsize, int finalcolors, int debugflag);
        LEPT_DLL extern PIX* pixColorSegmentCluster(PIX* pixs, int maxdist, int maxcolors, int debugflag);
        LEPT_DLL extern int pixAssignToNearestColor(PIX* pixd, PIX* pixs, PIX* pixm, int level, l_int32* countarray);
        LEPT_DLL extern int pixColorSegmentClean(PIX* pixs, int selsize, l_int32* countarray);
        LEPT_DLL extern int pixColorSegmentRemoveColors(PIX* pixd, PIX* pixs, int finalcolors);
        LEPT_DLL extern PIX* pixConvertRGBToHSV(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixConvertHSVToRGB(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int convertRGBToHSV(l_int32 rval, int gval, int bval, l_int32* phval, l_int32* psval, l_int32* pvval);
        LEPT_DLL extern int convertHSVToRGB(l_int32 hval, int sval, int vval, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern int pixcmapConvertRGBToHSV(PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapConvertHSVToRGB(PIXCMAP* cmap);
        LEPT_DLL extern PIX* pixConvertRGBToHue(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertRGBToSaturation(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertRGBToValue(PIX* pixs);
        LEPT_DLL extern PIX* pixMakeRangeMaskHS(PIX* pixs, int huecenter, int huehw, int satcenter, int sathw, int regionflag);
        LEPT_DLL extern PIX* pixMakeRangeMaskHV(PIX* pixs, int huecenter, int huehw, int valcenter, int valhw, int regionflag);
        LEPT_DLL extern PIX* pixMakeRangeMaskSV(PIX* pixs, int satcenter, int sathw, int valcenter, int valhw, int regionflag);
        LEPT_DLL extern PIX* pixMakeHistoHS(PIX* pixs, int factor, NUMA** pnahue, NUMA** pnasat);
        LEPT_DLL extern PIX* pixMakeHistoHV(PIX* pixs, int factor, NUMA** pnahue, NUMA** pnaval);
        LEPT_DLL extern PIX* pixMakeHistoSV(PIX* pixs, int factor, NUMA** pnasat, NUMA** pnaval);
        LEPT_DLL extern int pixFindHistoPeaksHSV(PIX* pixs, int type, int width, int height, int npeaks, float erasefactor, PTA** ppta, NUMA** pnatot, PIXA** ppixa);
        LEPT_DLL extern PIX* displayHSVColorRange(l_int32 hval, int sval, int vval, int huehw, int sathw, int nsamp, int factor);
        LEPT_DLL extern PIX* pixConvertRGBToYUV(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixConvertYUVToRGB(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int convertRGBToYUV(l_int32 rval, int gval, int bval, l_int32* pyval, l_int32* puval, l_int32* pvval);
        LEPT_DLL extern int convertYUVToRGB(l_int32 yval, int uval, int vval, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern int pixcmapConvertRGBToYUV(PIXCMAP* cmap);
        LEPT_DLL extern int pixcmapConvertYUVToRGB(PIXCMAP* cmap);
        LEPT_DLL extern FPIXA* pixConvertRGBToXYZ(PIX* pixs);
        LEPT_DLL extern PIX* fpixaConvertXYZToRGB(FPIXA* fpixa);
        LEPT_DLL extern int convertRGBToXYZ(l_int32 rval, int gval, int bval, l_float32* pfxval, l_float32* pfyval, l_float32* pfzval);
        LEPT_DLL extern int convertXYZToRGB(l_float32 fxval, float fyval, float fzval, int blackout, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern FPIXA* fpixaConvertXYZToLAB(FPIXA* fpixas);
        LEPT_DLL extern FPIXA* fpixaConvertLABToXYZ(FPIXA* fpixas);
        LEPT_DLL extern int convertXYZToLAB(l_float32 xval, float yval, float zval, l_float32* plval, l_float32* paval, l_float32* pbval);
        LEPT_DLL extern int convertLABToXYZ(l_float32 lval, float aval, float bval, l_float32* pxval, l_float32* pyval, l_float32* pzval);
        LEPT_DLL extern FPIXA* pixConvertRGBToLAB(PIX* pixs);
        LEPT_DLL extern PIX* fpixaConvertLABToRGB(FPIXA* fpixa);
        LEPT_DLL extern int convertRGBToLAB(l_int32 rval, int gval, int bval, l_float32* pflval, l_float32* pfaval, l_float32* pfbval);
        LEPT_DLL extern int convertLABToRGB(l_float32 flval, float faval, float fbval, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern int pixEqual(PIX* pix1, PIX* pix2, l_int32* psame);
        LEPT_DLL extern int pixEqualWithAlpha(PIX* pix1, PIX* pix2, int use_alpha, l_int32* psame);
        LEPT_DLL extern int pixEqualWithCmap(PIX* pix1, PIX* pix2, l_int32* psame);
        LEPT_DLL extern int cmapEqual(PIXCMAP* cmap1, PIXCMAP* cmap2, int ncomps, l_int32* psame);
        LEPT_DLL extern int pixUsesCmapColor(PIX* pixs, l_int32* pcolor);
        LEPT_DLL extern int pixCorrelationBinary(PIX* pix1, PIX* pix2, l_float32* pval);
        LEPT_DLL extern PIX* pixDisplayDiffBinary(PIX* pix1, PIX* pix2);
        LEPT_DLL extern int pixCompareBinary(PIX* pix1, PIX* pix2, int comptype, l_float32* pfract, PIX** ppixdiff);
        LEPT_DLL extern int pixCompareGrayOrRGB(PIX* pix1, PIX* pix2, int comptype, int plottype, l_int32* psame, l_float32* pdiff, l_float32* prmsdiff, PIX** ppixdiff);
        LEPT_DLL extern int pixCompareGray(PIX* pix1, PIX* pix2, int comptype, int plottype, l_int32* psame, l_float32* pdiff, l_float32* prmsdiff, PIX** ppixdiff);
        LEPT_DLL extern int pixCompareRGB(PIX* pix1, PIX* pix2, int comptype, int plottype, l_int32* psame, l_float32* pdiff, l_float32* prmsdiff, PIX** ppixdiff);
        LEPT_DLL extern int pixCompareTiled(PIX* pix1, PIX* pix2, int sx, int sy, int type, PIX** ppixdiff);
        LEPT_DLL extern NUMA* pixCompareRankDifference(PIX* pix1, PIX* pix2, int factor);
        LEPT_DLL extern int pixTestForSimilarity(PIX* pix1, PIX* pix2, int factor, int mindiff, float maxfract, float maxave, l_int32* psimilar, int printstats);
        LEPT_DLL extern int pixGetDifferenceStats(PIX* pix1, PIX* pix2, int factor, int mindiff, l_float32* pfractdiff, l_float32* pavediff, int printstats);
        LEPT_DLL extern NUMA* pixGetDifferenceHistogram(PIX* pix1, PIX* pix2, int factor);
        LEPT_DLL extern int pixGetPerceptualDiff(PIX* pixs1, PIX* pixs2, int sampling, int dilation, int mindiff, l_float32* pfract, PIX** ppixdiff1, PIX** ppixdiff2);
        LEPT_DLL extern int pixGetPSNR(PIX* pix1, PIX* pix2, int factor, l_float32* ppsnr);
        LEPT_DLL extern int pixaComparePhotoRegionsByHisto(PIXA* pixa, float minratio, float textthresh, int factor, int nx, int ny, float simthresh, NUMA** pnai, l_float32** pscores, PIX** ppixd);
        LEPT_DLL extern int pixComparePhotoRegionsByHisto(PIX* pix1, PIX* pix2, BOX* box1, BOX* box2, float minratio, int factor, int nx, int ny, l_float32* pscore, int debugflag);
        LEPT_DLL extern int pixGenPhotoHistos(PIX* pixs, BOX* box, int factor, float thresh, int nx, int ny, NUMAA** pnaa, l_int32* pw, l_int32* ph, int debugflag);
        LEPT_DLL extern PIX* pixPadToCenterCentroid(PIX* pixs, int factor);
        LEPT_DLL extern int pixCentroid8(PIX* pixs, int factor, l_float32* pcx, l_float32* pcy);
        LEPT_DLL extern int pixDecideIfPhotoImage(PIX* pix, int factor, int nx, int ny, float thresh, NUMAA** pnaa, PIXA* pixadebug);
        LEPT_DLL extern int compareTilesByHisto(NUMAA* naa1, NUMAA* naa2, float minratio, int w1, int h1, int w2, int h2, l_float32* pscore, PIXA* pixadebug);
        LEPT_DLL extern int pixCompareGrayByHisto(PIX* pix1, PIX* pix2, BOX* box1, BOX* box2, float minratio, int maxgray, int factor, int nx, int ny, l_float32* pscore, int debugflag);
        LEPT_DLL extern int pixCropAlignedToCentroid(PIX* pix1, PIX* pix2, int factor, BOX** pbox1, BOX** pbox2);
        LEPT_DLL extern l_uint8* l_compressGrayHistograms(NUMAA* naa, int w, int h, size_t* psize);
        LEPT_DLL extern NUMAA* l_uncompressGrayHistograms(l_uint8* bytea, size_t size, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int pixCompareWithTranslation(PIX* pix1, PIX* pix2, int thresh, l_int32* pdelx, l_int32* pdely, l_float32* pscore, int debugflag);
        LEPT_DLL extern int pixBestCorrelation(PIX* pix1, PIX* pix2, int area1, int area2, int etransx, int etransy, int maxshift, l_int32* tab8, l_int32* pdelx, l_int32* pdely, l_float32* pscore, int debugflag);
        LEPT_DLL extern BOXA* pixConnComp(PIX* pixs, PIXA** ppixa, int connectivity);
        LEPT_DLL extern BOXA* pixConnCompPixa(PIX* pixs, PIXA** ppixa, int connectivity);
        LEPT_DLL extern BOXA* pixConnCompBB(PIX* pixs, int connectivity);
        LEPT_DLL extern int pixCountConnComp(PIX* pixs, int connectivity, l_int32* pcount);
        LEPT_DLL extern int nextOnPixelInRaster(PIX* pixs, int xstart, int ystart, l_int32* px, l_int32* py);
        LEPT_DLL extern int nextOnPixelInRasterLow(l_uint32* data, int w, int h, int wpl, int xstart, int ystart, l_int32* px, l_int32* py);
        LEPT_DLL extern BOX* pixSeedfillBB(PIX* pixs, L_STACK* stack, int x, int y, int connectivity);
        LEPT_DLL extern BOX* pixSeedfill4BB(PIX* pixs, L_STACK* stack, int x, int y);
        LEPT_DLL extern BOX* pixSeedfill8BB(PIX* pixs, L_STACK* stack, int x, int y);
        LEPT_DLL extern int pixSeedfill(PIX* pixs, L_STACK* stack, int x, int y, int connectivity);
        LEPT_DLL extern int pixSeedfill4(PIX* pixs, L_STACK* stack, int x, int y);
        LEPT_DLL extern int pixSeedfill8(PIX* pixs, L_STACK* stack, int x, int y);
        LEPT_DLL extern int convertFilesTo1bpp( const char* dirin, const char* substr, int upscaling, int thresh, int firstpage, int npages, const char* dirout, int outformat );
        LEPT_DLL extern PIX* pixBlockconv(PIX* pix, int wc, int hc);
        LEPT_DLL extern PIX* pixBlockconvGray(PIX* pixs, PIX* pixacc, int wc, int hc);
        LEPT_DLL extern PIX* pixBlockconvAccum(PIX* pixs);
        LEPT_DLL extern PIX* pixBlockconvGrayUnnormalized(PIX* pixs, int wc, int hc);
        LEPT_DLL extern PIX* pixBlockconvTiled(PIX* pix, int wc, int hc, int nx, int ny);
        LEPT_DLL extern PIX* pixBlockconvGrayTile(PIX* pixs, PIX* pixacc, int wc, int hc);
        LEPT_DLL extern int pixWindowedStats(PIX* pixs, int wc, int hc, int hasborder, PIX** ppixm, PIX** ppixms, FPIX** pfpixv, FPIX** pfpixrv);
        LEPT_DLL extern PIX* pixWindowedMean(PIX* pixs, int wc, int hc, int hasborder, int normflag);
        LEPT_DLL extern PIX* pixWindowedMeanSquare(PIX* pixs, int wc, int hc, int hasborder);
        LEPT_DLL extern int pixWindowedVariance(PIX* pixm, PIX* pixms, FPIX** pfpixv, FPIX** pfpixrv);
        LEPT_DLL extern DPIX* pixMeanSquareAccum(PIX* pixs);
        LEPT_DLL extern PIX* pixBlockrank(PIX* pixs, PIX* pixacc, int wc, int hc, float rank);
        LEPT_DLL extern PIX* pixBlocksum(PIX* pixs, PIX* pixacc, int wc, int hc);
        LEPT_DLL extern PIX* pixCensusTransform(PIX* pixs, int halfsize, PIX* pixacc);
        LEPT_DLL extern PIX* pixConvolve(PIX* pixs, L_KERNEL* kel, int outdepth, int normflag);
        LEPT_DLL extern PIX* pixConvolveSep(PIX* pixs, L_KERNEL* kelx, L_KERNEL* kely, int outdepth, int normflag);
        LEPT_DLL extern PIX* pixConvolveRGB(PIX* pixs, L_KERNEL* kel);
        LEPT_DLL extern PIX* pixConvolveRGBSep(PIX* pixs, L_KERNEL* kelx, L_KERNEL* kely);
        LEPT_DLL extern FPIX* fpixConvolve(FPIX* fpixs, L_KERNEL* kel, int normflag);
        LEPT_DLL extern FPIX* fpixConvolveSep(FPIX* fpixs, L_KERNEL* kelx, L_KERNEL* kely, int normflag);
        LEPT_DLL extern PIX* pixConvolveWithBias(PIX* pixs, L_KERNEL* kel1, L_KERNEL* kel2, int force8, l_int32* pbias);
        LEPT_DLL extern void l_setConvolveSampling(l_int32 xfact, int yfact);
        LEPT_DLL extern PIX* pixAddGaussianNoise(PIX* pixs, float stdev);
        LEPT_DLL extern float gaussDistribSampling();
        LEPT_DLL extern int pixCorrelationScore(PIX* pix1, PIX* pix2, int area1, int area2, float delx, float dely, int maxdiffw, int maxdiffh, l_int32* tab, l_float32* pscore);
        LEPT_DLL extern int pixCorrelationScoreThresholded(PIX* pix1, PIX* pix2, int area1, int area2, float delx, float dely, int maxdiffw, int maxdiffh, l_int32* tab, l_int32* downcount, float score_threshold);
        LEPT_DLL extern int pixCorrelationScoreSimple(PIX* pix1, PIX* pix2, int area1, int area2, float delx, float dely, int maxdiffw, int maxdiffh, l_int32* tab, l_float32* pscore);
        LEPT_DLL extern int pixCorrelationScoreShifted(PIX* pix1, PIX* pix2, int area1, int area2, int delx, int dely, l_int32* tab, l_float32* pscore);
        LEPT_DLL extern L_DEWARP* dewarpCreate(PIX* pixs, int pageno);
        LEPT_DLL extern L_DEWARP* dewarpCreateRef(l_int32 pageno, int refpage);
        LEPT_DLL extern void dewarpDestroy(L_DEWARP** pdew);
        LEPT_DLL extern L_DEWARPA* dewarpaCreate(l_int32 nptrs, int sampling, int redfactor, int minlines, int maxdist);
        LEPT_DLL extern L_DEWARPA* dewarpaCreateFromPixacomp(PIXAC* pixac, int useboth, int sampling, int minlines, int maxdist);
        LEPT_DLL extern void dewarpaDestroy(L_DEWARPA** pdewa);
        LEPT_DLL extern int dewarpaDestroyDewarp(L_DEWARPA* dewa, int pageno);
        LEPT_DLL extern int dewarpaInsertDewarp(L_DEWARPA* dewa, L_DEWARP* dew);
        LEPT_DLL extern L_DEWARP* dewarpaGetDewarp(L_DEWARPA* dewa, int index);
        LEPT_DLL extern int dewarpaSetCurvatures(L_DEWARPA* dewa, int max_linecurv, int min_diff_linecurv, int max_diff_linecurv, int max_edgecurv, int max_diff_edgecurv, int max_edgeslope);
        LEPT_DLL extern int dewarpaUseBothArrays(L_DEWARPA* dewa, int useboth);
        LEPT_DLL extern int dewarpaSetCheckColumns(L_DEWARPA* dewa, int check_columns);
        LEPT_DLL extern int dewarpaSetMaxDistance(L_DEWARPA* dewa, int maxdist);
        LEPT_DLL extern L_DEWARP* dewarpRead( const char* filename );
        LEPT_DLL extern L_DEWARP* dewarpReadStream(FILE* fp);
        LEPT_DLL extern L_DEWARP* dewarpReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int dewarpWrite( const char* filename, L_DEWARP *dew );
        LEPT_DLL extern int dewarpWriteStream(FILE* fp, L_DEWARP* dew);
        LEPT_DLL extern int dewarpWriteMem(l_uint8** pdata, size_t* psize, L_DEWARP* dew);
        LEPT_DLL extern L_DEWARPA* dewarpaRead( const char* filename );
        LEPT_DLL extern L_DEWARPA* dewarpaReadStream(FILE* fp);
        LEPT_DLL extern L_DEWARPA* dewarpaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int dewarpaWrite( const char* filename, L_DEWARPA *dewa );
        LEPT_DLL extern int dewarpaWriteStream(FILE* fp, L_DEWARPA* dewa);
        LEPT_DLL extern int dewarpaWriteMem(l_uint8** pdata, size_t* psize, L_DEWARPA* dewa);
        LEPT_DLL extern int dewarpBuildPageModel(L_DEWARP* dew, const char* debugfile );
        LEPT_DLL extern int dewarpFindVertDisparity(L_DEWARP* dew, PTAA* ptaa, int rotflag);
        LEPT_DLL extern int dewarpFindHorizDisparity(L_DEWARP* dew, PTAA* ptaa);
        LEPT_DLL extern PTAA* dewarpGetTextlineCenters(PIX* pixs, int debugflag);
        LEPT_DLL extern PTAA* dewarpRemoveShortLines(PIX* pixs, PTAA* ptaas, float fract, int debugflag);
        LEPT_DLL extern int dewarpFindHorizSlopeDisparity(L_DEWARP* dew, PIX* pixb, float fractthresh, int parity);
        LEPT_DLL extern int dewarpBuildLineModel(L_DEWARP* dew, int opensize, const char* debugfile );
        LEPT_DLL extern int dewarpaModelStatus(L_DEWARPA* dewa, int pageno, l_int32* pvsuccess, l_int32* phsuccess);
        LEPT_DLL extern int dewarpaApplyDisparity(L_DEWARPA* dewa, int pageno, PIX* pixs, int grayin, int x, int y, PIX** ppixd, const char* debugfile );
        LEPT_DLL extern int dewarpaApplyDisparityBoxa(L_DEWARPA* dewa, int pageno, PIX* pixs, BOXA* boxas, int mapdir, int x, int y, BOXA** pboxad, const char* debugfile );
        LEPT_DLL extern int dewarpMinimize(L_DEWARP* dew);
        LEPT_DLL extern int dewarpPopulateFullRes(L_DEWARP* dew, PIX* pix, int x, int y);
        LEPT_DLL extern int dewarpSinglePage(PIX* pixs, int thresh, int adaptive, int useboth, int check_columns, PIX** ppixd, L_DEWARPA** pdewa, int debug);
        LEPT_DLL extern int dewarpSinglePageInit(PIX* pixs, int thresh, int adaptive, int useboth, int check_columns, PIX** ppixb, L_DEWARPA** pdewa);
        LEPT_DLL extern int dewarpSinglePageRun(PIX* pixs, PIX* pixb, L_DEWARPA* dewa, PIX** ppixd, int debug);
        LEPT_DLL extern int dewarpaListPages(L_DEWARPA* dewa);
        LEPT_DLL extern int dewarpaSetValidModels(L_DEWARPA* dewa, int notests, int debug);
        LEPT_DLL extern int dewarpaInsertRefModels(L_DEWARPA* dewa, int notests, int debug);
        LEPT_DLL extern int dewarpaStripRefModels(L_DEWARPA* dewa);
        LEPT_DLL extern int dewarpaRestoreModels(L_DEWARPA* dewa);
        LEPT_DLL extern int dewarpaInfo(FILE* fp, L_DEWARPA* dewa);
        LEPT_DLL extern int dewarpaModelStats(L_DEWARPA* dewa, l_int32* pnnone, l_int32* pnvsuccess, l_int32* pnvvalid, l_int32* pnhsuccess, l_int32* pnhvalid, l_int32* pnref);
        LEPT_DLL extern int dewarpaShowArrays(L_DEWARPA* dewa, float scalefact, int first, int last);
        LEPT_DLL extern int dewarpDebug(L_DEWARP* dew, const char* subdirs, int index );
        LEPT_DLL extern int dewarpShowResults(L_DEWARPA* dewa, SARRAY* sa, BOXA* boxa, int firstpage, int lastpage, const char* pdfout );
        LEPT_DLL extern L_DNA* l_dnaCreate(l_int32 n);
        LEPT_DLL extern L_DNA* l_dnaCreateFromIArray(l_int32* iarray, int size);
        LEPT_DLL extern L_DNA* l_dnaCreateFromDArray(l_float64* darray, int size, int copyflag);
        LEPT_DLL extern L_DNA* l_dnaMakeSequence(l_float64 startval, l_float64 increment, int size);
        LEPT_DLL extern void l_dnaDestroy(L_DNA** pda);
        LEPT_DLL extern L_DNA* l_dnaCopy(L_DNA* da);
        LEPT_DLL extern L_DNA* l_dnaClone(L_DNA* da);
        LEPT_DLL extern int l_dnaEmpty(L_DNA* da);
        LEPT_DLL extern int l_dnaAddNumber(L_DNA* da, l_float64 val);
        LEPT_DLL extern int l_dnaInsertNumber(L_DNA* da, int index, l_float64 val);
        LEPT_DLL extern int l_dnaRemoveNumber(L_DNA* da, int index);
        LEPT_DLL extern int l_dnaReplaceNumber(L_DNA* da, int index, l_float64 val);
        LEPT_DLL extern int l_dnaGetCount(L_DNA* da);
        LEPT_DLL extern int l_dnaSetCount(L_DNA* da, int newcount);
        LEPT_DLL extern int l_dnaGetDValue(L_DNA* da, int index, l_float64* pval);
        LEPT_DLL extern int l_dnaGetIValue(L_DNA* da, int index, l_int32* pival);
        LEPT_DLL extern int l_dnaSetValue(L_DNA* da, int index, l_float64 val);
        LEPT_DLL extern int l_dnaShiftValue(L_DNA* da, int index, l_float64 diff);
        LEPT_DLL extern l_int32* l_dnaGetIArray(L_DNA* da);
        LEPT_DLL extern l_float64* l_dnaGetDArray(L_DNA* da, int copyflag);
        LEPT_DLL extern int l_dnaGetRefcount(L_DNA* da);
        LEPT_DLL extern int l_dnaChangeRefcount(L_DNA* da, int delta);
        LEPT_DLL extern int l_dnaGetParameters(L_DNA* da, l_float64* pstartx, l_float64* pdelx);
        LEPT_DLL extern int l_dnaSetParameters(L_DNA* da, l_float64 startx, l_float64 delx);
        LEPT_DLL extern int l_dnaCopyParameters(L_DNA* dad, L_DNA* das);
        LEPT_DLL extern L_DNA* l_dnaRead( const char* filename );
        LEPT_DLL extern L_DNA* l_dnaReadStream(FILE* fp);
        LEPT_DLL extern int l_dnaWrite( const char* filename, L_DNA *da );
        LEPT_DLL extern int l_dnaWriteStream(FILE* fp, L_DNA* da);
        LEPT_DLL extern L_DNAA* l_dnaaCreate(l_int32 n);
        LEPT_DLL extern L_DNAA* l_dnaaCreateFull(l_int32 nptr, int n);
        LEPT_DLL extern int l_dnaaTruncate(L_DNAA* daa);
        LEPT_DLL extern void l_dnaaDestroy(L_DNAA** pdaa);
        LEPT_DLL extern int l_dnaaAddDna(L_DNAA* daa, L_DNA* da, int copyflag);
        LEPT_DLL extern int l_dnaaGetCount(L_DNAA* daa);
        LEPT_DLL extern int l_dnaaGetDnaCount(L_DNAA* daa, int index);
        LEPT_DLL extern int l_dnaaGetNumberCount(L_DNAA* daa);
        LEPT_DLL extern L_DNA* l_dnaaGetDna(L_DNAA* daa, int index, int accessflag);
        LEPT_DLL extern int l_dnaaReplaceDna(L_DNAA* daa, int index, L_DNA* da);
        LEPT_DLL extern int l_dnaaGetValue(L_DNAA* daa, int i, int j, l_float64* pval);
        LEPT_DLL extern int l_dnaaAddNumber(L_DNAA* daa, int index, l_float64 val);
        LEPT_DLL extern L_DNAA* l_dnaaRead( const char* filename );
        LEPT_DLL extern L_DNAA* l_dnaaReadStream(FILE* fp);
        LEPT_DLL extern int l_dnaaWrite( const char* filename, L_DNAA *daa );
        LEPT_DLL extern int l_dnaaWriteStream(FILE* fp, L_DNAA* daa);
        LEPT_DLL extern int l_dnaJoin(L_DNA* dad, L_DNA* das, int istart, int iend);
        LEPT_DLL extern L_DNA* l_dnaaFlattenToDna(L_DNAA* daa);
        LEPT_DLL extern NUMA* l_dnaConvertToNuma(L_DNA* da);
        LEPT_DLL extern L_DNA* numaConvertToDna(NUMA* na);
        LEPT_DLL extern L_DNA* l_dnaUnionByAset(L_DNA* da1, L_DNA* da2);
        LEPT_DLL extern L_DNA* l_dnaRemoveDupsByAset(L_DNA* das);
        LEPT_DLL extern L_DNA* l_dnaIntersectionByAset(L_DNA* da1, L_DNA* da2);
        LEPT_DLL extern L_ASET* l_asetCreateFromDna(L_DNA* da);
        LEPT_DLL extern L_DNA* l_dnaDiffAdjValues(L_DNA* das);
        LEPT_DLL extern L_DNAHASH* l_dnaHashCreate(l_int32 nbuckets, int initsize);
        LEPT_DLL extern void l_dnaHashDestroy(L_DNAHASH** pdahash);
        LEPT_DLL extern int l_dnaHashGetCount(L_DNAHASH* dahash);
        LEPT_DLL extern int l_dnaHashGetTotalCount(L_DNAHASH* dahash);
        LEPT_DLL extern L_DNA* l_dnaHashGetDna(L_DNAHASH* dahash, l_uint64 key, int copyflag);
        LEPT_DLL extern int l_dnaHashAdd(L_DNAHASH* dahash, l_uint64 key, l_float64 value);
        LEPT_DLL extern L_DNAHASH* l_dnaHashCreateFromDna(L_DNA* da);
        LEPT_DLL extern int l_dnaRemoveDupsByHash(L_DNA* das, L_DNA** pdad, L_DNAHASH** pdahash);
        LEPT_DLL extern int l_dnaMakeHistoByHash(L_DNA* das, L_DNAHASH** pdahash, L_DNA** pdav, L_DNA** pdac);
        LEPT_DLL extern L_DNA* l_dnaIntersectionByHash(L_DNA* da1, L_DNA* da2);
        LEPT_DLL extern int l_dnaFindValByHash(L_DNA* da, L_DNAHASH* dahash, l_float64 val, l_int32* pindex);
        LEPT_DLL extern PIX* pixMorphDwa_2(PIX* pixd, PIX* pixs, int operation, char* selname);
        LEPT_DLL extern PIX* pixFMorphopGen_2(PIX* pixd, PIX* pixs, int operation, char* selname);
        LEPT_DLL extern int fmorphopgen_low_2(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, int index);
        LEPT_DLL extern PIX* pixSobelEdgeFilter(PIX* pixs, int orientflag);
        LEPT_DLL extern PIX* pixTwoSidedEdgeFilter(PIX* pixs, int orientflag);
        LEPT_DLL extern int pixMeasureEdgeSmoothness(PIX* pixs, int side, int minjump, int minreversal, l_float32* pjpl, l_float32* pjspl, l_float32* prpl, const char* debugfile );
        LEPT_DLL extern NUMA* pixGetEdgeProfile(PIX* pixs, int side, const char* debugfile );
        LEPT_DLL extern int pixGetLastOffPixelInRun(PIX* pixs, int x, int y, int direction, l_int32* ploc);
        LEPT_DLL extern int pixGetLastOnPixelInRun(PIX* pixs, int x, int y, int direction, l_int32* ploc);
        LEPT_DLL extern char* encodeBase64(l_uint8* inarray, int insize, l_int32* poutsize);
        LEPT_DLL extern l_uint8* decodeBase64( const char* inarray, int insize, l_int32* poutsize );
        LEPT_DLL extern char* encodeAscii85(l_uint8* inarray, int insize, l_int32* poutsize);
        LEPT_DLL extern l_uint8* decodeAscii85(char* inarray, int insize, l_int32* poutsize);
        LEPT_DLL extern char* reformatPacked64(char* inarray, int insize, int leadspace, int linechars, int addquotes, l_int32* poutsize);
        LEPT_DLL extern PIX* pixGammaTRC(PIX* pixd, PIX* pixs, float gamma, int minval, int maxval);
        LEPT_DLL extern PIX* pixGammaTRCMasked(PIX* pixd, PIX* pixs, PIX* pixm, float gamma, int minval, int maxval);
        LEPT_DLL extern PIX* pixGammaTRCWithAlpha(PIX* pixd, PIX* pixs, float gamma, int minval, int maxval);
        LEPT_DLL extern NUMA* numaGammaTRC(l_float32 gamma, int minval, int maxval);
        LEPT_DLL extern PIX* pixContrastTRC(PIX* pixd, PIX* pixs, float factor);
        LEPT_DLL extern PIX* pixContrastTRCMasked(PIX* pixd, PIX* pixs, PIX* pixm, float factor);
        LEPT_DLL extern NUMA* numaContrastTRC(l_float32 factor);
        LEPT_DLL extern PIX* pixEqualizeTRC(PIX* pixd, PIX* pixs, float fract, int factor);
        LEPT_DLL extern NUMA* numaEqualizeTRC(PIX* pix, float fract, int factor);
        LEPT_DLL extern int pixTRCMap(PIX* pixs, PIX* pixm, NUMA* na);
        LEPT_DLL extern PIX* pixUnsharpMasking(PIX* pixs, int halfwidth, float fract);
        LEPT_DLL extern PIX* pixUnsharpMaskingGray(PIX* pixs, int halfwidth, float fract);
        LEPT_DLL extern PIX* pixUnsharpMaskingFast(PIX* pixs, int halfwidth, float fract, int direction);
        LEPT_DLL extern PIX* pixUnsharpMaskingGrayFast(PIX* pixs, int halfwidth, float fract, int direction);
        LEPT_DLL extern PIX* pixUnsharpMaskingGray1D(PIX* pixs, int halfwidth, float fract, int direction);
        LEPT_DLL extern PIX* pixUnsharpMaskingGray2D(PIX* pixs, int halfwidth, float fract);
        LEPT_DLL extern PIX* pixModifyHue(PIX* pixd, PIX* pixs, float fract);
        LEPT_DLL extern PIX* pixModifySaturation(PIX* pixd, PIX* pixs, float fract);
        LEPT_DLL extern int pixMeasureSaturation(PIX* pixs, int factor, l_float32* psat);
        LEPT_DLL extern PIX* pixModifyBrightness(PIX* pixd, PIX* pixs, float fract);
        LEPT_DLL extern PIX* pixColorShiftRGB(PIX* pixs, float rfract, float gfract, float bfract);
        LEPT_DLL extern PIX* pixMultConstantColor(PIX* pixs, float rfact, float gfact, float bfact);
        LEPT_DLL extern PIX* pixMultMatrixColor(PIX* pixs, L_KERNEL* kel);
        LEPT_DLL extern PIX* pixHalfEdgeByBandpass(PIX* pixs, int sm1h, int sm1v, int sm2h, int sm2v);
        LEPT_DLL extern int fhmtautogen(SELA* sela, int fileindex, const char* filename );
        LEPT_DLL extern int fhmtautogen1(SELA* sela, int fileindex, const char* filename );
        LEPT_DLL extern int fhmtautogen2(SELA* sela, int fileindex, const char* filename );
        LEPT_DLL extern PIX* pixHMTDwa_1(PIX* pixd, PIX* pixs, const char* selname );
        LEPT_DLL extern PIX* pixFHMTGen_1(PIX* pixd, PIX* pixs, const char* selname );
        LEPT_DLL extern int fhmtgen_low_1(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, int index);
        LEPT_DLL extern int pixItalicWords(PIX* pixs, BOXA* boxaw, PIX* pixw, BOXA** pboxa, int debugflag);
        LEPT_DLL extern int pixOrientDetect(PIX* pixs, l_float32* pupconf, l_float32* pleftconf, int mincount, int debug);
        LEPT_DLL extern int makeOrientDecision(l_float32 upconf, float leftconf, float minupconf, float minratio, l_int32* porient, int debug);
        LEPT_DLL extern int pixUpDownDetect(PIX* pixs, l_float32* pconf, int mincount, int debug);
        LEPT_DLL extern int pixUpDownDetectGeneral(PIX* pixs, l_float32* pconf, int mincount, int npixels, int debug);
        LEPT_DLL extern int pixOrientDetectDwa(PIX* pixs, l_float32* pupconf, l_float32* pleftconf, int mincount, int debug);
        LEPT_DLL extern int pixUpDownDetectDwa(PIX* pixs, l_float32* pconf, int mincount, int debug);
        LEPT_DLL extern int pixUpDownDetectGeneralDwa(PIX* pixs, l_float32* pconf, int mincount, int npixels, int debug);
        LEPT_DLL extern int pixMirrorDetect(PIX* pixs, l_float32* pconf, int mincount, int debug);
        LEPT_DLL extern int pixMirrorDetectDwa(PIX* pixs, l_float32* pconf, int mincount, int debug);
        LEPT_DLL extern PIX* pixFlipFHMTGen(PIX* pixd, PIX* pixs, char* selname);
        LEPT_DLL extern int fmorphautogen(SELA* sela, int fileindex, const char* filename );
        LEPT_DLL extern int fmorphautogen1(SELA* sela, int fileindex, const char* filename );
        LEPT_DLL extern int fmorphautogen2(SELA* sela, int fileindex, const char* filename );
        LEPT_DLL extern PIX* pixMorphDwa_1(PIX* pixd, PIX* pixs, int operation, char* selname);
        LEPT_DLL extern PIX* pixFMorphopGen_1(PIX* pixd, PIX* pixs, int operation, char* selname);
        LEPT_DLL extern int fmorphopgen_low_1(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, int index);
        LEPT_DLL extern FPIX* fpixCreate(l_int32 width, int height);
        LEPT_DLL extern FPIX* fpixCreateTemplate(FPIX* fpixs);
        LEPT_DLL extern FPIX* fpixClone(FPIX* fpix);
        LEPT_DLL extern FPIX* fpixCopy(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern int fpixResizeImageData(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern void fpixDestroy(FPIX** pfpix);
        LEPT_DLL extern int fpixGetDimensions(FPIX* fpix, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int fpixSetDimensions(FPIX* fpix, int w, int h);
        LEPT_DLL extern int fpixGetWpl(FPIX* fpix);
        LEPT_DLL extern int fpixSetWpl(FPIX* fpix, int wpl);
        LEPT_DLL extern int fpixGetRefcount(FPIX* fpix);
        LEPT_DLL extern int fpixChangeRefcount(FPIX* fpix, int delta);
        LEPT_DLL extern int fpixGetResolution(FPIX* fpix, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern int fpixSetResolution(FPIX* fpix, int xres, int yres);
        LEPT_DLL extern int fpixCopyResolution(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern l_float32* fpixGetData(FPIX* fpix);
        LEPT_DLL extern int fpixSetData(FPIX* fpix, l_float32* data);
        LEPT_DLL extern int fpixGetPixel(FPIX* fpix, int x, int y, l_float32* pval);
        LEPT_DLL extern int fpixSetPixel(FPIX* fpix, int x, int y, float val);
        LEPT_DLL extern FPIXA* fpixaCreate(l_int32 n);
        LEPT_DLL extern FPIXA* fpixaCopy(FPIXA* fpixa, int copyflag);
        LEPT_DLL extern void fpixaDestroy(FPIXA** pfpixa);
        LEPT_DLL extern int fpixaAddFPix(FPIXA* fpixa, FPIX* fpix, int copyflag);
        LEPT_DLL extern int fpixaGetCount(FPIXA* fpixa);
        LEPT_DLL extern int fpixaChangeRefcount(FPIXA* fpixa, int delta);
        LEPT_DLL extern FPIX* fpixaGetFPix(FPIXA* fpixa, int index, int accesstype);
        LEPT_DLL extern int fpixaGetFPixDimensions(FPIXA* fpixa, int index, l_int32* pw, l_int32* ph);
        LEPT_DLL extern l_float32* fpixaGetData(FPIXA* fpixa, int index);
        LEPT_DLL extern int fpixaGetPixel(FPIXA* fpixa, int index, int x, int y, l_float32* pval);
        LEPT_DLL extern int fpixaSetPixel(FPIXA* fpixa, int index, int x, int y, float val);
        LEPT_DLL extern DPIX* dpixCreate(l_int32 width, int height);
        LEPT_DLL extern DPIX* dpixCreateTemplate(DPIX* dpixs);
        LEPT_DLL extern DPIX* dpixClone(DPIX* dpix);
        LEPT_DLL extern DPIX* dpixCopy(DPIX* dpixd, DPIX* dpixs);
        LEPT_DLL extern int dpixResizeImageData(DPIX* dpixd, DPIX* dpixs);
        LEPT_DLL extern void dpixDestroy(DPIX** pdpix);
        LEPT_DLL extern int dpixGetDimensions(DPIX* dpix, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int dpixSetDimensions(DPIX* dpix, int w, int h);
        LEPT_DLL extern int dpixGetWpl(DPIX* dpix);
        LEPT_DLL extern int dpixSetWpl(DPIX* dpix, int wpl);
        LEPT_DLL extern int dpixGetRefcount(DPIX* dpix);
        LEPT_DLL extern int dpixChangeRefcount(DPIX* dpix, int delta);
        LEPT_DLL extern int dpixGetResolution(DPIX* dpix, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern int dpixSetResolution(DPIX* dpix, int xres, int yres);
        LEPT_DLL extern int dpixCopyResolution(DPIX* dpixd, DPIX* dpixs);
        LEPT_DLL extern l_float64* dpixGetData(DPIX* dpix);
        LEPT_DLL extern int dpixSetData(DPIX* dpix, l_float64* data);
        LEPT_DLL extern int dpixGetPixel(DPIX* dpix, int x, int y, l_float64* pval);
        LEPT_DLL extern int dpixSetPixel(DPIX* dpix, int x, int y, l_float64 val);
        LEPT_DLL extern FPIX* fpixRead( const char* filename );
        LEPT_DLL extern FPIX* fpixReadStream(FILE* fp);
        LEPT_DLL extern FPIX* fpixReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int fpixWrite( const char* filename, FPIX *fpix );
        LEPT_DLL extern int fpixWriteStream(FILE* fp, FPIX* fpix);
        LEPT_DLL extern int fpixWriteMem(l_uint8** pdata, size_t* psize, FPIX* fpix);
        LEPT_DLL extern FPIX* fpixEndianByteSwap(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern DPIX* dpixRead( const char* filename );
        LEPT_DLL extern DPIX* dpixReadStream(FILE* fp);
        LEPT_DLL extern DPIX* dpixReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int dpixWrite( const char* filename, DPIX *dpix );
        LEPT_DLL extern int dpixWriteStream(FILE* fp, DPIX* dpix);
        LEPT_DLL extern int dpixWriteMem(l_uint8** pdata, size_t* psize, DPIX* dpix);
        LEPT_DLL extern DPIX* dpixEndianByteSwap(DPIX* dpixd, DPIX* dpixs);
        LEPT_DLL extern int fpixPrintStream(FILE* fp, FPIX* fpix, int factor);
        LEPT_DLL extern FPIX* pixConvertToFPix(PIX* pixs, int ncomps);
        LEPT_DLL extern DPIX* pixConvertToDPix(PIX* pixs, int ncomps);
        LEPT_DLL extern PIX* fpixConvertToPix(FPIX* fpixs, int outdepth, int negvals, int errorflag);
        LEPT_DLL extern PIX* fpixDisplayMaxDynamicRange(FPIX* fpixs);
        LEPT_DLL extern DPIX* fpixConvertToDPix(FPIX* fpix);
        LEPT_DLL extern PIX* dpixConvertToPix(DPIX* dpixs, int outdepth, int negvals, int errorflag);
        LEPT_DLL extern FPIX* dpixConvertToFPix(DPIX* dpix);
        LEPT_DLL extern int fpixGetMin(FPIX* fpix, l_float32* pminval, l_int32* pxminloc, l_int32* pyminloc);
        LEPT_DLL extern int fpixGetMax(FPIX* fpix, l_float32* pmaxval, l_int32* pxmaxloc, l_int32* pymaxloc);
        LEPT_DLL extern int dpixGetMin(DPIX* dpix, l_float64* pminval, l_int32* pxminloc, l_int32* pyminloc);
        LEPT_DLL extern int dpixGetMax(DPIX* dpix, l_float64* pmaxval, l_int32* pxmaxloc, l_int32* pymaxloc);
        LEPT_DLL extern FPIX* fpixScaleByInteger(FPIX* fpixs, int factor);
        LEPT_DLL extern DPIX* dpixScaleByInteger(DPIX* dpixs, int factor);
        LEPT_DLL extern FPIX* fpixLinearCombination(FPIX* fpixd, FPIX* fpixs1, FPIX* fpixs2, float a, float b);
        LEPT_DLL extern int fpixAddMultConstant(FPIX* fpix, float addc, float multc);
        LEPT_DLL extern DPIX* dpixLinearCombination(DPIX* dpixd, DPIX* dpixs1, DPIX* dpixs2, float a, float b);
        LEPT_DLL extern int dpixAddMultConstant(DPIX* dpix, l_float64 addc, l_float64 multc);
        LEPT_DLL extern int fpixSetAllArbitrary(FPIX* fpix, float inval);
        LEPT_DLL extern int dpixSetAllArbitrary(DPIX* dpix, l_float64 inval);
        LEPT_DLL extern FPIX* fpixAddBorder(FPIX* fpixs, int left, int right, int top, int bot);
        LEPT_DLL extern FPIX* fpixRemoveBorder(FPIX* fpixs, int left, int right, int top, int bot);
        LEPT_DLL extern FPIX* fpixAddMirroredBorder(FPIX* fpixs, int left, int right, int top, int bot);
        LEPT_DLL extern FPIX* fpixAddContinuedBorder(FPIX* fpixs, int left, int right, int top, int bot);
        LEPT_DLL extern FPIX* fpixAddSlopeBorder(FPIX* fpixs, int left, int right, int top, int bot);
        LEPT_DLL extern int fpixRasterop(FPIX* fpixd, int dx, int dy, int dw, int dh, FPIX* fpixs, int sx, int sy);
        LEPT_DLL extern FPIX* fpixRotateOrth(FPIX* fpixs, int quads);
        LEPT_DLL extern FPIX* fpixRotate180(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern FPIX* fpixRotate90(FPIX* fpixs, int direction);
        LEPT_DLL extern FPIX* fpixFlipLR(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern FPIX* fpixFlipTB(FPIX* fpixd, FPIX* fpixs);
        LEPT_DLL extern FPIX* fpixAffinePta(FPIX* fpixs, PTA* ptad, PTA* ptas, int border, float inval);
        LEPT_DLL extern FPIX* fpixAffine(FPIX* fpixs, l_float32* vc, float inval);
        LEPT_DLL extern FPIX* fpixProjectivePta(FPIX* fpixs, PTA* ptad, PTA* ptas, int border, float inval);
        LEPT_DLL extern FPIX* fpixProjective(FPIX* fpixs, l_float32* vc, float inval);
        LEPT_DLL extern int linearInterpolatePixelFloat(l_float32* datas, int w, int h, float x, float y, float inval, l_float32* pval);
        LEPT_DLL extern PIX* fpixThresholdToPix(FPIX* fpix, float thresh);
        LEPT_DLL extern FPIX* pixComponentFunction(PIX* pix, float rnum, float gnum, float bnum, float rdenom, float gdenom, float bdenom);
        LEPT_DLL extern PIX* pixReadStreamGif(FILE* fp);
        LEPT_DLL extern int pixWriteStreamGif(FILE* fp, PIX* pix);
        LEPT_DLL extern PIX* pixReadMemGif( const l_uint8* cdata, size_t size );
        LEPT_DLL extern int pixWriteMemGif(l_uint8** pdata, size_t* psize, PIX* pix);
        LEPT_DLL extern GPLOT* gplotCreate( const char* rootname, int outformat, const char* title, const char* xlabel, const char* ylabel );
        LEPT_DLL extern void gplotDestroy(GPLOT** pgplot);
        LEPT_DLL extern int gplotAddPlot(GPLOT* gplot, NUMA* nax, NUMA* nay, int plotstyle, const char* plottitle );
        LEPT_DLL extern int gplotSetScaling(GPLOT* gplot, int scaling);
        LEPT_DLL extern int gplotMakeOutput(GPLOT* gplot);
        LEPT_DLL extern int gplotGenCommandFile(GPLOT* gplot);
        LEPT_DLL extern int gplotGenDataFiles(GPLOT* gplot);
        LEPT_DLL extern int gplotSimple1(NUMA* na, int outformat, const char* outroot, const char* title );
        LEPT_DLL extern int gplotSimple2(NUMA* na1, NUMA* na2, int outformat, const char* outroot, const char* title );
        LEPT_DLL extern int gplotSimpleN(NUMAA* naa, int outformat, const char* outroot, const char* title );
        LEPT_DLL extern int gplotSimpleXY1(NUMA* nax, NUMA* nay, int plotstyle, int outformat, const char* outroot, const char* title );
        LEPT_DLL extern int gplotSimpleXY2(NUMA* nax, NUMA* nay1, NUMA* nay2, int plotstyle, int outformat, const char* outroot, const char* title );
        LEPT_DLL extern int gplotSimpleXYN(NUMA* nax, NUMAA* naay, int plotstyle, int outformat, const char* outroot, const char* title );
        LEPT_DLL extern GPLOT* gplotRead( const char* filename );
        LEPT_DLL extern int gplotWrite( const char* filename, GPLOT *gplot );
        LEPT_DLL extern PTA* generatePtaLine(l_int32 x1, int y1, int x2, int y2);
        LEPT_DLL extern PTA* generatePtaWideLine(l_int32 x1, int y1, int x2, int y2, int width);
        LEPT_DLL extern PTA* generatePtaBox(BOX* box, int width);
        LEPT_DLL extern PTA* generatePtaBoxa(BOXA* boxa, int width, int removedups);
        LEPT_DLL extern PTA* generatePtaHashBox(BOX* box, int spacing, int width, int orient, int outline);
        LEPT_DLL extern PTA* generatePtaHashBoxa(BOXA* boxa, int spacing, int width, int orient, int outline, int removedups);
        LEPT_DLL extern PTAA* generatePtaaBoxa(BOXA* boxa);
        LEPT_DLL extern PTAA* generatePtaaHashBoxa(BOXA* boxa, int spacing, int width, int orient, int outline);
        LEPT_DLL extern PTA* generatePtaPolyline(PTA* ptas, int width, int closeflag, int removedups);
        LEPT_DLL extern PTA* generatePtaGrid(l_int32 w, int h, int nx, int ny, int width);
        LEPT_DLL extern PTA* convertPtaLineTo4cc(PTA* ptas);
        LEPT_DLL extern PTA* generatePtaFilledCircle(l_int32 radius);
        LEPT_DLL extern PTA* generatePtaFilledSquare(l_int32 side);
        LEPT_DLL extern PTA* generatePtaLineFromPt(l_int32 x, int y, l_float64 length, l_float64 radang);
        LEPT_DLL extern int locatePtRadially(l_int32 xr, int yr, l_float64 dist, l_float64 radang, l_float64* px, l_float64* py);
        LEPT_DLL extern int pixRenderPlotFromNuma(PIX** ppix, NUMA* na, int plotloc, int linewidth, int max, uint color);
        LEPT_DLL extern PTA* makePlotPtaFromNuma(NUMA* na, int size, int plotloc, int linewidth, int max);
        LEPT_DLL extern int pixRenderPlotFromNumaGen(PIX** ppix, NUMA* na, int orient, int linewidth, int refpos, int max, int drawref, uint color);
        LEPT_DLL extern PTA* makePlotPtaFromNumaGen(NUMA* na, int orient, int linewidth, int refpos, int max, int drawref);
        LEPT_DLL extern int pixRenderPta(PIX* pix, PTA* pta, int op);
        LEPT_DLL extern int pixRenderPtaArb(PIX* pix, PTA* pta, byte rval, byte gval, byte bval);
        LEPT_DLL extern int pixRenderPtaBlend(PIX* pix, PTA* pta, byte rval, byte gval, byte bval, float fract);
        LEPT_DLL extern int pixRenderLine(PIX* pix, int x1, int y1, int x2, int y2, int width, int op);
        LEPT_DLL extern int pixRenderLineArb(PIX* pix, int x1, int y1, int x2, int y2, int width, byte rval, byte gval, byte bval);
        LEPT_DLL extern int pixRenderLineBlend(PIX* pix, int x1, int y1, int x2, int y2, int width, byte rval, byte gval, byte bval, float fract);
        LEPT_DLL extern int pixRenderBox(PIX* pix, BOX* box, int width, int op);
        LEPT_DLL extern int pixRenderBoxArb(PIX* pix, BOX* box, int width, byte rval, byte gval, byte bval);
        LEPT_DLL extern int pixRenderBoxBlend(PIX* pix, BOX* box, int width, byte rval, byte gval, byte bval, float fract);
        LEPT_DLL extern int pixRenderBoxa(PIX* pix, BOXA* boxa, int width, int op);
        LEPT_DLL extern int pixRenderBoxaArb(PIX* pix, BOXA* boxa, int width, byte rval, byte gval, byte bval);
        LEPT_DLL extern int pixRenderBoxaBlend(PIX* pix, BOXA* boxa, int width, byte rval, byte gval, byte bval, float fract, int removedups);
        LEPT_DLL extern int pixRenderHashBox(PIX* pix, BOX* box, int spacing, int width, int orient, int outline, int op);
        LEPT_DLL extern int pixRenderHashBoxArb(PIX* pix, BOX* box, int spacing, int width, int orient, int outline, int rval, int gval, int bval);
        LEPT_DLL extern int pixRenderHashBoxBlend(PIX* pix, BOX* box, int spacing, int width, int orient, int outline, int rval, int gval, int bval, float fract);
        LEPT_DLL extern int pixRenderHashMaskArb(PIX* pix, PIX* pixm, int x, int y, int spacing, int width, int orient, int outline, int rval, int gval, int bval);
        LEPT_DLL extern int pixRenderHashBoxa(PIX* pix, BOXA* boxa, int spacing, int width, int orient, int outline, int op);
        LEPT_DLL extern int pixRenderHashBoxaArb(PIX* pix, BOXA* boxa, int spacing, int width, int orient, int outline, int rval, int gval, int bval);
        LEPT_DLL extern int pixRenderHashBoxaBlend(PIX* pix, BOXA* boxa, int spacing, int width, int orient, int outline, int rval, int gval, int bval, float fract);
        LEPT_DLL extern int pixRenderPolyline(PIX* pix, PTA* ptas, int width, int op, int closeflag);
        LEPT_DLL extern int pixRenderPolylineArb(PIX* pix, PTA* ptas, int width, byte rval, byte gval, byte bval, int closeflag);
        LEPT_DLL extern int pixRenderPolylineBlend(PIX* pix, PTA* ptas, int width, byte rval, byte gval, byte bval, float fract, int closeflag, int removedups);
        LEPT_DLL extern int pixRenderGridArb(PIX* pix, int nx, int ny, int width, byte rval, byte gval, byte bval);
        LEPT_DLL extern PIX* pixRenderRandomCmapPtaa(PIX* pix, PTAA* ptaa, int polyflag, int width, int closeflag);
        LEPT_DLL extern PIX* pixRenderPolygon(PTA* ptas, int width, l_int32* pxmin, l_int32* pymin);
        LEPT_DLL extern PIX* pixFillPolygon(PIX* pixs, PTA* pta, int xmin, int ymin);
        LEPT_DLL extern PIX* pixRenderContours(PIX* pixs, int startval, int incr, int outdepth);
        LEPT_DLL extern PIX* fpixAutoRenderContours(FPIX* fpix, int ncontours);
        LEPT_DLL extern PIX* fpixRenderContours(FPIX* fpixs, float incr, float proxim);
        LEPT_DLL extern PTA* pixGeneratePtaBoundary(PIX* pixs, int width);
        LEPT_DLL extern PIX* pixErodeGray(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixDilateGray(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenGray(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseGray(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixErodeGray3(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixDilateGray3(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenGray3(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseGray3(PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixDitherToBinary(PIX* pixs);
        LEPT_DLL extern PIX* pixDitherToBinarySpec(PIX* pixs, int lowerclip, int upperclip);
        LEPT_DLL extern PIX* pixThresholdToBinary(PIX* pixs, int thresh);
        LEPT_DLL extern PIX* pixVarThresholdToBinary(PIX* pixs, PIX* pixg);
        LEPT_DLL extern PIX* pixAdaptThresholdToBinary(PIX* pixs, PIX* pixm, float gamma);
        LEPT_DLL extern PIX* pixAdaptThresholdToBinaryGen(PIX* pixs, PIX* pixm, float gamma, int blackval, int whiteval, int thresh);
        LEPT_DLL extern PIX* pixGenerateMaskByValue(PIX* pixs, int val, int usecmap);
        LEPT_DLL extern PIX* pixGenerateMaskByBand(PIX* pixs, int lower, int upper, int inband, int usecmap);
        LEPT_DLL extern PIX* pixDitherTo2bpp(PIX* pixs, int cmapflag);
        LEPT_DLL extern PIX* pixDitherTo2bppSpec(PIX* pixs, int lowerclip, int upperclip, int cmapflag);
        LEPT_DLL extern PIX* pixThresholdTo2bpp(PIX* pixs, int nlevels, int cmapflag);
        LEPT_DLL extern PIX* pixThresholdTo4bpp(PIX* pixs, int nlevels, int cmapflag);
        LEPT_DLL extern PIX* pixThresholdOn8bpp(PIX* pixs, int nlevels, int cmapflag);
        LEPT_DLL extern PIX* pixThresholdGrayArb(PIX* pixs, const char* edgevals, int outdepth, int use_average, int setblack, int setwhite );
        LEPT_DLL extern l_int32* makeGrayQuantIndexTable(l_int32 nlevels);
        LEPT_DLL extern l_int32* makeGrayQuantTargetTable(l_int32 nlevels, int depth);
        LEPT_DLL extern int makeGrayQuantTableArb(NUMA* na, int outdepth, l_int32** ptab, PIXCMAP** pcmap);
        LEPT_DLL extern int makeGrayQuantColormapArb(PIX* pixs, l_int32* tab, int outdepth, PIXCMAP** pcmap);
        LEPT_DLL extern PIX* pixGenerateMaskByBand32(PIX* pixs, uint refval, int delm, int delp, float fractm, float fractp);
        LEPT_DLL extern PIX* pixGenerateMaskByDiscr32(PIX* pixs, uint refval1, uint refval2, int distflag);
        LEPT_DLL extern PIX* pixGrayQuantFromHisto(PIX* pixd, PIX* pixs, PIX* pixm, float minfract, int maxsize);
        LEPT_DLL extern PIX* pixGrayQuantFromCmap(PIX* pixs, PIXCMAP* cmap, int mindepth);
        LEPT_DLL extern void ditherToBinaryLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, l_uint32* bufs1, l_uint32* bufs2, int lowerclip, int upperclip);
        LEPT_DLL extern void ditherToBinaryLineLow(l_uint32* lined, int w, l_uint32* bufs1, l_uint32* bufs2, int lowerclip, int upperclip, int lastlineflag);
        LEPT_DLL extern void thresholdToBinaryLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int d, int wpls, int thresh);
        LEPT_DLL extern void thresholdToBinaryLineLow(l_uint32* lined, int w, l_uint32* lines, int d, int thresh);
        LEPT_DLL extern void ditherTo2bppLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, l_uint32* bufs1, l_uint32* bufs2, l_int32* tabval, l_int32* tab38, l_int32* tab14);
        LEPT_DLL extern void ditherTo2bppLineLow(l_uint32* lined, int w, l_uint32* bufs1, l_uint32* bufs2, l_int32* tabval, l_int32* tab38, l_int32* tab14, int lastlineflag);
        LEPT_DLL extern int make8To2DitherTables(l_int32** ptabval, l_int32** ptab38, l_int32** ptab14, int cliptoblack, int cliptowhite);
        LEPT_DLL extern void thresholdTo2bppLow(l_uint32* datad, int h, int wpld, l_uint32* datas, int wpls, l_int32* tab);
        LEPT_DLL extern void thresholdTo4bppLow(l_uint32* datad, int h, int wpld, l_uint32* datas, int wpls, l_int32* tab);
        LEPT_DLL extern L_HEAP* lheapCreate(l_int32 nalloc, int direction);
        LEPT_DLL extern void lheapDestroy(L_HEAP** plh, int freeflag);
        LEPT_DLL extern int lheapAdd(L_HEAP* lh, void* item);
        LEPT_DLL extern void* lheapRemove(L_HEAP* lh);
        LEPT_DLL extern int lheapGetCount(L_HEAP* lh);
        LEPT_DLL extern int lheapSwapUp(L_HEAP* lh, int index);
        LEPT_DLL extern int lheapSwapDown(L_HEAP* lh);
        LEPT_DLL extern int lheapSort(L_HEAP* lh);
        LEPT_DLL extern int lheapSortStrictOrder(L_HEAP* lh);
        LEPT_DLL extern int lheapPrint(FILE* fp, L_HEAP* lh);
        LEPT_DLL extern JBCLASSER* jbRankHausInit(l_int32 components, int maxwidth, int maxheight, int size, float rank);
        LEPT_DLL extern JBCLASSER* jbCorrelationInit(l_int32 components, int maxwidth, int maxheight, float thresh, float weightfactor);
        LEPT_DLL extern JBCLASSER* jbCorrelationInitWithoutComponents(l_int32 components, int maxwidth, int maxheight, float thresh, float weightfactor);
        LEPT_DLL extern int jbAddPages(JBCLASSER* classer, SARRAY* safiles);
        LEPT_DLL extern int jbAddPage(JBCLASSER* classer, PIX* pixs);
        LEPT_DLL extern int jbAddPageComponents(JBCLASSER* classer, PIX* pixs, BOXA* boxas, PIXA* pixas);
        LEPT_DLL extern int jbClassifyRankHaus(JBCLASSER* classer, BOXA* boxa, PIXA* pixas);
        LEPT_DLL extern int pixHaustest(PIX* pix1, PIX* pix2, PIX* pix3, PIX* pix4, float delx, float dely, int maxdiffw, int maxdiffh);
        LEPT_DLL extern int pixRankHaustest(PIX* pix1, PIX* pix2, PIX* pix3, PIX* pix4, float delx, float dely, int maxdiffw, int maxdiffh, int area1, int area3, float rank, l_int32* tab8);
        LEPT_DLL extern int jbClassifyCorrelation(JBCLASSER* classer, BOXA* boxa, PIXA* pixas);
        LEPT_DLL extern int jbGetComponents(PIX* pixs, int components, int maxwidth, int maxheight, BOXA** pboxad, PIXA** ppixad);
        LEPT_DLL extern int pixWordMaskByDilation(PIX* pixs, int maxdil, PIX** ppixm, l_int32* psize);
        LEPT_DLL extern int pixWordBoxesByDilation(PIX* pixs, int maxdil, int minwidth, int minheight, int maxwidth, int maxheight, BOXA** pboxa, l_int32* psize);
        LEPT_DLL extern PIXA* jbAccumulateComposites(PIXAA* pixaa, NUMA** pna, PTA** pptat);
        LEPT_DLL extern PIXA* jbTemplatesFromComposites(PIXA* pixac, NUMA* na);
        LEPT_DLL extern JBCLASSER* jbClasserCreate(l_int32 method, int components);
        LEPT_DLL extern void jbClasserDestroy(JBCLASSER** pclasser);
        LEPT_DLL extern JBDATA* jbDataSave(JBCLASSER* classer);
        LEPT_DLL extern void jbDataDestroy(JBDATA** pdata);
        LEPT_DLL extern int jbDataWrite( const char* rootout, JBDATA *jbdata );
        LEPT_DLL extern JBDATA* jbDataRead( const char* rootname );
        LEPT_DLL extern PIXA* jbDataRender(JBDATA* data, int debugflag);
        LEPT_DLL extern int jbGetULCorners(JBCLASSER* classer, PIX* pixs, BOXA* boxa);
        LEPT_DLL extern int jbGetLLCorners(JBCLASSER* classer);
        LEPT_DLL extern int readHeaderJp2k( const char* filename, int *pw, l_int32* ph, int *pbps, l_int32* pspp );
        LEPT_DLL extern int freadHeaderJp2k(FILE* fp, l_int32* pw, l_int32* ph, l_int32* pbps, l_int32* pspp);
        LEPT_DLL extern int readHeaderMemJp2k( const l_uint8* data, size_t size, l_int32* pw, int *ph, l_int32* pbps, int *pspp );
        LEPT_DLL extern int fgetJp2kResolution(FILE* fp, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern PIX* pixReadJp2k( const char* filename, uint reduction, BOX* box, int hint, int debug );
        LEPT_DLL extern PIX* pixReadStreamJp2k(FILE* fp, uint reduction, BOX* box, int hint, int debug);
        LEPT_DLL extern int pixWriteJp2k( const char* filename, PIX *pix, int quality, int nlevels, int hint, int debug );
        LEPT_DLL extern int pixWriteStreamJp2k(FILE* fp, PIX* pix, int quality, int nlevels, int hint, int debug);
        LEPT_DLL extern PIX* pixReadMemJp2k( const l_uint8* data, size_t size, uint reduction, BOX *box, int hint, int debug );
        LEPT_DLL extern int pixWriteMemJp2k(l_uint8** pdata, size_t* psize, PIX* pix, int quality, int nlevels, int hint, int debug);
        LEPT_DLL extern PIX* pixReadJpeg( const char* filename, int cmapflag, int reduction, int *pnwarn, int hint );
        LEPT_DLL extern PIX* pixReadStreamJpeg(FILE* fp, int cmapflag, int reduction, l_int32* pnwarn, int hint);
        LEPT_DLL extern int readHeaderJpeg( const char* filename, int *pw, l_int32* ph, int *pspp, l_int32* pycck, int *pcmyk );
        LEPT_DLL extern int freadHeaderJpeg(FILE* fp, l_int32* pw, l_int32* ph, l_int32* pspp, l_int32* pycck, l_int32* pcmyk);
        LEPT_DLL extern int fgetJpegResolution(FILE* fp, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern int fgetJpegComment(FILE* fp, l_uint8** pcomment);
        LEPT_DLL extern int pixWriteJpeg( const char* filename, PIX *pix, int quality, int progressive );
        LEPT_DLL extern int pixWriteStreamJpeg(FILE* fp, PIX* pixs, int quality, int progressive);
        LEPT_DLL extern PIX* pixReadMemJpeg( const l_uint8* data, size_t size, int cmflag, int reduction, l_int32* pnwarn, int hint );
        LEPT_DLL extern int readHeaderMemJpeg( const l_uint8* data, size_t size, l_int32* pw, int *ph, l_int32* pspp, int *pycck, l_int32* pcmyk );
        LEPT_DLL extern int pixWriteMemJpeg(l_uint8** pdata, size_t* psize, PIX* pix, int quality, int progressive);
        LEPT_DLL extern int pixSetChromaSampling(PIX* pix, int sampling);
        LEPT_DLL extern L_KERNEL* kernelCreate(l_int32 height, int width);
        LEPT_DLL extern void kernelDestroy(L_KERNEL** pkel);
        LEPT_DLL extern L_KERNEL* kernelCopy(L_KERNEL* kels);
        LEPT_DLL extern int kernelGetElement(L_KERNEL* kel, int row, int col, l_float32* pval);
        LEPT_DLL extern int kernelSetElement(L_KERNEL* kel, int row, int col, float val);
        LEPT_DLL extern int kernelGetParameters(L_KERNEL* kel, l_int32* psy, l_int32* psx, l_int32* pcy, l_int32* pcx);
        LEPT_DLL extern int kernelSetOrigin(L_KERNEL* kel, int cy, int cx);
        LEPT_DLL extern int kernelGetSum(L_KERNEL* kel, l_float32* psum);
        LEPT_DLL extern int kernelGetMinMax(L_KERNEL* kel, l_float32* pmin, l_float32* pmax);
        LEPT_DLL extern L_KERNEL* kernelNormalize(L_KERNEL* kels, float normsum);
        LEPT_DLL extern L_KERNEL* kernelInvert(L_KERNEL* kels);
        LEPT_DLL extern l_float32** create2dFloatArray(l_int32 sy, int sx);
        LEPT_DLL extern L_KERNEL* kernelRead( const char* fname );
        LEPT_DLL extern L_KERNEL* kernelReadStream(FILE* fp);
        LEPT_DLL extern int kernelWrite( const char* fname, L_KERNEL *kel );
        LEPT_DLL extern int kernelWriteStream(FILE* fp, L_KERNEL* kel);
        LEPT_DLL extern L_KERNEL* kernelCreateFromString(l_int32 h, int w, int cy, int cx, const char* kdata );
        LEPT_DLL extern L_KERNEL* kernelCreateFromFile( const char* filename );
        LEPT_DLL extern L_KERNEL* kernelCreateFromPix(PIX* pix, int cy, int cx);
        LEPT_DLL extern PIX* kernelDisplayInPix(L_KERNEL* kel, int size, int gthick);
        LEPT_DLL extern NUMA* parseStringForNumbers( const char* str, const char* seps );
        LEPT_DLL extern L_KERNEL* makeFlatKernel(l_int32 height, int width, int cy, int cx);
        LEPT_DLL extern L_KERNEL* makeGaussianKernel(l_int32 halfheight, int halfwidth, float stdev, float max);
        LEPT_DLL extern int makeGaussianKernelSep(l_int32 halfheight, int halfwidth, float stdev, float max, L_KERNEL** pkelx, L_KERNEL** pkely);
        LEPT_DLL extern L_KERNEL* makeDoGKernel(l_int32 halfheight, int halfwidth, float stdev, float ratio);
        LEPT_DLL extern char* getImagelibVersions();
        LEPT_DLL extern void listDestroy(DLLIST** phead);
        LEPT_DLL extern int listAddToHead(DLLIST** phead, void* data);
        LEPT_DLL extern int listAddToTail(DLLIST** phead, DLLIST** ptail, void* data);
        LEPT_DLL extern int listInsertBefore(DLLIST** phead, DLLIST* elem, void* data);
        LEPT_DLL extern int listInsertAfter(DLLIST** phead, DLLIST* elem, void* data);
        LEPT_DLL extern void* listRemoveElement(DLLIST** phead, DLLIST* elem);
        LEPT_DLL extern void* listRemoveFromHead(DLLIST** phead);
        LEPT_DLL extern void* listRemoveFromTail(DLLIST** phead, DLLIST** ptail);
        LEPT_DLL extern DLLIST* listFindElement(DLLIST* head, void* data);
        LEPT_DLL extern DLLIST* listFindTail(DLLIST* head);
        LEPT_DLL extern int listGetCount(DLLIST* head);
        LEPT_DLL extern int listReverse(DLLIST** phead);
        LEPT_DLL extern int listJoin(DLLIST** phead1, DLLIST** phead2);
        LEPT_DLL extern L_AMAP* l_amapCreate(l_int32 keytype);
        LEPT_DLL extern RB_TYPE* l_amapFind(L_AMAP* m, RB_TYPE key);
        LEPT_DLL extern void l_amapInsert(L_AMAP* m, RB_TYPE key, RB_TYPE value);
        LEPT_DLL extern void l_amapDelete(L_AMAP* m, RB_TYPE key);
        LEPT_DLL extern void l_amapDestroy(L_AMAP** pm);
        LEPT_DLL extern L_AMAP_NODE* l_amapGetFirst(L_AMAP* m);
        LEPT_DLL extern L_AMAP_NODE* l_amapGetNext(L_AMAP_NODE* n);
        LEPT_DLL extern L_AMAP_NODE* l_amapGetLast(L_AMAP* m);
        LEPT_DLL extern L_AMAP_NODE* l_amapGetPrev(L_AMAP_NODE* n);
        LEPT_DLL extern int l_amapSize(L_AMAP* m);
        LEPT_DLL extern L_ASET* l_asetCreate(l_int32 keytype);
        LEPT_DLL extern RB_TYPE* l_asetFind(L_ASET* s, RB_TYPE key);
        LEPT_DLL extern void l_asetInsert(L_ASET* s, RB_TYPE key);
        LEPT_DLL extern void l_asetDelete(L_ASET* s, RB_TYPE key);
        LEPT_DLL extern void l_asetDestroy(L_ASET** ps);
        LEPT_DLL extern L_ASET_NODE* l_asetGetFirst(L_ASET* s);
        LEPT_DLL extern L_ASET_NODE* l_asetGetNext(L_ASET_NODE* n);
        LEPT_DLL extern L_ASET_NODE* l_asetGetLast(L_ASET* s);
        LEPT_DLL extern L_ASET_NODE* l_asetGetPrev(L_ASET_NODE* n);
        LEPT_DLL extern int l_asetSize(L_ASET* s);
        LEPT_DLL extern PIX* generateBinaryMaze(l_int32 w, int h, int xi, int yi, float wallps, float ranis);
        LEPT_DLL extern PTA* pixSearchBinaryMaze(PIX* pixs, int xi, int yi, int xf, int yf, PIX** ppixd);
        LEPT_DLL extern PTA* pixSearchGrayMaze(PIX* pixs, int xi, int yi, int xf, int yf, PIX** ppixd);
        LEPT_DLL extern PIX* pixDilate(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixErode(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixHMT(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixOpen(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixClose(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixCloseSafe(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixOpenGeneralized(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixCloseGeneralized(PIX* pixd, PIX* pixs, SEL* sel);
        LEPT_DLL extern PIX* pixDilateBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixErodeBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseSafeBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern int selectComposableSels(l_int32 size, int direction, SEL** psel1, SEL** psel2);
        LEPT_DLL extern int selectComposableSizes(l_int32 size, l_int32* pfactor1, l_int32* pfactor2);
        LEPT_DLL extern PIX* pixDilateCompBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixErodeCompBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenCompBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseCompBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseSafeCompBrick(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern void resetMorphBoundaryCondition(l_int32 bc);
        LEPT_DLL extern uint getMorphBorderPixelColor(l_int32 type, int depth);
        LEPT_DLL extern PIX* pixExtractBoundary(PIX* pixs, int type);
        LEPT_DLL extern PIX* pixMorphSequenceMasked(PIX* pixs, PIX* pixm, const char* sequence, int dispsep );
        LEPT_DLL extern PIX* pixMorphSequenceByComponent(PIX* pixs, const char* sequence, int connectivity, int minw, int minh, BOXA** pboxa );
        LEPT_DLL extern PIXA* pixaMorphSequenceByComponent(PIXA* pixas, const char* sequence, int minw, int minh );
        LEPT_DLL extern PIX* pixMorphSequenceByRegion(PIX* pixs, PIX* pixm, const char* sequence, int connectivity, int minw, int minh, BOXA** pboxa );
        LEPT_DLL extern PIXA* pixaMorphSequenceByRegion(PIX* pixs, PIXA* pixam, const char* sequence, int minw, int minh );
        LEPT_DLL extern PIX* pixUnionOfMorphOps(PIX* pixs, SELA* sela, int type);
        LEPT_DLL extern PIX* pixIntersectionOfMorphOps(PIX* pixs, SELA* sela, int type);
        LEPT_DLL extern PIX* pixSelectiveConnCompFill(PIX* pixs, int connectivity, int minw, int minh);
        LEPT_DLL extern int pixRemoveMatchedPattern(PIX* pixs, PIX* pixp, PIX* pixe, int x0, int y0, int dsize);
        LEPT_DLL extern PIX* pixDisplayMatchedPattern(PIX* pixs, PIX* pixp, PIX* pixe, int x0, int y0, uint color, float scale, int nlevels);
        LEPT_DLL extern PIXA* pixaExtendByMorph(PIXA* pixas, int type, int niters, SEL* sel, int include);
        LEPT_DLL extern PIXA* pixaExtendByScaling(PIXA* pixas, NUMA* nasc, int type, int include);
        LEPT_DLL extern PIX* pixSeedfillMorph(PIX* pixs, PIX* pixm, int maxiters, int connectivity);
        LEPT_DLL extern NUMA* pixRunHistogramMorph(PIX* pixs, int runtype, int direction, int maxsize);
        LEPT_DLL extern PIX* pixTophat(PIX* pixs, int hsize, int vsize, int type);
        LEPT_DLL extern PIX* pixHDome(PIX* pixs, int height, int connectivity);
        LEPT_DLL extern PIX* pixFastTophat(PIX* pixs, int xsize, int ysize, int type);
        LEPT_DLL extern PIX* pixMorphGradient(PIX* pixs, int hsize, int vsize, int smoothing);
        LEPT_DLL extern PTA* pixaCentroids(PIXA* pixa);
        LEPT_DLL extern int pixCentroid(PIX* pix, l_int32* centtab, l_int32* sumtab, l_float32* pxave, l_float32* pyave);
        LEPT_DLL extern PIX* pixDilateBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixErodeBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixDilateCompBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixErodeCompBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenCompBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseCompBrickDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixDilateCompBrickExtendDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixErodeCompBrickExtendDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixOpenCompBrickExtendDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern PIX* pixCloseCompBrickExtendDwa(PIX* pixd, PIX* pixs, int hsize, int vsize);
        LEPT_DLL extern int getExtendedCompositeParameters(l_int32 size, l_int32* pn, l_int32* pextra, l_int32* pactualsize);
        LEPT_DLL extern PIX* pixMorphSequence(PIX* pixs, const char* sequence, int dispsep );
        LEPT_DLL extern PIX* pixMorphCompSequence(PIX* pixs, const char* sequence, int dispsep );
        LEPT_DLL extern PIX* pixMorphSequenceDwa(PIX* pixs, const char* sequence, int dispsep );
        LEPT_DLL extern PIX* pixMorphCompSequenceDwa(PIX* pixs, const char* sequence, int dispsep );
        LEPT_DLL extern int morphSequenceVerify(SARRAY* sa);
        LEPT_DLL extern PIX* pixGrayMorphSequence(PIX* pixs, const char* sequence, int dispsep, int dispy );
        LEPT_DLL extern PIX* pixColorMorphSequence(PIX* pixs, const char* sequence, int dispsep, int dispy );
        LEPT_DLL extern NUMA* numaCreate(l_int32 n);
        LEPT_DLL extern NUMA* numaCreateFromIArray(l_int32* iarray, int size);
        LEPT_DLL extern NUMA* numaCreateFromFArray(l_float32* farray, int size, int copyflag);
        LEPT_DLL extern NUMA* numaCreateFromString( const char* str );
        LEPT_DLL extern void numaDestroy(NUMA** pna);
        LEPT_DLL extern NUMA* numaCopy(NUMA* na);
        LEPT_DLL extern NUMA* numaClone(NUMA* na);
        LEPT_DLL extern int numaEmpty(NUMA* na);
        LEPT_DLL extern int numaAddNumber(NUMA* na, float val);
        LEPT_DLL extern int numaInsertNumber(NUMA* na, int index, float val);
        LEPT_DLL extern int numaRemoveNumber(NUMA* na, int index);
        LEPT_DLL extern int numaReplaceNumber(NUMA* na, int index, float val);
        LEPT_DLL extern int numaGetCount(NUMA* na);
        LEPT_DLL extern int numaSetCount(NUMA* na, int newcount);
        LEPT_DLL extern int numaGetFValue(NUMA* na, int index, l_float32* pval);
        LEPT_DLL extern int numaGetIValue(NUMA* na, int index, l_int32* pival);
        LEPT_DLL extern int numaSetValue(NUMA* na, int index, float val);
        LEPT_DLL extern int numaShiftValue(NUMA* na, int index, float diff);
        LEPT_DLL extern l_int32* numaGetIArray(NUMA* na);
        LEPT_DLL extern l_float32* numaGetFArray(NUMA* na, int copyflag);
        LEPT_DLL extern int numaGetRefcount(NUMA* na);
        LEPT_DLL extern int numaChangeRefcount(NUMA* na, int delta);
        LEPT_DLL extern int numaGetParameters(NUMA* na, l_float32* pstartx, l_float32* pdelx);
        LEPT_DLL extern int numaSetParameters(NUMA* na, float startx, float delx);
        LEPT_DLL extern int numaCopyParameters(NUMA* nad, NUMA* nas);
        LEPT_DLL extern SARRAY* numaConvertToSarray(NUMA* na, int size1, int size2, int addzeros, int type);
        LEPT_DLL extern NUMA* numaRead( const char* filename );
        LEPT_DLL extern NUMA* numaReadStream(FILE* fp);
        LEPT_DLL extern NUMA* numaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int numaWrite( const char* filename, NUMA *na );
        LEPT_DLL extern int numaWriteStream(FILE* fp, NUMA* na);
        LEPT_DLL extern int numaWriteMem(l_uint8** pdata, size_t* psize, NUMA* na);
        LEPT_DLL extern NUMAA* numaaCreate(l_int32 n);
        LEPT_DLL extern NUMAA* numaaCreateFull(l_int32 nptr, int n);
        LEPT_DLL extern int numaaTruncate(NUMAA* naa);
        LEPT_DLL extern void numaaDestroy(NUMAA** pnaa);
        LEPT_DLL extern int numaaAddNuma(NUMAA* naa, NUMA* na, int copyflag);
        LEPT_DLL extern int numaaGetCount(NUMAA* naa);
        LEPT_DLL extern int numaaGetNumaCount(NUMAA* naa, int index);
        LEPT_DLL extern int numaaGetNumberCount(NUMAA* naa);
        LEPT_DLL extern NUMA** numaaGetPtrArray(NUMAA* naa);
        LEPT_DLL extern NUMA* numaaGetNuma(NUMAA* naa, int index, int accessflag);
        LEPT_DLL extern int numaaReplaceNuma(NUMAA* naa, int index, NUMA* na);
        LEPT_DLL extern int numaaGetValue(NUMAA* naa, int i, int j, l_float32* pfval, l_int32* pival);
        LEPT_DLL extern int numaaAddNumber(NUMAA* naa, int index, float val);
        LEPT_DLL extern NUMAA* numaaRead( const char* filename );
        LEPT_DLL extern NUMAA* numaaReadStream(FILE* fp);
        LEPT_DLL extern NUMAA* numaaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int numaaWrite( const char* filename, NUMAA *naa );
        LEPT_DLL extern int numaaWriteStream(FILE* fp, NUMAA* naa);
        LEPT_DLL extern int numaaWriteMem(l_uint8** pdata, size_t* psize, NUMAA* naa);
        LEPT_DLL extern NUMA* numaArithOp(NUMA* nad, NUMA* na1, NUMA* na2, int op);
        LEPT_DLL extern NUMA* numaLogicalOp(NUMA* nad, NUMA* na1, NUMA* na2, int op);
        LEPT_DLL extern NUMA* numaInvert(NUMA* nad, NUMA* nas);
        LEPT_DLL extern int numaSimilar(NUMA* na1, NUMA* na2, float maxdiff, l_int32* psimilar);
        LEPT_DLL extern int numaAddToNumber(NUMA* na, int index, float val);
        LEPT_DLL extern int numaGetMin(NUMA* na, l_float32* pminval, l_int32* piminloc);
        LEPT_DLL extern int numaGetMax(NUMA* na, l_float32* pmaxval, l_int32* pimaxloc);
        LEPT_DLL extern int numaGetSum(NUMA* na, l_float32* psum);
        LEPT_DLL extern NUMA* numaGetPartialSums(NUMA* na);
        LEPT_DLL extern int numaGetSumOnInterval(NUMA* na, int first, int last, l_float32* psum);
        LEPT_DLL extern int numaHasOnlyIntegers(NUMA* na, int maxsamples, l_int32* pallints);
        LEPT_DLL extern NUMA* numaSubsample(NUMA* nas, int subfactor);
        LEPT_DLL extern NUMA* numaMakeDelta(NUMA* nas);
        LEPT_DLL extern NUMA* numaMakeSequence(l_float32 startval, float increment, int size);
        LEPT_DLL extern NUMA* numaMakeConstant(l_float32 val, int size);
        LEPT_DLL extern NUMA* numaMakeAbsValue(NUMA* nad, NUMA* nas);
        LEPT_DLL extern NUMA* numaAddBorder(NUMA* nas, int left, int right, float val);
        LEPT_DLL extern NUMA* numaAddSpecifiedBorder(NUMA* nas, int left, int right, int type);
        LEPT_DLL extern NUMA* numaRemoveBorder(NUMA* nas, int left, int right);
        LEPT_DLL extern int numaCountNonzeroRuns(NUMA* na, l_int32* pcount);
        LEPT_DLL extern int numaGetNonzeroRange(NUMA* na, float eps, l_int32* pfirst, l_int32* plast);
        LEPT_DLL extern int numaGetCountRelativeToZero(NUMA* na, int type, l_int32* pcount);
        LEPT_DLL extern NUMA* numaClipToInterval(NUMA* nas, int first, int last);
        LEPT_DLL extern NUMA* numaMakeThresholdIndicator(NUMA* nas, float thresh, int type);
        LEPT_DLL extern NUMA* numaUniformSampling(NUMA* nas, int nsamp);
        LEPT_DLL extern NUMA* numaReverse(NUMA* nad, NUMA* nas);
        LEPT_DLL extern NUMA* numaLowPassIntervals(NUMA* nas, float thresh, float maxn);
        LEPT_DLL extern NUMA* numaThresholdEdges(NUMA* nas, float thresh1, float thresh2, float maxn);
        LEPT_DLL extern int numaGetSpanValues(NUMA* na, int span, l_int32* pstart, l_int32* pend);
        LEPT_DLL extern int numaGetEdgeValues(NUMA* na, int edge, l_int32* pstart, l_int32* pend, l_int32* psign);
        LEPT_DLL extern int numaInterpolateEqxVal(l_float32 startx, float deltax, NUMA* nay, int type, float xval, l_float32* pyval);
        LEPT_DLL extern int numaInterpolateArbxVal(NUMA* nax, NUMA* nay, int type, float xval, l_float32* pyval);
        LEPT_DLL extern int numaInterpolateEqxInterval(l_float32 startx, float deltax, NUMA* nasy, int type, float x0, float x1, int npts, NUMA** pnax, NUMA** pnay);
        LEPT_DLL extern int numaInterpolateArbxInterval(NUMA* nax, NUMA* nay, int type, float x0, float x1, int npts, NUMA** pnadx, NUMA** pnady);
        LEPT_DLL extern int numaFitMax(NUMA* na, l_float32* pmaxval, NUMA* naloc, l_float32* pmaxloc);
        LEPT_DLL extern int numaDifferentiateInterval(NUMA* nax, NUMA* nay, float x0, float x1, int npts, NUMA** pnadx, NUMA** pnady);
        LEPT_DLL extern int numaIntegrateInterval(NUMA* nax, NUMA* nay, float x0, float x1, int npts, l_float32* psum);
        LEPT_DLL extern int numaSortGeneral(NUMA* na, NUMA** pnasort, NUMA** pnaindex, NUMA** pnainvert, int sortorder, int sorttype);
        LEPT_DLL extern NUMA* numaSortAutoSelect(NUMA* nas, int sortorder);
        LEPT_DLL extern NUMA* numaSortIndexAutoSelect(NUMA* nas, int sortorder);
        LEPT_DLL extern int numaChooseSortType(NUMA* nas);
        LEPT_DLL extern NUMA* numaSort(NUMA* naout, NUMA* nain, int sortorder);
        LEPT_DLL extern NUMA* numaBinSort(NUMA* nas, int sortorder);
        LEPT_DLL extern NUMA* numaGetSortIndex(NUMA* na, int sortorder);
        LEPT_DLL extern NUMA* numaGetBinSortIndex(NUMA* nas, int sortorder);
        LEPT_DLL extern NUMA* numaSortByIndex(NUMA* nas, NUMA* naindex);
        LEPT_DLL extern int numaIsSorted(NUMA* nas, int sortorder, l_int32* psorted);
        LEPT_DLL extern int numaSortPair(NUMA* nax, NUMA* nay, int sortorder, NUMA** pnasx, NUMA** pnasy);
        LEPT_DLL extern NUMA* numaInvertMap(NUMA* nas);
        LEPT_DLL extern NUMA* numaPseudorandomSequence(l_int32 size, int seed);
        LEPT_DLL extern NUMA* numaRandomPermutation(NUMA* nas, int seed);
        LEPT_DLL extern int numaGetRankValue(NUMA* na, float fract, NUMA* nasort, int usebins, l_float32* pval);
        LEPT_DLL extern int numaGetMedian(NUMA* na, l_float32* pval);
        LEPT_DLL extern int numaGetBinnedMedian(NUMA* na, l_int32* pval);
        LEPT_DLL extern int numaGetMode(NUMA* na, l_float32* pval, l_int32* pcount);
        LEPT_DLL extern int numaGetMedianVariation(NUMA* na, l_float32* pmedval, l_float32* pmedvar);
        LEPT_DLL extern int numaJoin(NUMA* nad, NUMA* nas, int istart, int iend);
        LEPT_DLL extern int numaaJoin(NUMAA* naad, NUMAA* naas, int istart, int iend);
        LEPT_DLL extern NUMA* numaaFlattenToNuma(NUMAA* naa);
        LEPT_DLL extern NUMA* numaErode(NUMA* nas, int size);
        LEPT_DLL extern NUMA* numaDilate(NUMA* nas, int size);
        LEPT_DLL extern NUMA* numaOpen(NUMA* nas, int size);
        LEPT_DLL extern NUMA* numaClose(NUMA* nas, int size);
        LEPT_DLL extern NUMA* numaTransform(NUMA* nas, float shift, float scale);
        LEPT_DLL extern int numaSimpleStats(NUMA* na, int first, int last, l_float32* pmean, l_float32* pvar, l_float32* prvar);
        LEPT_DLL extern int numaWindowedStats(NUMA* nas, int wc, NUMA** pnam, NUMA** pnams, NUMA** pnav, NUMA** pnarv);
        LEPT_DLL extern NUMA* numaWindowedMean(NUMA* nas, int wc);
        LEPT_DLL extern NUMA* numaWindowedMeanSquare(NUMA* nas, int wc);
        LEPT_DLL extern int numaWindowedVariance(NUMA* nam, NUMA* nams, NUMA** pnav, NUMA** pnarv);
        LEPT_DLL extern NUMA* numaWindowedMedian(NUMA* nas, int halfwin);
        LEPT_DLL extern NUMA* numaConvertToInt(NUMA* nas);
        LEPT_DLL extern NUMA* numaMakeHistogram(NUMA* na, int maxbins, l_int32* pbinsize, l_int32* pbinstart);
        LEPT_DLL extern NUMA* numaMakeHistogramAuto(NUMA* na, int maxbins);
        LEPT_DLL extern NUMA* numaMakeHistogramClipped(NUMA* na, float binsize, float maxsize);
        LEPT_DLL extern NUMA* numaRebinHistogram(NUMA* nas, int newsize);
        LEPT_DLL extern NUMA* numaNormalizeHistogram(NUMA* nas, float tsum);
        LEPT_DLL extern int numaGetStatsUsingHistogram(NUMA* na, int maxbins, l_float32* pmin, l_float32* pmax, l_float32* pmean, l_float32* pvariance, l_float32* pmedian, float rank, l_float32* prval, NUMA** phisto);
        LEPT_DLL extern int numaGetHistogramStats(NUMA* nahisto, float startx, float deltax, l_float32* pxmean, l_float32* pxmedian, l_float32* pxmode, l_float32* pxvariance);
        LEPT_DLL extern int numaGetHistogramStatsOnInterval(NUMA* nahisto, float startx, float deltax, int ifirst, int ilast, l_float32* pxmean, l_float32* pxmedian, l_float32* pxmode, l_float32* pxvariance);
        LEPT_DLL extern int numaMakeRankFromHistogram(l_float32 startx, float deltax, NUMA* nasy, int npts, NUMA** pnax, NUMA** pnay);
        LEPT_DLL extern int numaHistogramGetRankFromVal(NUMA* na, float rval, l_float32* prank);
        LEPT_DLL extern int numaHistogramGetValFromRank(NUMA* na, float rank, l_float32* prval);
        LEPT_DLL extern int numaDiscretizeRankAndIntensity(NUMA* na, int nbins, NUMA** pnarbin, NUMA** pnam, NUMA** pnar, NUMA** pnabb);
        LEPT_DLL extern int numaGetRankBinValues(NUMA* na, int nbins, NUMA** pnarbin, NUMA** pnam);
        LEPT_DLL extern int numaSplitDistribution(NUMA* na, float scorefract, l_int32* psplitindex, l_float32* pave1, l_float32* pave2, l_float32* pnum1, l_float32* pnum2, NUMA** pnascore);
        LEPT_DLL extern int grayHistogramsToEMD(NUMAA* naa1, NUMAA* naa2, NUMA** pnad);
        LEPT_DLL extern int numaEarthMoverDistance(NUMA* na1, NUMA* na2, l_float32* pdist);
        LEPT_DLL extern int grayInterHistogramStats(NUMAA* naa, int wc, NUMA** pnam, NUMA** pnams, NUMA** pnav, NUMA** pnarv);
        LEPT_DLL extern NUMA* numaFindPeaks(NUMA* nas, int nmax, float fract1, float fract2);
        LEPT_DLL extern NUMA* numaFindExtrema(NUMA* nas, float delta, NUMA** pnav);
        LEPT_DLL extern int numaCountReversals(NUMA* nas, float minreversal, l_int32* pnr, l_float32* pnrpl);
        LEPT_DLL extern int numaSelectCrossingThreshold(NUMA* nax, NUMA* nay, float estthresh, l_float32* pbestthresh);
        LEPT_DLL extern NUMA* numaCrossingsByThreshold(NUMA* nax, NUMA* nay, float thresh);
        LEPT_DLL extern NUMA* numaCrossingsByPeaks(NUMA* nax, NUMA* nay, float delta);
        LEPT_DLL extern int numaEvalBestHaarParameters(NUMA* nas, float relweight, int nwidth, int nshift, float minwidth, float maxwidth, l_float32* pbestwidth, l_float32* pbestshift, l_float32* pbestscore);
        LEPT_DLL extern int numaEvalHaarSum(NUMA* nas, float width, float shift, float relweight, l_float32* pscore);
        LEPT_DLL extern NUMA* genConstrainedNumaInRange(l_int32 first, int last, int nmax, int use_pairs);
        LEPT_DLL extern int pixGetRegionsBinary(PIX* pixs, PIX** ppixhm, PIX** ppixtm, PIX** ppixtb, PIXA* pixadb);
        LEPT_DLL extern PIX* pixGenHalftoneMask(PIX* pixs, PIX** ppixtext, l_int32* phtfound, int debug);
        LEPT_DLL extern PIX* pixGenerateHalftoneMask(PIX* pixs, PIX** ppixtext, l_int32* phtfound, PIXA* pixadb);
        LEPT_DLL extern PIX* pixGenTextlineMask(PIX* pixs, PIX** ppixvws, l_int32* ptlfound, PIXA* pixadb);
        LEPT_DLL extern PIX* pixGenTextblockMask(PIX* pixs, PIX* pixvws, PIXA* pixadb);
        LEPT_DLL extern BOX* pixFindPageForeground(PIX* pixs, int threshold, int mindist, int erasedist, int pagenum, int showmorph, int display, const char* pdfdir );
        LEPT_DLL extern int pixSplitIntoCharacters(PIX* pixs, int minw, int minh, BOXA** pboxa, PIXA** ppixa, PIX** ppixdebug);
        LEPT_DLL extern BOXA* pixSplitComponentWithProfile(PIX* pixs, int delta, int mindel, PIX** ppixdebug);
        LEPT_DLL extern PIXA* pixExtractTextlines(PIX* pixs, int maxw, int maxh, int minw, int minh, int adjw, int adjh, PIXA* pixadb);
        LEPT_DLL extern PIXA* pixExtractRawTextlines(PIX* pixs, int maxw, int maxh, int adjw, int adjh, PIXA* pixadb);
        LEPT_DLL extern int pixCountTextColumns(PIX* pixs, float deltafract, float peakfract, float clipfract, l_int32* pncols, PIXA* pixadb);
        LEPT_DLL extern int pixDecideIfText(PIX* pixs, BOX* box, l_int32* pistext, PIXA* pixadb);
        LEPT_DLL extern int pixFindThreshFgExtent(PIX* pixs, int thresh, l_int32* ptop, l_int32* pbot);
        LEPT_DLL extern int pixDecideIfTable(PIX* pixs, BOX* box, l_int32* pistable, PIXA* pixadb);
        LEPT_DLL extern PIX* pixPrepare1bpp(PIX* pixs, BOX* box, float cropfract, int outres);
        LEPT_DLL extern int pixEstimateBackground(PIX* pixs, int darkthresh, float edgecrop, l_int32* pbg);
        LEPT_DLL extern int pixFindLargeRectangles(PIX* pixs, int polarity, int nrect, BOXA** pboxa, PIX** ppixdb);
        LEPT_DLL extern int pixFindLargestRectangle(PIX* pixs, int polarity, BOX** pbox, PIX** ppixdb);
        LEPT_DLL extern int pixSetSelectCmap(PIX* pixs, BOX* box, int sindex, int rval, int gval, int bval);
        LEPT_DLL extern int pixColorGrayRegionsCmap(PIX* pixs, BOXA* boxa, int type, int rval, int gval, int bval);
        LEPT_DLL extern int pixColorGrayCmap(PIX* pixs, BOX* box, int type, int rval, int gval, int bval);
        LEPT_DLL extern int pixColorGrayMaskedCmap(PIX* pixs, PIX* pixm, int type, int rval, int gval, int bval);
        LEPT_DLL extern int addColorizedGrayToCmap(PIXCMAP* cmap, int type, int rval, int gval, int bval, NUMA** pna);
        LEPT_DLL extern int pixSetSelectMaskedCmap(PIX* pixs, PIX* pixm, int x, int y, int sindex, int rval, int gval, int bval);
        LEPT_DLL extern int pixSetMaskedCmap(PIX* pixs, PIX* pixm, int x, int y, int rval, int gval, int bval);
        LEPT_DLL extern char* parseForProtos( const char* filein, const char* prestring );
        LEPT_DLL extern BOXA* boxaGetWhiteblocks(BOXA* boxas, BOX* box, int sortflag, int maxboxes, float maxoverlap, int maxperim, float fract, int maxpops);
        LEPT_DLL extern BOXA* boxaPruneSortedOnOverlap(BOXA* boxas, float maxoverlap);
        LEPT_DLL extern int convertFilesToPdf( const char* dirname, const char* substr, int res, float scalefactor, int type, int quality, const char* title, const char* fileout );
        LEPT_DLL extern int saConvertFilesToPdf(SARRAY* sa, int res, float scalefactor, int type, int quality, const char* title, const char* fileout );
        LEPT_DLL extern int saConvertFilesToPdfData(SARRAY* sa, int res, float scalefactor, int type, int quality, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int selectDefaultPdfEncoding(PIX* pix, l_int32* ptype);
        LEPT_DLL extern int convertUnscaledFilesToPdf( const char* dirname, const char* substr, const char* title, const char* fileout );
        LEPT_DLL extern int saConvertUnscaledFilesToPdf(SARRAY* sa, const char* title, const char* fileout );
        LEPT_DLL extern int saConvertUnscaledFilesToPdfData(SARRAY* sa, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int convertUnscaledToPdfData( const char* fname, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int pixaConvertToPdf(PIXA* pixa, int res, float scalefactor, int type, int quality, const char* title, const char* fileout );
        LEPT_DLL extern int pixaConvertToPdfData(PIXA* pixa, int res, float scalefactor, int type, int quality, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int convertToPdf( const char* filein, int type, int quality, const char* fileout, int x, int y, int res, const char* title, L_PDF_DATA **plpd, int position );
        LEPT_DLL extern int convertImageDataToPdf(l_uint8* imdata, size_t size, int type, int quality, const char* fileout, int x, int y, int res, const char* title, L_PDF_DATA **plpd, int position );
        LEPT_DLL extern int convertToPdfData( const char* filein, int type, int quality, byte **pdata, size_t* pnbytes, int x, int y, int res, const char* title, L_PDF_DATA **plpd, int position );
        LEPT_DLL extern int convertImageDataToPdfData(l_uint8* imdata, size_t size, int type, int quality, l_uint8** pdata, size_t* pnbytes, int x, int y, int res, const char* title, L_PDF_DATA **plpd, int position );
        LEPT_DLL extern int pixConvertToPdf(PIX* pix, int type, int quality, const char* fileout, int x, int y, int res, const char* title, L_PDF_DATA **plpd, int position );
        LEPT_DLL extern int pixWriteStreamPdf(FILE* fp, PIX* pix, int res, const char* title );
        LEPT_DLL extern int pixWriteMemPdf(l_uint8** pdata, size_t* pnbytes, PIX* pix, int res, const char* title );
        LEPT_DLL extern int convertSegmentedFilesToPdf( const char* dirname, const char* substr, int res, int type, int thresh, BOXAA* baa, int quality, float scalefactor, const char* title, const char* fileout );
        LEPT_DLL extern BOXAA* convertNumberedMasksToBoxaa( const char* dirname, const char* substr, int numpre, int numpost );
        LEPT_DLL extern int convertToPdfSegmented( const char* filein, int res, int type, int thresh, BOXA* boxa, int quality, float scalefactor, const char* title, const char* fileout );
        LEPT_DLL extern int pixConvertToPdfSegmented(PIX* pixs, int res, int type, int thresh, BOXA* boxa, int quality, float scalefactor, const char* title, const char* fileout );
        LEPT_DLL extern int convertToPdfDataSegmented( const char* filein, int res, int type, int thresh, BOXA* boxa, int quality, float scalefactor, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int pixConvertToPdfDataSegmented(PIX* pixs, int res, int type, int thresh, BOXA* boxa, int quality, float scalefactor, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int concatenatePdf( const char* dirname, const char* substr, const char* fileout );
        LEPT_DLL extern int saConcatenatePdf(SARRAY* sa, const char* fileout );
        LEPT_DLL extern int ptraConcatenatePdf(L_PTRA* pa, const char* fileout );
        LEPT_DLL extern int concatenatePdfToData( const char* dirname, const char* substr, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int saConcatenatePdfToData(SARRAY* sa, l_uint8** pdata, size_t* pnbytes);
        LEPT_DLL extern int pixConvertToPdfData(PIX* pix, int type, int quality, l_uint8** pdata, size_t* pnbytes, int x, int y, int res, const char* title, L_PDF_DATA **plpd, int position );
        LEPT_DLL extern int ptraConcatenatePdfToData(L_PTRA* pa_data, SARRAY* sa, l_uint8** pdata, size_t* pnbytes);
        LEPT_DLL extern int convertTiffMultipageToPdf( const char* filein, const char* fileout );
        LEPT_DLL extern int l_generateCIDataForPdf( const char* fname, PIX *pix, int quality, L_COMP_DATA **pcid );
        LEPT_DLL extern L_COMP_DATA* l_generateFlateDataPdf( const char* fname, PIX *pixs );
        LEPT_DLL extern L_COMP_DATA* l_generateJpegData( const char* fname, int ascii85flag );
        LEPT_DLL extern int l_generateCIData( const char* fname, int type, int quality, int ascii85, L_COMP_DATA** pcid );
        LEPT_DLL extern int pixGenerateCIData(PIX* pixs, int type, int quality, int ascii85, L_COMP_DATA** pcid);
        LEPT_DLL extern L_COMP_DATA* l_generateFlateData( const char* fname, int ascii85flag );
        LEPT_DLL extern L_COMP_DATA* l_generateG4Data( const char* fname, int ascii85flag );
        LEPT_DLL extern int cidConvertToPdfData(L_COMP_DATA* cid, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern void l_CIDataDestroy(L_COMP_DATA** pcid);
        LEPT_DLL extern void l_pdfSetG4ImageMask(l_int32 flag);
        LEPT_DLL extern void l_pdfSetDateAndVersion(l_int32 flag);
        LEPT_DLL extern void setPixMemoryManager(alloc_fn allocator, dealloc_fn deallocator);
        LEPT_DLL extern PIX* pixCreate(l_int32 width, int height, int depth);
        LEPT_DLL extern PIX* pixCreateNoInit(l_int32 width, int height, int depth);
        LEPT_DLL extern PIX* pixCreateTemplate(PIX* pixs);
        LEPT_DLL extern PIX* pixCreateTemplateNoInit(PIX* pixs);
        LEPT_DLL extern PIX* pixCreateHeader(l_int32 width, int height, int depth);
        LEPT_DLL extern PIX* pixClone(PIX* pixs);
        LEPT_DLL extern void pixDestroy(PIX** ppix);
        LEPT_DLL extern PIX* pixCopy(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixResizeImageData(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixCopyColormap(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixSizesEqual(PIX* pix1, PIX* pix2);
        LEPT_DLL extern int pixTransferAllData(PIX* pixd, PIX** ppixs, int copytext, int copyformat);
        LEPT_DLL extern int pixSwapAndDestroy(PIX** ppixd, PIX** ppixs);
        LEPT_DLL extern int pixGetWidth(PIX* pix);
        LEPT_DLL extern int pixSetWidth(PIX* pix, int width);
        LEPT_DLL extern int pixGetHeight(PIX* pix);
        LEPT_DLL extern int pixSetHeight(PIX* pix, int height);
        LEPT_DLL extern int pixGetDepth(PIX* pix);
        LEPT_DLL extern int pixSetDepth(PIX* pix, int depth);
        LEPT_DLL extern int pixGetDimensions(PIX* pix, l_int32* pw, l_int32* ph, l_int32* pd);
        LEPT_DLL extern int pixSetDimensions(PIX* pix, int w, int h, int d);
        LEPT_DLL extern int pixCopyDimensions(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixGetSpp(PIX* pix);
        LEPT_DLL extern int pixSetSpp(PIX* pix, int spp);
        LEPT_DLL extern int pixCopySpp(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixGetWpl(PIX* pix);
        LEPT_DLL extern int pixSetWpl(PIX* pix, int wpl);
        LEPT_DLL extern int pixGetRefcount(PIX* pix);
        LEPT_DLL extern int pixChangeRefcount(PIX* pix, int delta);
        LEPT_DLL extern int pixGetXRes(PIX* pix);
        LEPT_DLL extern int pixSetXRes(PIX* pix, int res);
        LEPT_DLL extern int pixGetYRes(PIX* pix);
        LEPT_DLL extern int pixSetYRes(PIX* pix, int res);
        LEPT_DLL extern int pixGetResolution(PIX* pix, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern int pixSetResolution(PIX* pix, int xres, int yres);
        LEPT_DLL extern int pixCopyResolution(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixScaleResolution(PIX* pix, float xscale, float yscale);
        LEPT_DLL extern int pixGetInputFormat(PIX* pix);
        LEPT_DLL extern int pixSetInputFormat(PIX* pix, int informat);
        LEPT_DLL extern int pixCopyInputFormat(PIX* pixd, PIX* pixs);
        LEPT_DLL extern int pixSetSpecial(PIX* pix, int special);
        LEPT_DLL extern char* pixGetText(PIX* pix);
        LEPT_DLL extern int pixSetText(PIX* pix, const char* textstring );
        LEPT_DLL extern int pixAddText(PIX* pix, const char* textstring );
        LEPT_DLL extern int pixCopyText(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIXCMAP* pixGetColormap(PIX* pix);
        LEPT_DLL extern int pixSetColormap(PIX* pix, PIXCMAP* colormap);
        LEPT_DLL extern int pixDestroyColormap(PIX* pix);
        LEPT_DLL extern l_uint32* pixGetData(PIX* pix);
        LEPT_DLL extern int pixSetData(PIX* pix, l_uint32* data);
        LEPT_DLL extern l_uint32* pixExtractData(PIX* pixs);
        LEPT_DLL extern int pixFreeData(PIX* pix);
        LEPT_DLL extern void** pixGetLinePtrs(PIX* pix, l_int32* psize);
        LEPT_DLL extern int pixPrintStreamInfo(FILE* fp, PIX* pix, const char* text );
        LEPT_DLL extern int pixGetPixel(PIX* pix, int x, int y, l_uint32* pval);
        LEPT_DLL extern int pixSetPixel(PIX* pix, int x, int y, uint val);
        LEPT_DLL extern int pixGetRGBPixel(PIX* pix, int x, int y, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern int pixSetRGBPixel(PIX* pix, int x, int y, int rval, int gval, int bval);
        LEPT_DLL extern int pixGetRandomPixel(PIX* pix, l_uint32* pval, l_int32* px, l_int32* py);
        LEPT_DLL extern int pixClearPixel(PIX* pix, int x, int y);
        LEPT_DLL extern int pixFlipPixel(PIX* pix, int x, int y);
        LEPT_DLL extern void setPixelLow(l_uint32* line, int x, int depth, uint val);
        LEPT_DLL extern int pixGetBlackOrWhiteVal(PIX* pixs, int op, l_uint32* pval);
        LEPT_DLL extern int pixClearAll(PIX* pix);
        LEPT_DLL extern int pixSetAll(PIX* pix);
        LEPT_DLL extern int pixSetAllGray(PIX* pix, int grayval);
        LEPT_DLL extern int pixSetAllArbitrary(PIX* pix, uint val);
        LEPT_DLL extern int pixSetBlackOrWhite(PIX* pixs, int op);
        LEPT_DLL extern int pixSetComponentArbitrary(PIX* pix, int comp, int val);
        LEPT_DLL extern int pixClearInRect(PIX* pix, BOX* box);
        LEPT_DLL extern int pixSetInRect(PIX* pix, BOX* box);
        LEPT_DLL extern int pixSetInRectArbitrary(PIX* pix, BOX* box, uint val);
        LEPT_DLL extern int pixBlendInRect(PIX* pixs, BOX* box, uint val, float fract);
        LEPT_DLL extern int pixSetPadBits(PIX* pix, int val);
        LEPT_DLL extern int pixSetPadBitsBand(PIX* pix, int by, int bh, int val);
        LEPT_DLL extern int pixSetOrClearBorder(PIX* pixs, int left, int right, int top, int bot, int op);
        LEPT_DLL extern int pixSetBorderVal(PIX* pixs, int left, int right, int top, int bot, uint val);
        LEPT_DLL extern int pixSetBorderRingVal(PIX* pixs, int dist, uint val);
        LEPT_DLL extern int pixSetMirroredBorder(PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern PIX* pixCopyBorder(PIX* pixd, PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern PIX* pixAddBorder(PIX* pixs, int npix, uint val);
        LEPT_DLL extern PIX* pixAddBlackOrWhiteBorder(PIX* pixs, int left, int right, int top, int bot, int op);
        LEPT_DLL extern PIX* pixAddBorderGeneral(PIX* pixs, int left, int right, int top, int bot, uint val);
        LEPT_DLL extern PIX* pixRemoveBorder(PIX* pixs, int npix);
        LEPT_DLL extern PIX* pixRemoveBorderGeneral(PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern PIX* pixRemoveBorderToSize(PIX* pixs, int wd, int hd);
        LEPT_DLL extern PIX* pixAddMirroredBorder(PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern PIX* pixAddRepeatedBorder(PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern PIX* pixAddMixedBorder(PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern PIX* pixAddContinuedBorder(PIX* pixs, int left, int right, int top, int bot);
        LEPT_DLL extern int pixShiftAndTransferAlpha(PIX* pixd, PIX* pixs, float shiftx, float shifty);
        LEPT_DLL extern PIX* pixDisplayLayersRGBA(PIX* pixs, uint val, int maxw);
        LEPT_DLL extern PIX* pixCreateRGBImage(PIX* pixr, PIX* pixg, PIX* pixb);
        LEPT_DLL extern PIX* pixGetRGBComponent(PIX* pixs, int comp);
        LEPT_DLL extern int pixSetRGBComponent(PIX* pixd, PIX* pixs, int comp);
        LEPT_DLL extern PIX* pixGetRGBComponentCmap(PIX* pixs, int comp);
        LEPT_DLL extern int pixCopyRGBComponent(PIX* pixd, PIX* pixs, int comp);
        LEPT_DLL extern int composeRGBPixel(l_int32 rval, int gval, int bval, l_uint32* ppixel);
        LEPT_DLL extern int composeRGBAPixel(l_int32 rval, int gval, int bval, int aval, l_uint32* ppixel);
        LEPT_DLL extern void extractRGBValues(l_uint32 pixel, l_int32* prval, l_int32* pgval, l_int32* pbval);
        LEPT_DLL extern void extractRGBAValues(l_uint32 pixel, l_int32* prval, l_int32* pgval, l_int32* pbval, l_int32* paval);
        LEPT_DLL extern int extractMinMaxComponent(l_uint32 pixel, int type);
        LEPT_DLL extern int pixGetRGBLine(PIX* pixs, int row, l_uint8* bufr, l_uint8* bufg, l_uint8* bufb);
        LEPT_DLL extern PIX* pixEndianByteSwapNew(PIX* pixs);
        LEPT_DLL extern int pixEndianByteSwap(PIX* pixs);
        LEPT_DLL extern int lineEndianByteSwap(l_uint32* datad, l_uint32* datas, int wpl);
        LEPT_DLL extern PIX* pixEndianTwoByteSwapNew(PIX* pixs);
        LEPT_DLL extern int pixEndianTwoByteSwap(PIX* pixs);
        LEPT_DLL extern int pixGetRasterData(PIX* pixs, l_uint8** pdata, size_t* pnbytes);
        LEPT_DLL extern int pixAlphaIsOpaque(PIX* pix, l_int32* popaque);
        LEPT_DLL extern l_uint8** pixSetupByteProcessing(PIX* pix, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int pixCleanupByteProcessing(PIX* pix, l_uint8** lineptrs);
        LEPT_DLL extern void l_setAlphaMaskBorder(l_float32 val1, float val2);
        LEPT_DLL extern int pixSetMasked(PIX* pixd, PIX* pixm, uint val);
        LEPT_DLL extern int pixSetMaskedGeneral(PIX* pixd, PIX* pixm, uint val, int x, int y);
        LEPT_DLL extern int pixCombineMasked(PIX* pixd, PIX* pixs, PIX* pixm);
        LEPT_DLL extern int pixCombineMaskedGeneral(PIX* pixd, PIX* pixs, PIX* pixm, int x, int y);
        LEPT_DLL extern int pixPaintThroughMask(PIX* pixd, PIX* pixm, int x, int y, uint val);
        LEPT_DLL extern int pixPaintSelfThroughMask(PIX* pixd, PIX* pixm, int x, int y, int searchdir, int mindist, int tilesize, int ntiles, int distblend);
        LEPT_DLL extern PIX* pixMakeMaskFromVal(PIX* pixs, int val);
        LEPT_DLL extern PIX* pixMakeMaskFromLUT(PIX* pixs, l_int32* tab);
        LEPT_DLL extern PIX* pixMakeArbMaskFromRGB(PIX* pixs, float rc, float gc, float bc, float thresh);
        LEPT_DLL extern PIX* pixSetUnderTransparency(PIX* pixs, uint val, int debug);
        LEPT_DLL extern PIX* pixMakeAlphaFromMask(PIX* pixs, int dist, BOX** pbox);
        LEPT_DLL extern int pixGetColorNearMaskBoundary(PIX* pixs, PIX* pixm, BOX* box, int dist, l_uint32* pval, int debug);
        LEPT_DLL extern PIX* pixInvert(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixOr(PIX* pixd, PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixAnd(PIX* pixd, PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixXor(PIX* pixd, PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixSubtract(PIX* pixd, PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern int pixZero(PIX* pix, l_int32* pempty);
        LEPT_DLL extern int pixForegroundFraction(PIX* pix, l_float32* pfract);
        LEPT_DLL extern NUMA* pixaCountPixels(PIXA* pixa);
        LEPT_DLL extern int pixCountPixels(PIX* pix, l_int32* pcount, l_int32* tab8);
        LEPT_DLL extern NUMA* pixCountByRow(PIX* pix, BOX* box);
        LEPT_DLL extern NUMA* pixCountByColumn(PIX* pix, BOX* box);
        LEPT_DLL extern NUMA* pixCountPixelsByRow(PIX* pix, l_int32* tab8);
        LEPT_DLL extern NUMA* pixCountPixelsByColumn(PIX* pix);
        LEPT_DLL extern int pixCountPixelsInRow(PIX* pix, int row, l_int32* pcount, l_int32* tab8);
        LEPT_DLL extern NUMA* pixGetMomentByColumn(PIX* pix, int order);
        LEPT_DLL extern int pixThresholdPixelSum(PIX* pix, int thresh, l_int32* pabove, l_int32* tab8);
        LEPT_DLL extern l_int32* makePixelSumTab8(void );
        LEPT_DLL extern l_int32* makePixelCentroidTab8(void );
        LEPT_DLL extern NUMA* pixAverageByRow(PIX* pix, BOX* box, int type);
        LEPT_DLL extern NUMA* pixAverageByColumn(PIX* pix, BOX* box, int type);
        LEPT_DLL extern int pixAverageInRect(PIX* pix, BOX* box, l_float32* pave);
        LEPT_DLL extern NUMA* pixVarianceByRow(PIX* pix, BOX* box);
        LEPT_DLL extern NUMA* pixVarianceByColumn(PIX* pix, BOX* box);
        LEPT_DLL extern int pixVarianceInRect(PIX* pix, BOX* box, l_float32* prootvar);
        LEPT_DLL extern NUMA* pixAbsDiffByRow(PIX* pix, BOX* box);
        LEPT_DLL extern NUMA* pixAbsDiffByColumn(PIX* pix, BOX* box);
        LEPT_DLL extern int pixAbsDiffInRect(PIX* pix, BOX* box, int dir, l_float32* pabsdiff);
        LEPT_DLL extern int pixAbsDiffOnLine(PIX* pix, int x1, int y1, int x2, int y2, l_float32* pabsdiff);
        LEPT_DLL extern int pixCountArbInRect(PIX* pixs, BOX* box, int val, int factor, l_int32* pcount);
        LEPT_DLL extern PIX* pixMirroredTiling(PIX* pixs, int w, int h);
        LEPT_DLL extern int pixFindRepCloseTile(PIX* pixs, BOX* box, int searchdir, int mindist, int tsize, int ntiles, BOX** pboxtile, int debug);
        LEPT_DLL extern NUMA* pixGetGrayHistogram(PIX* pixs, int factor);
        LEPT_DLL extern NUMA* pixGetGrayHistogramMasked(PIX* pixs, PIX* pixm, int x, int y, int factor);
        LEPT_DLL extern NUMA* pixGetGrayHistogramInRect(PIX* pixs, BOX* box, int factor);
        LEPT_DLL extern NUMAA* pixGetGrayHistogramTiled(PIX* pixs, int factor, int nx, int ny);
        LEPT_DLL extern int pixGetColorHistogram(PIX* pixs, int factor, NUMA** pnar, NUMA** pnag, NUMA** pnab);
        LEPT_DLL extern int pixGetColorHistogramMasked(PIX* pixs, PIX* pixm, int x, int y, int factor, NUMA** pnar, NUMA** pnag, NUMA** pnab);
        LEPT_DLL extern NUMA* pixGetCmapHistogram(PIX* pixs, int factor);
        LEPT_DLL extern NUMA* pixGetCmapHistogramMasked(PIX* pixs, PIX* pixm, int x, int y, int factor);
        LEPT_DLL extern NUMA* pixGetCmapHistogramInRect(PIX* pixs, BOX* box, int factor);
        LEPT_DLL extern int pixCountRGBColors(PIX* pixs);
        LEPT_DLL extern L_AMAP* pixGetColorAmapHistogram(PIX* pixs, int factor);
        LEPT_DLL extern int amapGetCountForColor(L_AMAP* amap, uint val);
        LEPT_DLL extern int pixGetRankValue(PIX* pixs, int factor, float rank, l_uint32* pvalue);
        LEPT_DLL extern int pixGetRankValueMaskedRGB(PIX* pixs, PIX* pixm, int x, int y, int factor, float rank, l_float32* prval, l_float32* pgval, l_float32* pbval);
        LEPT_DLL extern int pixGetRankValueMasked(PIX* pixs, PIX* pixm, int x, int y, int factor, float rank, l_float32* pval, NUMA** pna);
        LEPT_DLL extern int pixGetAverageValue(PIX* pixs, int factor, int type, l_uint32* pvalue);
        LEPT_DLL extern int pixGetAverageMaskedRGB(PIX* pixs, PIX* pixm, int x, int y, int factor, int type, l_float32* prval, l_float32* pgval, l_float32* pbval);
        LEPT_DLL extern int pixGetAverageMasked(PIX* pixs, PIX* pixm, int x, int y, int factor, int type, l_float32* pval);
        LEPT_DLL extern int pixGetAverageTiledRGB(PIX* pixs, int sx, int sy, int type, PIX** ppixr, PIX** ppixg, PIX** ppixb);
        LEPT_DLL extern PIX* pixGetAverageTiled(PIX* pixs, int sx, int sy, int type);
        LEPT_DLL extern int pixRowStats(PIX* pixs, BOX* box, NUMA** pnamean, NUMA** pnamedian, NUMA** pnamode, NUMA** pnamodecount, NUMA** pnavar, NUMA** pnarootvar);
        LEPT_DLL extern int pixColumnStats(PIX* pixs, BOX* box, NUMA** pnamean, NUMA** pnamedian, NUMA** pnamode, NUMA** pnamodecount, NUMA** pnavar, NUMA** pnarootvar);
        LEPT_DLL extern int pixGetRangeValues(PIX* pixs, int factor, int color, l_int32* pminval, l_int32* pmaxval);
        LEPT_DLL extern int pixGetExtremeValue(PIX* pixs, int factor, int type, l_int32* prval, l_int32* pgval, l_int32* pbval, l_int32* pgrayval);
        LEPT_DLL extern int pixGetMaxValueInRect(PIX* pixs, BOX* box, l_uint32* pmaxval, l_int32* pxmax, l_int32* pymax);
        LEPT_DLL extern int pixGetBinnedComponentRange(PIX* pixs, int nbins, int factor, int color, l_int32* pminval, l_int32* pmaxval, l_uint32** pcarray, int fontsize);
        LEPT_DLL extern int pixGetRankColorArray(PIX* pixs, int nbins, int type, int factor, l_uint32** pcarray, int debugflag, int fontsize);
        LEPT_DLL extern int pixGetBinnedColor(PIX* pixs, PIX* pixg, int factor, int nbins, NUMA* nalut, l_uint32** pcarray, int debugflag);
        LEPT_DLL extern PIX* pixDisplayColorArray(l_uint32* carray, int ncolors, int side, int ncols, int fontsize);
        LEPT_DLL extern PIX* pixRankBinByStrip(PIX* pixs, int direction, int size, int nbins, int type);
        LEPT_DLL extern PIX* pixaGetAlignedStats(PIXA* pixa, int type, int nbins, int thresh);
        LEPT_DLL extern int pixaExtractColumnFromEachPix(PIXA* pixa, int col, PIX* pixd);
        LEPT_DLL extern int pixGetRowStats(PIX* pixs, int type, int nbins, int thresh, l_float32* colvect);
        LEPT_DLL extern int pixGetColumnStats(PIX* pixs, int type, int nbins, int thresh, l_float32* rowvect);
        LEPT_DLL extern int pixSetPixelColumn(PIX* pix, int col, l_float32* colvect);
        LEPT_DLL extern int pixThresholdForFgBg(PIX* pixs, int factor, int thresh, l_int32* pfgval, l_int32* pbgval);
        LEPT_DLL extern int pixSplitDistributionFgBg(PIX* pixs, float scorefract, int factor, l_int32* pthresh, l_int32* pfgval, l_int32* pbgval, PIX** ppixdb);
        LEPT_DLL extern int pixaFindDimensions(PIXA* pixa, NUMA** pnaw, NUMA** pnah);
        LEPT_DLL extern int pixFindAreaPerimRatio(PIX* pixs, l_int32* tab, l_float32* pfract);
        LEPT_DLL extern NUMA* pixaFindPerimToAreaRatio(PIXA* pixa);
        LEPT_DLL extern int pixFindPerimToAreaRatio(PIX* pixs, l_int32* tab, l_float32* pfract);
        LEPT_DLL extern NUMA* pixaFindPerimSizeRatio(PIXA* pixa);
        LEPT_DLL extern int pixFindPerimSizeRatio(PIX* pixs, l_int32* tab, l_float32* pratio);
        LEPT_DLL extern NUMA* pixaFindAreaFraction(PIXA* pixa);
        LEPT_DLL extern int pixFindAreaFraction(PIX* pixs, l_int32* tab, l_float32* pfract);
        LEPT_DLL extern NUMA* pixaFindAreaFractionMasked(PIXA* pixa, PIX* pixm, int debug);
        LEPT_DLL extern int pixFindAreaFractionMasked(PIX* pixs, BOX* box, PIX* pixm, l_int32* tab, l_float32* pfract);
        LEPT_DLL extern NUMA* pixaFindWidthHeightRatio(PIXA* pixa);
        LEPT_DLL extern NUMA* pixaFindWidthHeightProduct(PIXA* pixa);
        LEPT_DLL extern int pixFindOverlapFraction(PIX* pixs1, PIX* pixs2, int x2, int y2, l_int32* tab, l_float32* pratio, l_int32* pnoverlap);
        LEPT_DLL extern BOXA* pixFindRectangleComps(PIX* pixs, int dist, int minw, int minh);
        LEPT_DLL extern int pixConformsToRectangle(PIX* pixs, BOX* box, int dist, l_int32* pconforms);
        LEPT_DLL extern PIXA* pixClipRectangles(PIX* pixs, BOXA* boxa);
        LEPT_DLL extern PIX* pixClipRectangle(PIX* pixs, BOX* box, BOX** pboxc);
        LEPT_DLL extern PIX* pixClipMasked(PIX* pixs, PIX* pixm, int x, int y, uint outval);
        LEPT_DLL extern int pixCropToMatch(PIX* pixs1, PIX* pixs2, PIX** ppixd1, PIX** ppixd2);
        LEPT_DLL extern PIX* pixCropToSize(PIX* pixs, int w, int h);
        LEPT_DLL extern PIX* pixResizeToMatch(PIX* pixs, PIX* pixt, int w, int h);
        LEPT_DLL extern PIX* pixMakeFrameMask(l_int32 w, int h, float hf1, float hf2, float vf1, float vf2);
        LEPT_DLL extern int pixFractionFgInMask(PIX* pix1, PIX* pix2, l_float32* pfract);
        LEPT_DLL extern int pixClipToForeground(PIX* pixs, PIX** ppixd, BOX** pbox);
        LEPT_DLL extern int pixTestClipToForeground(PIX* pixs, l_int32* pcanclip);
        LEPT_DLL extern int pixClipBoxToForeground(PIX* pixs, BOX* boxs, PIX** ppixd, BOX** pboxd);
        LEPT_DLL extern int pixScanForForeground(PIX* pixs, BOX* box, int scanflag, l_int32* ploc);
        LEPT_DLL extern int pixClipBoxToEdges(PIX* pixs, BOX* boxs, int lowthresh, int highthresh, int maxwidth, int factor, PIX** ppixd, BOX** pboxd);
        LEPT_DLL extern int pixScanForEdge(PIX* pixs, BOX* box, int lowthresh, int highthresh, int maxwidth, int factor, int scanflag, l_int32* ploc);
        LEPT_DLL extern NUMA* pixExtractOnLine(PIX* pixs, int x1, int y1, int x2, int y2, int factor);
        LEPT_DLL extern float pixAverageOnLine(PIX* pixs, int x1, int y1, int x2, int y2, int factor);
        LEPT_DLL extern NUMA* pixAverageIntensityProfile(PIX* pixs, float fract, int dir, int first, int last, int factor1, int factor2);
        LEPT_DLL extern NUMA* pixReversalProfile(PIX* pixs, float fract, int dir, int first, int last, int minreversal, int factor1, int factor2);
        LEPT_DLL extern int pixWindowedVarianceOnLine(PIX* pixs, int dir, int loc, int c1, int c2, int size, NUMA** pnad);
        LEPT_DLL extern int pixMinMaxNearLine(PIX* pixs, int x1, int y1, int x2, int y2, int dist, int direction, NUMA** pnamin, NUMA** pnamax, l_float32* pminave, l_float32* pmaxave);
        LEPT_DLL extern PIX* pixRankRowTransform(PIX* pixs);
        LEPT_DLL extern PIX* pixRankColumnTransform(PIX* pixs);
        LEPT_DLL extern PIXA* pixaCreate(l_int32 n);
        LEPT_DLL extern PIXA* pixaCreateFromPix(PIX* pixs, int n, int cellw, int cellh);
        LEPT_DLL extern PIXA* pixaCreateFromBoxa(PIX* pixs, BOXA* boxa, l_int32* pcropwarn);
        LEPT_DLL extern PIXA* pixaSplitPix(PIX* pixs, int nx, int ny, int borderwidth, uint bordercolor);
        LEPT_DLL extern void pixaDestroy(PIXA** ppixa);
        LEPT_DLL extern PIXA* pixaCopy(PIXA* pixa, int copyflag);
        LEPT_DLL extern int pixaAddPix(PIXA* pixa, PIX* pix, int copyflag);
        LEPT_DLL extern int pixaAddBox(PIXA* pixa, BOX* box, int copyflag);
        LEPT_DLL extern int pixaExtendArrayToSize(PIXA* pixa, int size);
        LEPT_DLL extern int pixaGetCount(PIXA* pixa);
        LEPT_DLL extern int pixaChangeRefcount(PIXA* pixa, int delta);
        LEPT_DLL extern PIX* pixaGetPix(PIXA* pixa, int index, int accesstype);
        LEPT_DLL extern int pixaGetPixDimensions(PIXA* pixa, int index, l_int32* pw, l_int32* ph, l_int32* pd);
        LEPT_DLL extern BOXA* pixaGetBoxa(PIXA* pixa, int accesstype);
        LEPT_DLL extern int pixaGetBoxaCount(PIXA* pixa);
        LEPT_DLL extern BOX* pixaGetBox(PIXA* pixa, int index, int accesstype);
        LEPT_DLL extern int pixaGetBoxGeometry(PIXA* pixa, int index, l_int32* px, l_int32* py, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int pixaSetBoxa(PIXA* pixa, BOXA* boxa, int accesstype);
        LEPT_DLL extern PIX** pixaGetPixArray(PIXA* pixa);
        LEPT_DLL extern int pixaVerifyDepth(PIXA* pixa, l_int32* pmaxdepth);
        LEPT_DLL extern int pixaIsFull(PIXA* pixa, l_int32* pfullpa, l_int32* pfullba);
        LEPT_DLL extern int pixaCountText(PIXA* pixa, l_int32* pntext);
        LEPT_DLL extern int pixaSetText(PIXA* pixa, SARRAY* sa);
        LEPT_DLL extern void*** pixaGetLinePtrs(PIXA* pixa, l_int32* psize);
        LEPT_DLL extern int pixaWriteStreamInfo(FILE* fp, PIXA* pixa);
        LEPT_DLL extern int pixaReplacePix(PIXA* pixa, int index, PIX* pix, BOX* box);
        LEPT_DLL extern int pixaInsertPix(PIXA* pixa, int index, PIX* pixs, BOX* box);
        LEPT_DLL extern int pixaRemovePix(PIXA* pixa, int index);
        LEPT_DLL extern int pixaRemovePixAndSave(PIXA* pixa, int index, PIX** ppix, BOX** pbox);
        LEPT_DLL extern int pixaInitFull(PIXA* pixa, PIX* pix, BOX* box);
        LEPT_DLL extern int pixaClear(PIXA* pixa);
        LEPT_DLL extern int pixaJoin(PIXA* pixad, PIXA* pixas, int istart, int iend);
        LEPT_DLL extern PIXA* pixaInterleave(PIXA* pixa1, PIXA* pixa2, int copyflag);
        LEPT_DLL extern int pixaaJoin(PIXAA* paad, PIXAA* paas, int istart, int iend);
        LEPT_DLL extern PIXAA* pixaaCreate(l_int32 n);
        LEPT_DLL extern PIXAA* pixaaCreateFromPixa(PIXA* pixa, int n, int type, int copyflag);
        LEPT_DLL extern void pixaaDestroy(PIXAA** ppaa);
        LEPT_DLL extern int pixaaAddPixa(PIXAA* paa, PIXA* pixa, int copyflag);
        LEPT_DLL extern int pixaaExtendArray(PIXAA* paa);
        LEPT_DLL extern int pixaaAddPix(PIXAA* paa, int index, PIX* pix, BOX* box, int copyflag);
        LEPT_DLL extern int pixaaAddBox(PIXAA* paa, BOX* box, int copyflag);
        LEPT_DLL extern int pixaaGetCount(PIXAA* paa, NUMA** pna);
        LEPT_DLL extern PIXA* pixaaGetPixa(PIXAA* paa, int index, int accesstype);
        LEPT_DLL extern BOXA* pixaaGetBoxa(PIXAA* paa, int accesstype);
        LEPT_DLL extern PIX* pixaaGetPix(PIXAA* paa, int index, int ipix, int accessflag);
        LEPT_DLL extern int pixaaVerifyDepth(PIXAA* paa, l_int32* pmaxdepth);
        LEPT_DLL extern int pixaaIsFull(PIXAA* paa, l_int32* pfull);
        LEPT_DLL extern int pixaaInitFull(PIXAA* paa, PIXA* pixa);
        LEPT_DLL extern int pixaaReplacePixa(PIXAA* paa, int index, PIXA* pixa);
        LEPT_DLL extern int pixaaClear(PIXAA* paa);
        LEPT_DLL extern int pixaaTruncate(PIXAA* paa);
        LEPT_DLL extern PIXA* pixaRead( const char* filename );
        LEPT_DLL extern PIXA* pixaReadStream(FILE* fp);
        LEPT_DLL extern PIXA* pixaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixaWrite( const char* filename, PIXA *pixa );
        LEPT_DLL extern int pixaWriteStream(FILE* fp, PIXA* pixa);
        LEPT_DLL extern int pixaWriteMem(l_uint8** pdata, size_t* psize, PIXA* pixa);
        LEPT_DLL extern PIXA* pixaReadBoth( const char* filename );
        LEPT_DLL extern PIXAA* pixaaReadFromFiles( const char* dirname, const char* substr, int first, int nfiles );
        LEPT_DLL extern PIXAA* pixaaRead( const char* filename );
        LEPT_DLL extern PIXAA* pixaaReadStream(FILE* fp);
        LEPT_DLL extern PIXAA* pixaaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixaaWrite( const char* filename, PIXAA *paa );
        LEPT_DLL extern int pixaaWriteStream(FILE* fp, PIXAA* paa);
        LEPT_DLL extern int pixaaWriteMem(l_uint8** pdata, size_t* psize, PIXAA* paa);
        LEPT_DLL extern PIXACC* pixaccCreate(l_int32 w, int h, int negflag);
        LEPT_DLL extern PIXACC* pixaccCreateFromPix(PIX* pix, int negflag);
        LEPT_DLL extern void pixaccDestroy(PIXACC** ppixacc);
        LEPT_DLL extern PIX* pixaccFinal(PIXACC* pixacc, int outdepth);
        LEPT_DLL extern PIX* pixaccGetPix(PIXACC* pixacc);
        LEPT_DLL extern int pixaccGetOffset(PIXACC* pixacc);
        LEPT_DLL extern int pixaccAdd(PIXACC* pixacc, PIX* pix);
        LEPT_DLL extern int pixaccSubtract(PIXACC* pixacc, PIX* pix);
        LEPT_DLL extern int pixaccMultConst(PIXACC* pixacc, float factor);
        LEPT_DLL extern int pixaccMultConstAccumulate(PIXACC* pixacc, PIX* pix, float factor);
        LEPT_DLL extern PIX* pixSelectBySize(PIX* pixs, int width, int height, int connectivity, int type, int relation, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectBySize(PIXA* pixas, int width, int height, int type, int relation, l_int32* pchanged);
        LEPT_DLL extern NUMA* pixaMakeSizeIndicator(PIXA* pixa, int width, int height, int type, int relation);
        LEPT_DLL extern PIX* pixSelectByPerimToAreaRatio(PIX* pixs, float thresh, int connectivity, int type, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectByPerimToAreaRatio(PIXA* pixas, float thresh, int type, l_int32* pchanged);
        LEPT_DLL extern PIX* pixSelectByPerimSizeRatio(PIX* pixs, float thresh, int connectivity, int type, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectByPerimSizeRatio(PIXA* pixas, float thresh, int type, l_int32* pchanged);
        LEPT_DLL extern PIX* pixSelectByAreaFraction(PIX* pixs, float thresh, int connectivity, int type, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectByAreaFraction(PIXA* pixas, float thresh, int type, l_int32* pchanged);
        LEPT_DLL extern PIX* pixSelectByWidthHeightRatio(PIX* pixs, float thresh, int connectivity, int type, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectByWidthHeightRatio(PIXA* pixas, float thresh, int type, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectByNumConnComp(PIXA* pixas, int nmin, int nmax, int connectivity, l_int32* pchanged);
        LEPT_DLL extern PIXA* pixaSelectWithIndicator(PIXA* pixas, NUMA* na, l_int32* pchanged);
        LEPT_DLL extern int pixRemoveWithIndicator(PIX* pixs, PIXA* pixa, NUMA* na);
        LEPT_DLL extern int pixAddWithIndicator(PIX* pixs, PIXA* pixa, NUMA* na);
        LEPT_DLL extern PIXA* pixaSelectWithString(PIXA* pixas, const char* str, int *perror );
        LEPT_DLL extern PIX* pixaRenderComponent(PIX* pixs, PIXA* pixa, int index);
        LEPT_DLL extern PIXA* pixaSort(PIXA* pixas, int sorttype, int sortorder, NUMA** pnaindex, int copyflag);
        LEPT_DLL extern PIXA* pixaBinSort(PIXA* pixas, int sorttype, int sortorder, NUMA** pnaindex, int copyflag);
        LEPT_DLL extern PIXA* pixaSortByIndex(PIXA* pixas, NUMA* naindex, int copyflag);
        LEPT_DLL extern PIXAA* pixaSort2dByIndex(PIXA* pixas, NUMAA* naa, int copyflag);
        LEPT_DLL extern PIXA* pixaSelectRange(PIXA* pixas, int first, int last, int copyflag);
        LEPT_DLL extern PIXAA* pixaaSelectRange(PIXAA* paas, int first, int last, int copyflag);
        LEPT_DLL extern PIXAA* pixaaScaleToSize(PIXAA* paas, int wd, int hd);
        LEPT_DLL extern PIXAA* pixaaScaleToSizeVar(PIXAA* paas, NUMA* nawd, NUMA* nahd);
        LEPT_DLL extern PIXA* pixaScaleToSize(PIXA* pixas, int wd, int hd);
        LEPT_DLL extern PIXA* pixaScaleToSizeRel(PIXA* pixas, int delw, int delh);
        LEPT_DLL extern PIXA* pixaScale(PIXA* pixas, float scalex, float scaley);
        LEPT_DLL extern PIXA* pixaAddBorderGeneral(PIXA* pixad, PIXA* pixas, int left, int right, int top, int bot, uint val);
        LEPT_DLL extern PIXA* pixaaFlattenToPixa(PIXAA* paa, NUMA** pnaindex, int copyflag);
        LEPT_DLL extern int pixaaSizeRange(PIXAA* paa, l_int32* pminw, l_int32* pminh, l_int32* pmaxw, l_int32* pmaxh);
        LEPT_DLL extern int pixaSizeRange(PIXA* pixa, l_int32* pminw, l_int32* pminh, l_int32* pmaxw, l_int32* pmaxh);
        LEPT_DLL extern PIXA* pixaClipToPix(PIXA* pixas, PIX* pixs);
        LEPT_DLL extern int pixaClipToForeground(PIXA* pixas, PIXA** ppixad, BOXA** pboxa);
        LEPT_DLL extern int pixaGetRenderingDepth(PIXA* pixa, l_int32* pdepth);
        LEPT_DLL extern int pixaHasColor(PIXA* pixa, l_int32* phascolor);
        LEPT_DLL extern int pixaAnyColormaps(PIXA* pixa, l_int32* phascmap);
        LEPT_DLL extern int pixaGetDepthInfo(PIXA* pixa, l_int32* pmaxdepth, l_int32* psame);
        LEPT_DLL extern PIXA* pixaConvertToSameDepth(PIXA* pixas);
        LEPT_DLL extern int pixaEqual(PIXA* pixa1, PIXA* pixa2, int maxdist, NUMA** pnaindex, l_int32* psame);
        LEPT_DLL extern PIXA* pixaRotateOrth(PIXA* pixas, int rotation);
        LEPT_DLL extern int pixaSetFullSizeBoxa(PIXA* pixa);
        LEPT_DLL extern PIX* pixaDisplay(PIXA* pixa, int w, int h);
        LEPT_DLL extern PIX* pixaDisplayOnColor(PIXA* pixa, int w, int h, uint bgcolor);
        LEPT_DLL extern PIX* pixaDisplayRandomCmap(PIXA* pixa, int w, int h);
        LEPT_DLL extern PIX* pixaDisplayLinearly(PIXA* pixas, int direction, float scalefactor, int background, int spacing, int border, BOXA** pboxa);
        LEPT_DLL extern PIX* pixaDisplayOnLattice(PIXA* pixa, int cellw, int cellh, l_int32* pncols, BOXA** pboxa);
        LEPT_DLL extern PIX* pixaDisplayUnsplit(PIXA* pixa, int nx, int ny, int borderwidth, uint bordercolor);
        LEPT_DLL extern PIX* pixaDisplayTiled(PIXA* pixa, int maxwidth, int background, int spacing);
        LEPT_DLL extern PIX* pixaDisplayTiledInRows(PIXA* pixa, int outdepth, int maxwidth, float scalefactor, int background, int spacing, int border);
        LEPT_DLL extern PIX* pixaDisplayTiledInColumns(PIXA* pixas, int nx, float scalefactor, int spacing, int border);
        LEPT_DLL extern PIX* pixaDisplayTiledAndScaled(PIXA* pixa, int outdepth, int tilewidth, int ncols, int background, int spacing, int border);
        LEPT_DLL extern PIX* pixaDisplayTiledWithText(PIXA* pixa, int maxwidth, float scalefactor, int spacing, int border, int fontsize, uint textcolor);
        LEPT_DLL extern PIX* pixaDisplayTiledByIndex(PIXA* pixa, NUMA* na, int width, int spacing, int border, int fontsize, uint textcolor);
        LEPT_DLL extern PIX* pixaaDisplay(PIXAA* paa, int w, int h);
        LEPT_DLL extern PIX* pixaaDisplayByPixa(PIXAA* paa, int xspace, int yspace, int maxw);
        LEPT_DLL extern PIXA* pixaaDisplayTiledAndScaled(PIXAA* paa, int outdepth, int tilewidth, int ncols, int background, int spacing, int border);
        LEPT_DLL extern PIXA* pixaConvertTo1(PIXA* pixas, int thresh);
        LEPT_DLL extern PIXA* pixaConvertTo8(PIXA* pixas, int cmapflag);
        LEPT_DLL extern PIXA* pixaConvertTo8Color(PIXA* pixas, int dither);
        LEPT_DLL extern PIXA* pixaConvertTo32(PIXA* pixas);
        LEPT_DLL extern PIXA* pixaConstrainedSelect(PIXA* pixas, int first, int last, int nmax, int use_pairs, int copyflag);
        LEPT_DLL extern int pixaSelectToPdf(PIXA* pixas, int first, int last, int res, float scalefactor, int type, int quality, uint color, int fontsize, const char* fileout );
        LEPT_DLL extern PIXA* pixaDisplayMultiTiled(PIXA* pixas, int nx, int ny, int maxw, int maxh, float scalefactor, int spacing, int border);
        LEPT_DLL extern int pixaSplitIntoFiles(PIXA* pixas, int nsplit, float scale, int outwidth, int write_pixa, int write_pix, int write_pdf);
        LEPT_DLL extern int convertToNUpFiles( const char* dir, const char* substr, int nx, int ny, int tw, int spacing, int border, int fontsize, const char* outdir );
        LEPT_DLL extern PIXA* convertToNUpPixa( const char* dir, const char* substr, int nx, int ny, int tw, int spacing, int border, int fontsize );
        LEPT_DLL extern PIXA* pixaConvertToNUpPixa(PIXA* pixas, SARRAY* sa, int nx, int ny, int tw, int spacing, int border, int fontsize);
        LEPT_DLL extern int pixaCompareInPdf(PIXA* pixa1, PIXA* pixa2, int nx, int ny, int tw, int spacing, int border, int fontsize, const char* fileout );
        LEPT_DLL extern int pmsCreate(size_t minsize, size_t smallest, NUMA* numalloc, const char* logfile );
        LEPT_DLL extern void pmsDestroy();
        LEPT_DLL extern void* pmsCustomAlloc(size_t nbytes);
        LEPT_DLL extern void pmsCustomDealloc(void* data);
        LEPT_DLL extern void* pmsGetAlloc(size_t nbytes);
        LEPT_DLL extern int pmsGetLevelForAlloc(size_t nbytes, l_int32* plevel);
        LEPT_DLL extern int pmsGetLevelForDealloc(void* data, l_int32* plevel);
        LEPT_DLL extern void pmsLogInfo();
        LEPT_DLL extern int pixAddConstantGray(PIX* pixs, int val);
        LEPT_DLL extern int pixMultConstantGray(PIX* pixs, float val);
        LEPT_DLL extern PIX* pixAddGray(PIX* pixd, PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixSubtractGray(PIX* pixd, PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixThresholdToValue(PIX* pixd, PIX* pixs, int threshval, int setval);
        LEPT_DLL extern PIX* pixInitAccumulate(l_int32 w, int h, uint offset);
        LEPT_DLL extern PIX* pixFinalAccumulate(PIX* pixs, uint offset, int depth);
        LEPT_DLL extern PIX* pixFinalAccumulateThreshold(PIX* pixs, uint offset, uint threshold);
        LEPT_DLL extern int pixAccumulate(PIX* pixd, PIX* pixs, int op);
        LEPT_DLL extern int pixMultConstAccumulate(PIX* pixs, float factor, uint offset);
        LEPT_DLL extern PIX* pixAbsDifference(PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixAddRGB(PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern PIX* pixMinOrMax(PIX* pixd, PIX* pixs1, PIX* pixs2, int type);
        LEPT_DLL extern PIX* pixMaxDynamicRange(PIX* pixs, int type);
        LEPT_DLL extern PIX* pixMaxDynamicRangeRGB(PIX* pixs, int type);
        LEPT_DLL extern uint linearScaleRGBVal(l_uint32 sval, float factor);
        LEPT_DLL extern uint logScaleRGBVal(l_uint32 sval, l_float32* tab, float factor);
        LEPT_DLL extern l_float32* makeLogBase2Tab(void );
        LEPT_DLL extern float getLogBase2(l_int32 val, l_float32* logtab);
        LEPT_DLL extern PIXC* pixcompCreateFromPix(PIX* pix, int comptype);
        LEPT_DLL extern PIXC* pixcompCreateFromString(l_uint8* data, size_t size, int copyflag);
        LEPT_DLL extern PIXC* pixcompCreateFromFile( const char* filename, int comptype );
        LEPT_DLL extern void pixcompDestroy(PIXC** ppixc);
        LEPT_DLL extern PIXC* pixcompCopy(PIXC* pixcs);
        LEPT_DLL extern int pixcompGetDimensions(PIXC* pixc, l_int32* pw, l_int32* ph, l_int32* pd);
        LEPT_DLL extern int pixcompDetermineFormat(l_int32 comptype, int d, int cmapflag, l_int32* pformat);
        LEPT_DLL extern PIX* pixCreateFromPixcomp(PIXC* pixc);
        LEPT_DLL extern PIXAC* pixacompCreate(l_int32 n);
        LEPT_DLL extern PIXAC* pixacompCreateWithInit(l_int32 n, int offset, PIX* pix, int comptype);
        LEPT_DLL extern PIXAC* pixacompCreateFromPixa(PIXA* pixa, int comptype, int accesstype);
        LEPT_DLL extern PIXAC* pixacompCreateFromFiles( const char* dirname, const char* substr, int comptype );
        LEPT_DLL extern PIXAC* pixacompCreateFromSA(SARRAY* sa, int comptype);
        LEPT_DLL extern void pixacompDestroy(PIXAC** ppixac);
        LEPT_DLL extern int pixacompAddPix(PIXAC* pixac, PIX* pix, int comptype);
        LEPT_DLL extern int pixacompAddPixcomp(PIXAC* pixac, PIXC* pixc, int copyflag);
        LEPT_DLL extern int pixacompReplacePix(PIXAC* pixac, int index, PIX* pix, int comptype);
        LEPT_DLL extern int pixacompReplacePixcomp(PIXAC* pixac, int index, PIXC* pixc);
        LEPT_DLL extern int pixacompAddBox(PIXAC* pixac, BOX* box, int copyflag);
        LEPT_DLL extern int pixacompGetCount(PIXAC* pixac);
        LEPT_DLL extern PIXC* pixacompGetPixcomp(PIXAC* pixac, int index, int copyflag);
        LEPT_DLL extern PIX* pixacompGetPix(PIXAC* pixac, int index);
        LEPT_DLL extern int pixacompGetPixDimensions(PIXAC* pixac, int index, l_int32* pw, l_int32* ph, l_int32* pd);
        LEPT_DLL extern BOXA* pixacompGetBoxa(PIXAC* pixac, int accesstype);
        LEPT_DLL extern int pixacompGetBoxaCount(PIXAC* pixac);
        LEPT_DLL extern BOX* pixacompGetBox(PIXAC* pixac, int index, int accesstype);
        LEPT_DLL extern int pixacompGetBoxGeometry(PIXAC* pixac, int index, l_int32* px, l_int32* py, l_int32* pw, l_int32* ph);
        LEPT_DLL extern int pixacompGetOffset(PIXAC* pixac);
        LEPT_DLL extern int pixacompSetOffset(PIXAC* pixac, int offset);
        LEPT_DLL extern PIXA* pixaCreateFromPixacomp(PIXAC* pixac, int accesstype);
        LEPT_DLL extern int pixacompJoin(PIXAC* pixacd, PIXAC* pixacs, int istart, int iend);
        LEPT_DLL extern PIXAC* pixacompInterleave(PIXAC* pixac1, PIXAC* pixac2);
        LEPT_DLL extern PIXAC* pixacompRead( const char* filename );
        LEPT_DLL extern PIXAC* pixacompReadStream(FILE* fp);
        LEPT_DLL extern PIXAC* pixacompReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixacompWrite( const char* filename, PIXAC *pixac );
        LEPT_DLL extern int pixacompWriteStream(FILE* fp, PIXAC* pixac);
        LEPT_DLL extern int pixacompWriteMem(l_uint8** pdata, size_t* psize, PIXAC* pixac);
        LEPT_DLL extern int pixacompConvertToPdf(PIXAC* pixac, int res, float scalefactor, int type, int quality, const char* title, const char* fileout );
        LEPT_DLL extern int pixacompConvertToPdfData(PIXAC* pixac, int res, float scalefactor, int type, int quality, const char* title, byte **pdata, size_t* pnbytes );
        LEPT_DLL extern int pixacompWriteStreamInfo(FILE* fp, PIXAC* pixac, const char* text );
        LEPT_DLL extern int pixcompWriteStreamInfo(FILE* fp, PIXC* pixc, const char* text );
        LEPT_DLL extern PIX* pixacompDisplayTiledAndScaled(PIXAC* pixac, int outdepth, int tilewidth, int ncols, int background, int spacing, int border);
        LEPT_DLL extern PIX* pixThreshold8(PIX* pixs, int d, int nlevels, int cmapflag);
        LEPT_DLL extern PIX* pixRemoveColormapGeneral(PIX* pixs, int type, int ifnocmap);
        LEPT_DLL extern PIX* pixRemoveColormap(PIX* pixs, int type);
        LEPT_DLL extern int pixAddGrayColormap8(PIX* pixs);
        LEPT_DLL extern PIX* pixAddMinimalGrayColormap8(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertRGBToLuminance(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertRGBToGray(PIX* pixs, float rwt, float gwt, float bwt);
        LEPT_DLL extern PIX* pixConvertRGBToGrayFast(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertRGBToGrayMinMax(PIX* pixs, int type);
        LEPT_DLL extern PIX* pixConvertRGBToGraySatBoost(PIX* pixs, int refval);
        LEPT_DLL extern PIX* pixConvertRGBToGrayArb(PIX* pixs, float rc, float gc, float bc);
        LEPT_DLL extern PIX* pixConvertRGBToBinaryArb(PIX* pixs, float rc, float gc, float bc, int thresh, int relation);
        LEPT_DLL extern PIX* pixConvertGrayToColormap(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertGrayToColormap8(PIX* pixs, int mindepth);
        LEPT_DLL extern PIX* pixColorizeGray(PIX* pixs, uint color, int cmapflag);
        LEPT_DLL extern PIX* pixConvertRGBToColormap(PIX* pixs, int ditherflag);
        LEPT_DLL extern PIX* pixConvertCmapTo1(PIX* pixs);
        LEPT_DLL extern int pixQuantizeIfFewColors(PIX* pixs, int maxcolors, int mingraycolors, int octlevel, PIX** ppixd);
        LEPT_DLL extern PIX* pixConvert16To8(PIX* pixs, int type);
        LEPT_DLL extern PIX* pixConvertGrayToFalseColor(PIX* pixs, float gamma);
        LEPT_DLL extern PIX* pixUnpackBinary(PIX* pixs, int depth, int invert);
        LEPT_DLL extern PIX* pixConvert1To16(PIX* pixd, PIX* pixs, l_uint16 val0, l_uint16 val1);
        LEPT_DLL extern PIX* pixConvert1To32(PIX* pixd, PIX* pixs, uint val0, uint val1);
        LEPT_DLL extern PIX* pixConvert1To2Cmap(PIX* pixs);
        LEPT_DLL extern PIX* pixConvert1To2(PIX* pixd, PIX* pixs, int val0, int val1);
        LEPT_DLL extern PIX* pixConvert1To4Cmap(PIX* pixs);
        LEPT_DLL extern PIX* pixConvert1To4(PIX* pixd, PIX* pixs, int val0, int val1);
        LEPT_DLL extern PIX* pixConvert1To8Cmap(PIX* pixs);
        LEPT_DLL extern PIX* pixConvert1To8(PIX* pixd, PIX* pixs, byte val0, byte val1);
        LEPT_DLL extern PIX* pixConvert2To8(PIX* pixs, byte val0, byte val1, byte val2, byte val3, int cmapflag);
        LEPT_DLL extern PIX* pixConvert4To8(PIX* pixs, int cmapflag);
        LEPT_DLL extern PIX* pixConvert8To16(PIX* pixs, int leftshift);
        LEPT_DLL extern PIX* pixConvertTo1(PIX* pixs, int threshold);
        LEPT_DLL extern PIX* pixConvertTo1BySampling(PIX* pixs, int factor, int threshold);
        LEPT_DLL extern PIX* pixConvertTo8(PIX* pixs, int cmapflag);
        LEPT_DLL extern PIX* pixConvertTo8BySampling(PIX* pixs, int factor, int cmapflag);
        LEPT_DLL extern PIX* pixConvertTo8Color(PIX* pixs, int dither);
        LEPT_DLL extern PIX* pixConvertTo16(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertTo32(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertTo32BySampling(PIX* pixs, int factor);
        LEPT_DLL extern PIX* pixConvert8To32(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertTo8Or32(PIX* pixs, int copyflag, int warnflag);
        LEPT_DLL extern PIX* pixConvert24To32(PIX* pixs);
        LEPT_DLL extern PIX* pixConvert32To24(PIX* pixs);
        LEPT_DLL extern PIX* pixConvert32To16(PIX* pixs, int type);
        LEPT_DLL extern PIX* pixConvert32To8(PIX* pixs, int type16, int type8);
        LEPT_DLL extern PIX* pixRemoveAlpha(PIX* pixs);
        LEPT_DLL extern PIX* pixAddAlphaTo1bpp(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixConvertLossless(PIX* pixs, int d);
        LEPT_DLL extern PIX* pixConvertForPSWrap(PIX* pixs);
        LEPT_DLL extern PIX* pixConvertToSubpixelRGB(PIX* pixs, float scalex, float scaley, int order);
        LEPT_DLL extern PIX* pixConvertGrayToSubpixelRGB(PIX* pixs, float scalex, float scaley, int order);
        LEPT_DLL extern PIX* pixConvertColorToSubpixelRGB(PIX* pixs, float scalex, float scaley, int order);
        LEPT_DLL extern void l_setNeutralBoostVal(l_int32 val);
        LEPT_DLL extern PIX* pixConnCompTransform(PIX* pixs, int connect, int depth);
        LEPT_DLL extern PIX* pixConnCompAreaTransform(PIX* pixs, int connect);
        LEPT_DLL extern int pixConnCompIncrInit(PIX* pixs, int conn, PIX** ppixd, PTAA** pptaa, l_int32* pncc);
        LEPT_DLL extern int pixConnCompIncrAdd(PIX* pixs, PTAA* ptaa, l_int32* pncc, float x, float y, int debug);
        LEPT_DLL extern int pixGetSortedNeighborValues(PIX* pixs, int x, int y, int conn, l_int32** pneigh, l_int32* pnvals);
        LEPT_DLL extern PIX* pixLocToColorTransform(PIX* pixs);
        LEPT_DLL extern PIXTILING* pixTilingCreate(PIX* pixs, int nx, int ny, int w, int h, int xoverlap, int yoverlap);
        LEPT_DLL extern void pixTilingDestroy(PIXTILING** ppt);
        LEPT_DLL extern int pixTilingGetCount(PIXTILING* pt, l_int32* pnx, l_int32* pny);
        LEPT_DLL extern int pixTilingGetSize(PIXTILING* pt, l_int32* pw, l_int32* ph);
        LEPT_DLL extern PIX* pixTilingGetTile(PIXTILING* pt, int i, int j);
        LEPT_DLL extern int pixTilingNoStripOnPaint(PIXTILING* pt);
        LEPT_DLL extern int pixTilingPaintTile(PIX* pixd, int i, int j, PIX* pixs, PIXTILING* pt);
        LEPT_DLL extern PIX* pixReadStreamPng(FILE* fp);
        LEPT_DLL extern int readHeaderPng( const char* filename, int *pw, l_int32* ph, int *pbps, l_int32* pspp, int *piscmap );
        LEPT_DLL extern int freadHeaderPng(FILE* fp, l_int32* pw, l_int32* ph, l_int32* pbps, l_int32* pspp, l_int32* piscmap);
        LEPT_DLL extern int readHeaderMemPng( const l_uint8* data, size_t size, l_int32* pw, int *ph, l_int32* pbps, int *pspp, l_int32* piscmap );
        LEPT_DLL extern int fgetPngResolution(FILE* fp, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern int isPngInterlaced( const char* filename, int *pinterlaced );
        LEPT_DLL extern int fgetPngColormapInfo(FILE* fp, PIXCMAP** pcmap, l_int32* ptransparency);
        LEPT_DLL extern int pixWritePng( const char* filename, PIX *pix, float gamma );
        LEPT_DLL extern int pixWriteStreamPng(FILE* fp, PIX* pix, float gamma);
        LEPT_DLL extern int pixSetZlibCompression(PIX* pix, int compval);
        LEPT_DLL extern void l_pngSetReadStrip16To8(l_int32 flag);
        LEPT_DLL extern PIX* pixReadMemPng( const l_uint8* filedata, size_t filesize );
        LEPT_DLL extern int pixWriteMemPng(l_uint8** pfiledata, size_t* pfilesize, PIX* pix, float gamma);
        LEPT_DLL extern PIX* pixReadStreamPnm(FILE* fp);
        LEPT_DLL extern int readHeaderPnm( const char* filename, int *pw, l_int32* ph, int *pd, l_int32* ptype, int *pbps, l_int32* pspp );
        LEPT_DLL extern int freadHeaderPnm(FILE* fp, l_int32* pw, l_int32* ph, l_int32* pd, l_int32* ptype, l_int32* pbps, l_int32* pspp);
        LEPT_DLL extern int pixWriteStreamPnm(FILE* fp, PIX* pix);
        LEPT_DLL extern int pixWriteStreamAsciiPnm(FILE* fp, PIX* pix);
        LEPT_DLL extern int pixWriteStreamPam(FILE* fp, PIX* pix);
        LEPT_DLL extern PIX* pixReadMemPnm( const l_uint8* data, size_t size );
        LEPT_DLL extern int readHeaderMemPnm( const l_uint8* data, size_t size, l_int32* pw, int *ph, l_int32* pd, int *ptype, l_int32* pbps, int *pspp );
        LEPT_DLL extern int pixWriteMemPnm(l_uint8** pdata, size_t* psize, PIX* pix);
        LEPT_DLL extern int pixWriteMemPam(l_uint8** pdata, size_t* psize, PIX* pix);
        LEPT_DLL extern PIX* pixProjectiveSampledPta(PIX* pixs, PTA* ptad, PTA* ptas, int incolor);
        LEPT_DLL extern PIX* pixProjectiveSampled(PIX* pixs, l_float32* vc, int incolor);
        LEPT_DLL extern PIX* pixProjectivePta(PIX* pixs, PTA* ptad, PTA* ptas, int incolor);
        LEPT_DLL extern PIX* pixProjective(PIX* pixs, l_float32* vc, int incolor);
        LEPT_DLL extern PIX* pixProjectivePtaColor(PIX* pixs, PTA* ptad, PTA* ptas, uint colorval);
        LEPT_DLL extern PIX* pixProjectiveColor(PIX* pixs, l_float32* vc, uint colorval);
        LEPT_DLL extern PIX* pixProjectivePtaGray(PIX* pixs, PTA* ptad, PTA* ptas, byte grayval);
        LEPT_DLL extern PIX* pixProjectiveGray(PIX* pixs, l_float32* vc, byte grayval);
        LEPT_DLL extern PIX* pixProjectivePtaWithAlpha(PIX* pixs, PTA* ptad, PTA* ptas, PIX* pixg, float fract, int border);
        LEPT_DLL extern int getProjectiveXformCoeffs(PTA* ptas, PTA* ptad, l_float32** pvc);
        LEPT_DLL extern int projectiveXformSampledPt(l_float32* vc, int x, int y, l_int32* pxp, l_int32* pyp);
        LEPT_DLL extern int projectiveXformPt(l_float32* vc, int x, int y, l_float32* pxp, l_float32* pyp);
        LEPT_DLL extern int convertFilesToPS( const char* dirin, const char* substr, int res, const char* fileout );
        LEPT_DLL extern int sarrayConvertFilesToPS(SARRAY* sa, int res, const char* fileout );
        LEPT_DLL extern int convertFilesFittedToPS( const char* dirin, const char* substr, float xpts, float ypts, const char* fileout );
        LEPT_DLL extern int sarrayConvertFilesFittedToPS(SARRAY* sa, float xpts, float ypts, const char* fileout );
        LEPT_DLL extern int writeImageCompressedToPSFile( const char* filein, const char* fileout, int res, l_int32* pfirstfile, int *pindex );
        LEPT_DLL extern int convertSegmentedPagesToPS( const char* pagedir, const char* pagestr, int page_numpre, const char* maskdir, const char* maskstr, int mask_numpre, int numpost, int maxnum, float textscale, float imagescale, int threshold, const char* fileout );
        LEPT_DLL extern int pixWriteSegmentedPageToPS(PIX* pixs, PIX* pixm, float textscale, float imagescale, int threshold, int pageno, const char* fileout );
        LEPT_DLL extern int pixWriteMixedToPS(PIX* pixb, PIX* pixc, float scale, int pageno, const char* fileout );
        LEPT_DLL extern int convertToPSEmbed( const char* filein, const char* fileout, int level );
        LEPT_DLL extern int pixaWriteCompressedToPS(PIXA* pixa, const char* fileout, int res, int level );
        LEPT_DLL extern int pixWritePSEmbed( const char* filein, const char* fileout );
        LEPT_DLL extern int pixWriteStreamPS(FILE* fp, PIX* pix, BOX* box, int res, float scale);
        LEPT_DLL extern char* pixWriteStringPS(PIX* pixs, BOX* box, int res, float scale);
        LEPT_DLL extern char* generateUncompressedPS(char* hexdata, int w, int h, int d, int psbpl, int bps, float xpt, float ypt, float wpt, float hpt, int boxflag);
        LEPT_DLL extern void getScaledParametersPS(BOX* box, int wpix, int hpix, int res, float scale, l_float32* pxpt, l_float32* pypt, l_float32* pwpt, l_float32* phpt);
        LEPT_DLL extern void convertByteToHexAscii(l_uint8 byteval, char* pnib1, char* pnib2);
        LEPT_DLL extern int convertJpegToPSEmbed( const char* filein, const char* fileout );
        LEPT_DLL extern int convertJpegToPS( const char* filein, const char* fileout, const char* operation, int x, int y, int res, float scale, int pageno, int endpage );
        LEPT_DLL extern int convertJpegToPSString( const char* filein, char** poutstr, int *pnbytes, int x, int y, int res, float scale, int pageno, int endpage );
        LEPT_DLL extern char* generateJpegPS( const char* filein, L_COMP_DATA *cid, float xpt, float ypt, float wpt, float hpt, int pageno, int endpage );
        LEPT_DLL extern int convertG4ToPSEmbed( const char* filein, const char* fileout );
        LEPT_DLL extern int convertG4ToPS( const char* filein, const char* fileout, const char* operation, int x, int y, int res, float scale, int pageno, int maskflag, int endpage );
        LEPT_DLL extern int convertG4ToPSString( const char* filein, char** poutstr, int *pnbytes, int x, int y, int res, float scale, int pageno, int maskflag, int endpage );
        LEPT_DLL extern char* generateG4PS( const char* filein, L_COMP_DATA *cid, float xpt, float ypt, float wpt, float hpt, int maskflag, int pageno, int endpage );
        LEPT_DLL extern int convertTiffMultipageToPS( const char* filein, const char* fileout, float fillfract );
        LEPT_DLL extern int convertFlateToPSEmbed( const char* filein, const char* fileout );
        LEPT_DLL extern int convertFlateToPS( const char* filein, const char* fileout, const char* operation, int x, int y, int res, float scale, int pageno, int endpage );
        LEPT_DLL extern int convertFlateToPSString( const char* filein, char** poutstr, int *pnbytes, int x, int y, int res, float scale, int pageno, int endpage );
        LEPT_DLL extern char* generateFlatePS( const char* filein, L_COMP_DATA *cid, float xpt, float ypt, float wpt, float hpt, int pageno, int endpage );
        LEPT_DLL extern int pixWriteMemPS(l_uint8** pdata, size_t* psize, PIX* pix, BOX* box, int res, float scale);
        LEPT_DLL extern int getResLetterPage(l_int32 w, int h, float fillfract);
        LEPT_DLL extern int getResA4Page(l_int32 w, int h, float fillfract);
        LEPT_DLL extern void l_psWriteBoundingBox(l_int32 flag);
        LEPT_DLL extern PTA* ptaCreate(l_int32 n);
        LEPT_DLL extern PTA* ptaCreateFromNuma(NUMA* nax, NUMA* nay);
        LEPT_DLL extern void ptaDestroy(PTA** ppta);
        LEPT_DLL extern PTA* ptaCopy(PTA* pta);
        LEPT_DLL extern PTA* ptaCopyRange(PTA* ptas, int istart, int iend);
        LEPT_DLL extern PTA* ptaClone(PTA* pta);
        LEPT_DLL extern int ptaEmpty(PTA* pta);
        LEPT_DLL extern int ptaAddPt(PTA* pta, float x, float y);
        LEPT_DLL extern int ptaInsertPt(PTA* pta, int index, int x, int y);
        LEPT_DLL extern int ptaRemovePt(PTA* pta, int index);
        LEPT_DLL extern int ptaGetRefcount(PTA* pta);
        LEPT_DLL extern int ptaChangeRefcount(PTA* pta, int delta);
        LEPT_DLL extern int ptaGetCount(PTA* pta);
        LEPT_DLL extern int ptaGetPt(PTA* pta, int index, l_float32* px, l_float32* py);
        LEPT_DLL extern int ptaGetIPt(PTA* pta, int index, l_int32* px, l_int32* py);
        LEPT_DLL extern int ptaSetPt(PTA* pta, int index, float x, float y);
        LEPT_DLL extern int ptaGetArrays(PTA* pta, NUMA** pnax, NUMA** pnay);
        LEPT_DLL extern PTA* ptaRead( const char* filename );
        LEPT_DLL extern PTA* ptaReadStream(FILE* fp);
        LEPT_DLL extern PTA* ptaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int ptaWrite( const char* filename, PTA *pta, int type );
        LEPT_DLL extern int ptaWriteStream(FILE* fp, PTA* pta, int type);
        LEPT_DLL extern int ptaWriteMem(l_uint8** pdata, size_t* psize, PTA* pta, int type);
        LEPT_DLL extern PTAA* ptaaCreate(l_int32 n);
        LEPT_DLL extern void ptaaDestroy(PTAA** pptaa);
        LEPT_DLL extern int ptaaAddPta(PTAA* ptaa, PTA* pta, int copyflag);
        LEPT_DLL extern int ptaaGetCount(PTAA* ptaa);
        LEPT_DLL extern PTA* ptaaGetPta(PTAA* ptaa, int index, int accessflag);
        LEPT_DLL extern int ptaaGetPt(PTAA* ptaa, int ipta, int jpt, l_float32* px, l_float32* py);
        LEPT_DLL extern int ptaaInitFull(PTAA* ptaa, PTA* pta);
        LEPT_DLL extern int ptaaReplacePta(PTAA* ptaa, int index, PTA* pta);
        LEPT_DLL extern int ptaaAddPt(PTAA* ptaa, int ipta, float x, float y);
        LEPT_DLL extern int ptaaTruncate(PTAA* ptaa);
        LEPT_DLL extern PTAA* ptaaRead( const char* filename );
        LEPT_DLL extern PTAA* ptaaReadStream(FILE* fp);
        LEPT_DLL extern PTAA* ptaaReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int ptaaWrite( const char* filename, PTAA *ptaa, int type );
        LEPT_DLL extern int ptaaWriteStream(FILE* fp, PTAA* ptaa, int type);
        LEPT_DLL extern int ptaaWriteMem(l_uint8** pdata, size_t* psize, PTAA* ptaa, int type);
        LEPT_DLL extern PTA* ptaSubsample(PTA* ptas, int subfactor);
        LEPT_DLL extern int ptaJoin(PTA* ptad, PTA* ptas, int istart, int iend);
        LEPT_DLL extern int ptaaJoin(PTAA* ptaad, PTAA* ptaas, int istart, int iend);
        LEPT_DLL extern PTA* ptaReverse(PTA* ptas, int type);
        LEPT_DLL extern PTA* ptaTranspose(PTA* ptas);
        LEPT_DLL extern PTA* ptaCyclicPerm(PTA* ptas, int xs, int ys);
        LEPT_DLL extern PTA* ptaSelectRange(PTA* ptas, int first, int last);
        LEPT_DLL extern BOX* ptaGetBoundingRegion(PTA* pta);
        LEPT_DLL extern int ptaGetRange(PTA* pta, l_float32* pminx, l_float32* pmaxx, l_float32* pminy, l_float32* pmaxy);
        LEPT_DLL extern PTA* ptaGetInsideBox(PTA* ptas, BOX* box);
        LEPT_DLL extern PTA* pixFindCornerPixels(PIX* pixs);
        LEPT_DLL extern int ptaContainsPt(PTA* pta, int x, int y);
        LEPT_DLL extern int ptaTestIntersection(PTA* pta1, PTA* pta2);
        LEPT_DLL extern PTA* ptaTransform(PTA* ptas, int shiftx, int shifty, float scalex, float scaley);
        LEPT_DLL extern int ptaPtInsidePolygon(PTA* pta, float x, float y, l_int32* pinside);
        LEPT_DLL extern float l_angleBetweenVectors(l_float32 x1, float y1, float x2, float y2);
        LEPT_DLL extern int ptaGetMinMax(PTA* pta, l_float32* pxmin, l_float32* pymin, l_float32* pxmax, l_float32* pymax);
        LEPT_DLL extern PTA* ptaSelectByValue(PTA* ptas, float xth, float yth, int type, int relation);
        LEPT_DLL extern PTA* ptaCropToMask(PTA* ptas, PIX* pixm);
        LEPT_DLL extern int ptaGetLinearLSF(PTA* pta, l_float32* pa, l_float32* pb, NUMA** pnafit);
        LEPT_DLL extern int ptaGetQuadraticLSF(PTA* pta, l_float32* pa, l_float32* pb, l_float32* pc, NUMA** pnafit);
        LEPT_DLL extern int ptaGetCubicLSF(PTA* pta, l_float32* pa, l_float32* pb, l_float32* pc, l_float32* pd, NUMA** pnafit);
        LEPT_DLL extern int ptaGetQuarticLSF(PTA* pta, l_float32* pa, l_float32* pb, l_float32* pc, l_float32* pd, l_float32* pe, NUMA** pnafit);
        LEPT_DLL extern int ptaNoisyLinearLSF(PTA* pta, float factor, PTA** pptad, l_float32* pa, l_float32* pb, l_float32* pmederr, NUMA** pnafit);
        LEPT_DLL extern int ptaNoisyQuadraticLSF(PTA* pta, float factor, PTA** pptad, l_float32* pa, l_float32* pb, l_float32* pc, l_float32* pmederr, NUMA** pnafit);
        LEPT_DLL extern int applyLinearFit(l_float32 a, float b, float x, l_float32* py);
        LEPT_DLL extern int applyQuadraticFit(l_float32 a, float b, float c, float x, l_float32* py);
        LEPT_DLL extern int applyCubicFit(l_float32 a, float b, float c, float d, float x, l_float32* py);
        LEPT_DLL extern int applyQuarticFit(l_float32 a, float b, float c, float d, float e, float x, l_float32* py);
        LEPT_DLL extern int pixPlotAlongPta(PIX* pixs, PTA* pta, int outformat, const char* title );
        LEPT_DLL extern PTA* ptaGetPixelsFromPix(PIX* pixs, BOX* box);
        LEPT_DLL extern PIX* pixGenerateFromPta(PTA* pta, int w, int h);
        LEPT_DLL extern PTA* ptaGetBoundaryPixels(PIX* pixs, int type);
        LEPT_DLL extern PTAA* ptaaGetBoundaryPixels(PIX* pixs, int type, int connectivity, BOXA** pboxa, PIXA** ppixa);
        LEPT_DLL extern PTAA* ptaaIndexLabeledPixels(PIX* pixs, l_int32* pncc);
        LEPT_DLL extern PTA* ptaGetNeighborPixLocs(PIX* pixs, int x, int y, int conn);
        LEPT_DLL extern PTA* numaConvertToPta1(NUMA* na);
        LEPT_DLL extern PTA* numaConvertToPta2(NUMA* nax, NUMA* nay);
        LEPT_DLL extern int ptaConvertToNuma(PTA* pta, NUMA** pnax, NUMA** pnay);
        LEPT_DLL extern PIX* pixDisplayPta(PIX* pixd, PIX* pixs, PTA* pta);
        LEPT_DLL extern PIX* pixDisplayPtaaPattern(PIX* pixd, PIX* pixs, PTAA* ptaa, PIX* pixp, int cx, int cy);
        LEPT_DLL extern PIX* pixDisplayPtaPattern(PIX* pixd, PIX* pixs, PTA* pta, PIX* pixp, int cx, int cy, uint color);
        LEPT_DLL extern PTA* ptaReplicatePattern(PTA* ptas, PIX* pixp, PTA* ptap, int cx, int cy, int w, int h);
        LEPT_DLL extern PIX* pixDisplayPtaa(PIX* pixs, PTAA* ptaa);
        LEPT_DLL extern PTA* ptaSort(PTA* ptas, int sorttype, int sortorder, NUMA** pnaindex);
        LEPT_DLL extern int ptaGetSortIndex(PTA* ptas, int sorttype, int sortorder, NUMA** pnaindex);
        LEPT_DLL extern PTA* ptaSortByIndex(PTA* ptas, NUMA* naindex);
        LEPT_DLL extern PTAA* ptaaSortByIndex(PTAA* ptaas, NUMA* naindex);
        LEPT_DLL extern int ptaGetRankValue(PTA* pta, float fract, PTA* ptasort, int sorttype, l_float32* pval);
        LEPT_DLL extern PTA* ptaUnionByAset(PTA* pta1, PTA* pta2);
        LEPT_DLL extern PTA* ptaRemoveDupsByAset(PTA* ptas);
        LEPT_DLL extern PTA* ptaIntersectionByAset(PTA* pta1, PTA* pta2);
        LEPT_DLL extern L_ASET* l_asetCreateFromPta(PTA* pta);
        LEPT_DLL extern PTA* ptaUnionByHash(PTA* pta1, PTA* pta2);
        LEPT_DLL extern int ptaRemoveDupsByHash(PTA* ptas, PTA** pptad, L_DNAHASH** pdahash);
        LEPT_DLL extern PTA* ptaIntersectionByHash(PTA* pta1, PTA* pta2);
        LEPT_DLL extern int ptaFindPtByHash(PTA* pta, L_DNAHASH* dahash, int x, int y, l_int32* pindex);
        LEPT_DLL extern L_DNAHASH* l_dnaHashCreateFromPta(PTA* pta);
        LEPT_DLL extern L_PTRA* ptraCreate(l_int32 n);
        LEPT_DLL extern void ptraDestroy(L_PTRA** ppa, int freeflag, int warnflag);
        LEPT_DLL extern int ptraAdd(L_PTRA* pa, void* item);
        LEPT_DLL extern int ptraInsert(L_PTRA* pa, int index, void* item, int shiftflag);
        LEPT_DLL extern void* ptraRemove(L_PTRA* pa, int index, int flag);
        LEPT_DLL extern void* ptraRemoveLast(L_PTRA* pa);
        LEPT_DLL extern void* ptraReplace(L_PTRA* pa, int index, void* item, int freeflag);
        LEPT_DLL extern int ptraSwap(L_PTRA* pa, int index1, int index2);
        LEPT_DLL extern int ptraCompactArray(L_PTRA* pa);
        LEPT_DLL extern int ptraReverse(L_PTRA* pa);
        LEPT_DLL extern int ptraJoin(L_PTRA* pa1, L_PTRA* pa2);
        LEPT_DLL extern int ptraGetMaxIndex(L_PTRA* pa, l_int32* pmaxindex);
        LEPT_DLL extern int ptraGetActualCount(L_PTRA* pa, l_int32* pcount);
        LEPT_DLL extern void* ptraGetPtrToItem(L_PTRA* pa, int index);
        LEPT_DLL extern L_PTRAA* ptraaCreate(l_int32 n);
        LEPT_DLL extern void ptraaDestroy(L_PTRAA** ppaa, int freeflag, int warnflag);
        LEPT_DLL extern int ptraaGetSize(L_PTRAA* paa, l_int32* psize);
        LEPT_DLL extern int ptraaInsertPtra(L_PTRAA* paa, int index, L_PTRA* pa);
        LEPT_DLL extern L_PTRA* ptraaGetPtra(L_PTRAA* paa, int index, int accessflag);
        LEPT_DLL extern L_PTRA* ptraaFlattenToPtra(L_PTRAA* paa);
        LEPT_DLL extern int pixQuadtreeMean(PIX* pixs, int nlevels, PIX* pix_ma, FPIXA** pfpixa);
        LEPT_DLL extern int pixQuadtreeVariance(PIX* pixs, int nlevels, PIX* pix_ma, DPIX* dpix_msa, FPIXA** pfpixa_v, FPIXA** pfpixa_rv);
        LEPT_DLL extern int pixMeanInRectangle(PIX* pixs, BOX* box, PIX* pixma, l_float32* pval);
        LEPT_DLL extern int pixVarianceInRectangle(PIX* pixs, BOX* box, PIX* pix_ma, DPIX* dpix_msa, l_float32* pvar, l_float32* prvar);
        LEPT_DLL extern BOXAA* boxaaQuadtreeRegions(l_int32 w, int h, int nlevels);
        LEPT_DLL extern int quadtreeGetParent(FPIXA* fpixa, int level, int x, int y, l_float32* pval);
        LEPT_DLL extern int quadtreeGetChildren(FPIXA* fpixa, int level, int x, int y, l_float32* pval00, l_float32* pval10, l_float32* pval01, l_float32* pval11);
        LEPT_DLL extern int quadtreeMaxLevels(l_int32 w, int h);
        LEPT_DLL extern PIX* fpixaDisplayQuadtree(FPIXA* fpixa, int factor, int fontsize);
        LEPT_DLL extern L_QUEUE* lqueueCreate(l_int32 nalloc);
        LEPT_DLL extern void lqueueDestroy(L_QUEUE** plq, int freeflag);
        LEPT_DLL extern int lqueueAdd(L_QUEUE* lq, void* item);
        LEPT_DLL extern void* lqueueRemove(L_QUEUE* lq);
        LEPT_DLL extern int lqueueGetCount(L_QUEUE* lq);
        LEPT_DLL extern int lqueuePrint(FILE* fp, L_QUEUE* lq);
        LEPT_DLL extern PIX* pixRankFilter(PIX* pixs, int wf, int hf, float rank);
        LEPT_DLL extern PIX* pixRankFilterRGB(PIX* pixs, int wf, int hf, float rank);
        LEPT_DLL extern PIX* pixRankFilterGray(PIX* pixs, int wf, int hf, float rank);
        LEPT_DLL extern PIX* pixMedianFilter(PIX* pixs, int wf, int hf);
        LEPT_DLL extern PIX* pixRankFilterWithScaling(PIX* pixs, int wf, int hf, float rank, float scalefactor);
        LEPT_DLL extern L_RBTREE* l_rbtreeCreate(l_int32 keytype);
        LEPT_DLL extern RB_TYPE* l_rbtreeLookup(L_RBTREE* t, RB_TYPE key);
        LEPT_DLL extern void l_rbtreeInsert(L_RBTREE* t, RB_TYPE key, RB_TYPE value);
        LEPT_DLL extern void l_rbtreeDelete(L_RBTREE* t, RB_TYPE key);
        LEPT_DLL extern void l_rbtreeDestroy(L_RBTREE** pt);
        LEPT_DLL extern L_RBTREE_NODE* l_rbtreeGetFirst(L_RBTREE* t);
        LEPT_DLL extern L_RBTREE_NODE* l_rbtreeGetNext(L_RBTREE_NODE* n);
        LEPT_DLL extern L_RBTREE_NODE* l_rbtreeGetLast(L_RBTREE* t);
        LEPT_DLL extern L_RBTREE_NODE* l_rbtreeGetPrev(L_RBTREE_NODE* n);
        LEPT_DLL extern int l_rbtreeGetCount(L_RBTREE* t);
        LEPT_DLL extern void l_rbtreePrint(FILE* fp, L_RBTREE* t);
        LEPT_DLL extern SARRAY* pixProcessBarcodes(PIX* pixs, int format, int method, SARRAY** psaw, int debugflag);
        LEPT_DLL extern PIXA* pixExtractBarcodes(PIX* pixs, int debugflag);
        LEPT_DLL extern SARRAY* pixReadBarcodes(PIXA* pixa, int format, int method, SARRAY** psaw, int debugflag);
        LEPT_DLL extern NUMA* pixReadBarcodeWidths(PIX* pixs, int method, int debugflag);
        LEPT_DLL extern BOXA* pixLocateBarcodes(PIX* pixs, int thresh, PIX** ppixb, PIX** ppixm);
        LEPT_DLL extern PIX* pixDeskewBarcode(PIX* pixs, PIX* pixb, BOX* box, int margin, int threshold, l_float32* pangle, l_float32* pconf);
        LEPT_DLL extern NUMA* pixExtractBarcodeWidths1(PIX* pixs, float thresh, float binfract, NUMA** pnaehist, NUMA** pnaohist, int debugflag);
        LEPT_DLL extern NUMA* pixExtractBarcodeWidths2(PIX* pixs, float thresh, l_float32* pwidth, NUMA** pnac, int debugflag);
        LEPT_DLL extern NUMA* pixExtractBarcodeCrossings(PIX* pixs, float thresh, int debugflag);
        LEPT_DLL extern NUMA* numaQuantizeCrossingsByWidth(NUMA* nas, float binfract, NUMA** pnaehist, NUMA** pnaohist, int debugflag);
        LEPT_DLL extern NUMA* numaQuantizeCrossingsByWindow(NUMA* nas, float ratio, l_float32* pwidth, l_float32* pfirstloc, NUMA** pnac, int debugflag);
        LEPT_DLL extern PIXA* pixaReadFiles( const char* dirname, const char* substr );
        LEPT_DLL extern PIXA* pixaReadFilesSA(SARRAY* sa);
        LEPT_DLL extern PIX* pixRead( const char* filename );
        LEPT_DLL extern PIX* pixReadWithHint( const char* filename, int hint );
        LEPT_DLL extern PIX* pixReadIndexed(SARRAY* sa, int index);
        LEPT_DLL extern PIX* pixReadStream(FILE* fp, int hint);
        LEPT_DLL extern int pixReadHeader( const char* filename, int *pformat, l_int32* pw, int *ph, l_int32* pbps, int *pspp, l_int32* piscmap );
        LEPT_DLL extern int findFileFormat( const char* filename, int *pformat );
        LEPT_DLL extern int findFileFormatStream(FILE* fp, l_int32* pformat);
        LEPT_DLL extern int findFileFormatBuffer( const l_uint8* buf, int *pformat );
        LEPT_DLL extern int fileFormatIsTiff(FILE* fp);
        LEPT_DLL extern PIX* pixReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixReadHeaderMem( const l_uint8* data, size_t size, l_int32* pformat, int *pw, l_int32* ph, int *pbps, l_int32* pspp, int *piscmap );
        LEPT_DLL extern int writeImageFileInfo( const char* filename, FILE *fpout, int headeronly );
        LEPT_DLL extern int ioFormatTest( const char* filename );
        LEPT_DLL extern L_RECOG* recogCreateFromRecog(L_RECOG* recs, int scalew, int scaleh, int linew, int threshold, int maxyshift);
        LEPT_DLL extern L_RECOG* recogCreateFromPixa(PIXA* pixa, int scalew, int scaleh, int linew, int threshold, int maxyshift);
        LEPT_DLL extern L_RECOG* recogCreateFromPixaNoFinish(PIXA* pixa, int scalew, int scaleh, int linew, int threshold, int maxyshift);
        LEPT_DLL extern L_RECOG* recogCreate(l_int32 scalew, int scaleh, int linew, int threshold, int maxyshift);
        LEPT_DLL extern void recogDestroy(L_RECOG** precog);
        LEPT_DLL extern int recogGetCount(L_RECOG* recog);
        LEPT_DLL extern int recogSetParams(L_RECOG* recog, int type, int min_nopad, float max_wh_ratio, float max_ht_ratio);
        LEPT_DLL extern int recogGetClassIndex(L_RECOG* recog, int val, char* text, l_int32* pindex);
        LEPT_DLL extern int recogStringToIndex(L_RECOG* recog, char* text, l_int32* pindex);
        LEPT_DLL extern int recogGetClassString(L_RECOG* recog, int index, char** pcharstr);
        LEPT_DLL extern int l_convertCharstrToInt( const char* str, int *pval );
        LEPT_DLL extern L_RECOG* recogRead( const char* filename );
        LEPT_DLL extern L_RECOG* recogReadStream(FILE* fp);
        LEPT_DLL extern L_RECOG* recogReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int recogWrite( const char* filename, L_RECOG *recog );
        LEPT_DLL extern int recogWriteStream(FILE* fp, L_RECOG* recog);
        LEPT_DLL extern int recogWriteMem(l_uint8** pdata, size_t* psize, L_RECOG* recog);
        LEPT_DLL extern PIXA* recogExtractPixa(L_RECOG* recog);
        LEPT_DLL extern BOXA* recogDecode(L_RECOG* recog, PIX* pixs, int nlevels, PIX** ppixdb);
        LEPT_DLL extern int recogCreateDid(L_RECOG* recog, PIX* pixs);
        LEPT_DLL extern int recogDestroyDid(L_RECOG* recog);
        LEPT_DLL extern int recogDidExists(L_RECOG* recog);
        LEPT_DLL extern L_RDID* recogGetDid(L_RECOG* recog);
        LEPT_DLL extern int recogSetChannelParams(L_RECOG* recog, int nlevels);
        LEPT_DLL extern int recogIdentifyMultiple(L_RECOG* recog, PIX* pixs, int minh, int skipsplit, BOXA** pboxa, PIXA** ppixa, PIX** ppixdb, int debugsplit);
        LEPT_DLL extern int recogSplitIntoCharacters(L_RECOG* recog, PIX* pixs, int minh, int skipsplit, BOXA** pboxa, PIXA** ppixa, int debug);
        LEPT_DLL extern int recogCorrelationBestRow(L_RECOG* recog, PIX* pixs, BOXA** pboxa, NUMA** pnascore, NUMA** pnaindex, SARRAY** psachar, int debug);
        LEPT_DLL extern int recogCorrelationBestChar(L_RECOG* recog, PIX* pixs, BOX** pbox, l_float32* pscore, l_int32* pindex, char** pcharstr, PIX** ppixdb);
        LEPT_DLL extern int recogIdentifyPixa(L_RECOG* recog, PIXA* pixa, PIX** ppixdb);
        LEPT_DLL extern int recogIdentifyPix(L_RECOG* recog, PIX* pixs, PIX** ppixdb);
        LEPT_DLL extern int recogSkipIdentify(L_RECOG* recog);
        LEPT_DLL extern void rchaDestroy(L_RCHA** prcha);
        LEPT_DLL extern void rchDestroy(L_RCH** prch);
        LEPT_DLL extern int rchaExtract(L_RCHA* rcha, NUMA** pnaindex, NUMA** pnascore, SARRAY** psatext, NUMA** pnasample, NUMA** pnaxloc, NUMA** pnayloc, NUMA** pnawidth);
        LEPT_DLL extern int rchExtract(L_RCH* rch, l_int32* pindex, l_float32* pscore, char** ptext, l_int32* psample, l_int32* pxloc, l_int32* pyloc, l_int32* pwidth);
        LEPT_DLL extern PIX* recogProcessToIdentify(L_RECOG* recog, PIX* pixs, int pad);
        LEPT_DLL extern SARRAY* recogExtractNumbers(L_RECOG* recog, BOXA* boxas, float scorethresh, int spacethresh, BOXAA** pbaa, NUMAA** pnaa);
        LEPT_DLL extern PIXA* showExtractNumbers(PIX* pixs, SARRAY* sa, BOXAA* baa, NUMAA* naa, PIX** ppixdb);
        LEPT_DLL extern int recogTrainLabeled(L_RECOG* recog, PIX* pixs, BOX* box, char* text, int debug);
        LEPT_DLL extern int recogProcessLabeled(L_RECOG* recog, PIX* pixs, BOX* box, char* text, PIX** ppix);
        LEPT_DLL extern int recogAddSample(L_RECOG* recog, PIX* pix, int debug);
        LEPT_DLL extern PIX* recogModifyTemplate(L_RECOG* recog, PIX* pixs);
        LEPT_DLL extern int recogAverageSamples(L_RECOG** precog, int debug);
        LEPT_DLL extern int pixaAccumulateSamples(PIXA* pixa, PTA* pta, PIX** ppixd, l_float32* px, l_float32* py);
        LEPT_DLL extern int recogTrainingFinished(L_RECOG** precog, int modifyflag, int minsize, float minfract);
        LEPT_DLL extern PIXA* recogFilterPixaBySize(PIXA* pixas, int setsize, int maxkeep, float max_ht_ratio, NUMA** pna);
        LEPT_DLL extern PIXAA* recogSortPixaByClass(PIXA* pixa, int setsize);
        LEPT_DLL extern int recogRemoveOutliers1(L_RECOG** precog, float minscore, int mintarget, int minsize, PIX** ppixsave, PIX** ppixrem);
        LEPT_DLL extern PIXA* pixaRemoveOutliers1(PIXA* pixas, float minscore, int mintarget, int minsize, PIX** ppixsave, PIX** ppixrem);
        LEPT_DLL extern int recogRemoveOutliers2(L_RECOG** precog, float minscore, int minsize, PIX** ppixsave, PIX** ppixrem);
        LEPT_DLL extern PIXA* pixaRemoveOutliers2(PIXA* pixas, float minscore, int minsize, PIX** ppixsave, PIX** ppixrem);
        LEPT_DLL extern PIXA* recogTrainFromBoot(L_RECOG* recogboot, PIXA* pixas, float minscore, int threshold, int debug);
        LEPT_DLL extern int recogPadDigitTrainingSet(L_RECOG** precog, int scaleh, int linew);
        LEPT_DLL extern int recogIsPaddingNeeded(L_RECOG* recog, SARRAY** psa);
        LEPT_DLL extern PIXA* recogAddDigitPadTemplates(L_RECOG* recog, SARRAY* sa);
        LEPT_DLL extern L_RECOG* recogMakeBootDigitRecog(l_int32 scaleh, int linew, int maxyshift, int debug);
        LEPT_DLL extern PIXA* recogMakeBootDigitTemplates(l_int32 debug);
        LEPT_DLL extern int recogShowContent(FILE* fp, L_RECOG* recog, int index, int display);
        LEPT_DLL extern int recogDebugAverages(L_RECOG** precog, int debug);
        LEPT_DLL extern int recogShowAverageTemplates(L_RECOG* recog);
        LEPT_DLL extern int recogShowMatchesInRange(L_RECOG* recog, PIXA* pixa, float minscore, float maxscore, int display);
        LEPT_DLL extern PIX* recogShowMatch(L_RECOG* recog, PIX* pix1, PIX* pix2, BOX* box, int index, float score);
        LEPT_DLL extern int regTestSetup(l_int32 argc, char** argv, L_REGPARAMS** prp);
        LEPT_DLL extern int regTestCleanup(L_REGPARAMS* rp);
        LEPT_DLL extern int regTestCompareValues(L_REGPARAMS* rp, float val1, float val2, float delta);
        LEPT_DLL extern int regTestCompareStrings(L_REGPARAMS* rp, l_uint8* string1, size_t bytes1, l_uint8* string2, size_t bytes2);
        LEPT_DLL extern int regTestComparePix(L_REGPARAMS* rp, PIX* pix1, PIX* pix2);
        LEPT_DLL extern int regTestCompareSimilarPix(L_REGPARAMS* rp, PIX* pix1, PIX* pix2, int mindiff, float maxfract, int printstats);
        LEPT_DLL extern int regTestCheckFile(L_REGPARAMS* rp, const char* localname );
        LEPT_DLL extern int regTestCompareFiles(L_REGPARAMS* rp, int index1, int index2);
        LEPT_DLL extern int regTestWritePixAndCheck(L_REGPARAMS* rp, PIX* pix, int format);
        LEPT_DLL extern char* regTestGenLocalFilename(L_REGPARAMS* rp, int index, int format);
        LEPT_DLL extern int pixRasterop(PIX* pixd, int dx, int dy, int dw, int dh, int op, PIX* pixs, int sx, int sy);
        LEPT_DLL extern int pixRasteropVip(PIX* pixd, int bx, int bw, int vshift, int incolor);
        LEPT_DLL extern int pixRasteropHip(PIX* pixd, int by, int bh, int hshift, int incolor);
        LEPT_DLL extern PIX* pixTranslate(PIX* pixd, PIX* pixs, int hshift, int vshift, int incolor);
        LEPT_DLL extern int pixRasteropIP(PIX* pixd, int hshift, int vshift, int incolor);
        LEPT_DLL extern int pixRasteropFullImage(PIX* pixd, PIX* pixs, int op);
        LEPT_DLL extern void rasteropVipLow(l_uint32* data, int pixw, int pixh, int depth, int wpl, int x, int w, int shift);
        LEPT_DLL extern void rasteropHipLow(l_uint32* data, int pixh, int depth, int wpl, int y, int h, int shift);
        LEPT_DLL extern void shiftDataHorizontalLow(l_uint32* datad, int wpld, l_uint32* datas, int wpls, int shift);
        LEPT_DLL extern void rasteropUniLow(l_uint32* datad, int dpixw, int dpixh, int depth, int dwpl, int dx, int dy, int dw, int dh, int op);
        LEPT_DLL extern void rasteropLow(l_uint32* datad, int dpixw, int dpixh, int depth, int dwpl, int dx, int dy, int dw, int dh, int op, l_uint32* datas, int spixw, int spixh, int swpl, int sx, int sy);
        LEPT_DLL extern PIX* pixRotate(PIX* pixs, float angle, int type, int incolor, int width, int height);
        LEPT_DLL extern PIX* pixEmbedForRotation(PIX* pixs, float angle, int incolor, int width, int height);
        LEPT_DLL extern PIX* pixRotateBySampling(PIX* pixs, int xcen, int ycen, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotateBinaryNice(PIX* pixs, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotateWithAlpha(PIX* pixs, float angle, PIX* pixg, float fract);
        LEPT_DLL extern PIX* pixRotateAM(PIX* pixs, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotateAMColor(PIX* pixs, float angle, uint colorval);
        LEPT_DLL extern PIX* pixRotateAMGray(PIX* pixs, float angle, byte grayval);
        LEPT_DLL extern PIX* pixRotateAMCorner(PIX* pixs, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotateAMColorCorner(PIX* pixs, float angle, uint fillval);
        LEPT_DLL extern PIX* pixRotateAMGrayCorner(PIX* pixs, float angle, byte grayval);
        LEPT_DLL extern PIX* pixRotateAMColorFast(PIX* pixs, float angle, uint colorval);
        LEPT_DLL extern void rotateAMColorLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, float angle, uint colorval);
        LEPT_DLL extern void rotateAMGrayLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, float angle, byte grayval);
        LEPT_DLL extern void rotateAMColorCornerLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, float angle, uint colorval);
        LEPT_DLL extern void rotateAMGrayCornerLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, float angle, byte grayval);
        LEPT_DLL extern void rotateAMColorFastLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datas, int wpls, float angle, uint colorval);
        LEPT_DLL extern PIX* pixRotateOrth(PIX* pixs, int quads);
        LEPT_DLL extern PIX* pixRotate180(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixRotate90(PIX* pixs, int direction);
        LEPT_DLL extern PIX* pixFlipLR(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixFlipTB(PIX* pixd, PIX* pixs);
        LEPT_DLL extern PIX* pixRotateShear(PIX* pixs, int xcen, int ycen, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotate2Shear(PIX* pixs, int xcen, int ycen, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotate3Shear(PIX* pixs, int xcen, int ycen, float angle, int incolor);
        LEPT_DLL extern int pixRotateShearIP(PIX* pixs, int xcen, int ycen, float angle, int incolor);
        LEPT_DLL extern PIX* pixRotateShearCenter(PIX* pixs, float angle, int incolor);
        LEPT_DLL extern int pixRotateShearCenterIP(PIX* pixs, float angle, int incolor);
        LEPT_DLL extern PIX* pixStrokeWidthTransform(PIX* pixs, int color, int depth, int nangles);
        LEPT_DLL extern PIX* pixRunlengthTransform(PIX* pixs, int color, int direction, int depth);
        LEPT_DLL extern int pixFindHorizontalRuns(PIX* pix, int y, l_int32* xstart, l_int32* xend, l_int32* pn);
        LEPT_DLL extern int pixFindVerticalRuns(PIX* pix, int x, l_int32* ystart, l_int32* yend, l_int32* pn);
        LEPT_DLL extern NUMA* pixFindMaxRuns(PIX* pix, int direction, NUMA** pnastart);
        LEPT_DLL extern int pixFindMaxHorizontalRunOnLine(PIX* pix, int y, l_int32* pxstart, l_int32* psize);
        LEPT_DLL extern int pixFindMaxVerticalRunOnLine(PIX* pix, int x, l_int32* pystart, l_int32* psize);
        LEPT_DLL extern int runlengthMembershipOnLine(l_int32* buffer, int size, int depth, l_int32* start, l_int32* end, int n);
        LEPT_DLL extern l_int32* makeMSBitLocTab(l_int32 bitval);
        LEPT_DLL extern SARRAY* sarrayCreate(l_int32 n);
        LEPT_DLL extern SARRAY* sarrayCreateInitialized(l_int32 n, char* initstr);
        LEPT_DLL extern SARRAY* sarrayCreateWordsFromString( const char*string );
        LEPT_DLL extern SARRAY* sarrayCreateLinesFromString( const char*string, int blankflag );
        LEPT_DLL extern void sarrayDestroy(SARRAY** psa);
        LEPT_DLL extern SARRAY* sarrayCopy(SARRAY* sa);
        LEPT_DLL extern SARRAY* sarrayClone(SARRAY* sa);
        LEPT_DLL extern int sarrayAddString(SARRAY* sa, char*string, int copyflag);
        LEPT_DLL extern char* sarrayRemoveString(SARRAY* sa, int index);
        LEPT_DLL extern int sarrayReplaceString(SARRAY* sa, int index, char* newstr, int copyflag);
        LEPT_DLL extern int sarrayClear(SARRAY* sa);
        LEPT_DLL extern int sarrayGetCount(SARRAY* sa);
        LEPT_DLL extern char** sarrayGetArray(SARRAY* sa, l_int32* pnalloc, l_int32* pn);
        LEPT_DLL extern char* sarrayGetString(SARRAY* sa, int index, int copyflag);
        LEPT_DLL extern int sarrayGetRefcount(SARRAY* sa);
        LEPT_DLL extern int sarrayChangeRefcount(SARRAY* sa, int delta);
        LEPT_DLL extern char* sarrayToString(SARRAY* sa, int addnlflag);
        LEPT_DLL extern char* sarrayToStringRange(SARRAY* sa, int first, int nstrings, int addnlflag);
        LEPT_DLL extern int sarrayJoin(SARRAY* sa1, SARRAY* sa2);
        LEPT_DLL extern int sarrayAppendRange(SARRAY* sa1, SARRAY* sa2, int start, int end);
        LEPT_DLL extern int sarrayPadToSameSize(SARRAY* sa1, SARRAY* sa2, char* padstring);
        LEPT_DLL extern SARRAY* sarrayConvertWordsToLines(SARRAY* sa, int linesize);
        LEPT_DLL extern int sarraySplitString(SARRAY* sa, const char* str, const char* separators );
        LEPT_DLL extern SARRAY* sarraySelectBySubstring(SARRAY* sain, const char* substr );
        LEPT_DLL extern SARRAY* sarraySelectByRange(SARRAY* sain, int first, int last);
        LEPT_DLL extern int sarrayParseRange(SARRAY* sa, int start, l_int32* pactualstart, l_int32* pend, l_int32* pnewstart, const char* substr, int loc );
        LEPT_DLL extern SARRAY* sarrayRead( const char* filename );
        LEPT_DLL extern SARRAY* sarrayReadStream(FILE* fp);
        LEPT_DLL extern SARRAY* sarrayReadMem( const l_uint8* data, size_t size );
        LEPT_DLL extern int sarrayWrite( const char* filename, SARRAY *sa );
        LEPT_DLL extern int sarrayWriteStream(FILE* fp, SARRAY* sa);
        LEPT_DLL extern int sarrayWriteMem(l_uint8** pdata, size_t* psize, SARRAY* sa);
        LEPT_DLL extern int sarrayAppend( const char* filename, SARRAY *sa );
        LEPT_DLL extern SARRAY* getNumberedPathnamesInDirectory( const char* dirname, const char* substr, int numpre, int numpost, int maxnum );
        LEPT_DLL extern SARRAY* getSortedPathnamesInDirectory( const char* dirname, const char* substr, int first, int nfiles );
        LEPT_DLL extern SARRAY* convertSortedToNumberedPathnames(SARRAY* sa, int numpre, int numpost, int maxnum);
        LEPT_DLL extern SARRAY* getFilenamesInDirectory( const char* dirname );
        LEPT_DLL extern SARRAY* sarraySort(SARRAY* saout, SARRAY* sain, int sortorder);
        LEPT_DLL extern SARRAY* sarraySortByIndex(SARRAY* sain, NUMA* naindex);
        LEPT_DLL extern int stringCompareLexical( const char* str1, const char* str2 );
        LEPT_DLL extern SARRAY* sarrayUnionByAset(SARRAY* sa1, SARRAY* sa2);
        LEPT_DLL extern SARRAY* sarrayRemoveDupsByAset(SARRAY* sas);
        LEPT_DLL extern SARRAY* sarrayIntersectionByAset(SARRAY* sa1, SARRAY* sa2);
        LEPT_DLL extern L_ASET* l_asetCreateFromSarray(SARRAY* sa);
        LEPT_DLL extern int sarrayRemoveDupsByHash(SARRAY* sas, SARRAY** psad, L_DNAHASH** pdahash);
        LEPT_DLL extern SARRAY* sarrayIntersectionByHash(SARRAY* sa1, SARRAY* sa2);
        LEPT_DLL extern int sarrayFindStringByHash(SARRAY* sa, L_DNAHASH* dahash, const char* str, int *pindex );
        LEPT_DLL extern L_DNAHASH* l_dnaHashCreateFromSarray(SARRAY* sa);
        LEPT_DLL extern SARRAY* sarrayGenerateIntegers(l_int32 n);
        LEPT_DLL extern PIX* pixScale(PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleToSizeRel(PIX* pixs, int delw, int delh);
        LEPT_DLL extern PIX* pixScaleToSize(PIX* pixs, int wd, int hd);
        LEPT_DLL extern PIX* pixScaleGeneral(PIX* pixs, float scalex, float scaley, float sharpfract, int sharpwidth);
        LEPT_DLL extern PIX* pixScaleLI(PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleColorLI(PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleColor2xLI(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleColor4xLI(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleGrayLI(PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleGray2xLI(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleGray4xLI(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleBySampling(PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleBySamplingToSize(PIX* pixs, int wd, int hd);
        LEPT_DLL extern PIX* pixScaleByIntSampling(PIX* pixs, int factor);
        LEPT_DLL extern PIX* pixScaleRGBToGrayFast(PIX* pixs, int factor, int color);
        LEPT_DLL extern PIX* pixScaleRGBToBinaryFast(PIX* pixs, int factor, int thresh);
        LEPT_DLL extern PIX* pixScaleGrayToBinaryFast(PIX* pixs, int factor, int thresh);
        LEPT_DLL extern PIX* pixScaleSmooth(PIX* pix, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleRGBToGray2(PIX* pixs, float rwt, float gwt, float bwt);
        LEPT_DLL extern PIX* pixScaleAreaMap(PIX* pix, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleAreaMap2(PIX* pix);
        LEPT_DLL extern PIX* pixScaleBinary(PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleToGray(PIX* pixs, float scalefactor);
        LEPT_DLL extern PIX* pixScaleToGrayFast(PIX* pixs, float scalefactor);
        LEPT_DLL extern PIX* pixScaleToGray2(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleToGray3(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleToGray4(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleToGray6(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleToGray8(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleToGray16(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleToGrayMipmap(PIX* pixs, float scalefactor);
        LEPT_DLL extern PIX* pixScaleMipmap(PIX* pixs1, PIX* pixs2, float scale);
        LEPT_DLL extern PIX* pixExpandReplicate(PIX* pixs, int factor);
        LEPT_DLL extern PIX* pixScaleGray2xLIThresh(PIX* pixs, int thresh);
        LEPT_DLL extern PIX* pixScaleGray2xLIDither(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleGray4xLIThresh(PIX* pixs, int thresh);
        LEPT_DLL extern PIX* pixScaleGray4xLIDither(PIX* pixs);
        LEPT_DLL extern PIX* pixScaleGrayMinMax(PIX* pixs, int xfact, int yfact, int type);
        LEPT_DLL extern PIX* pixScaleGrayMinMax2(PIX* pixs, int type);
        LEPT_DLL extern PIX* pixScaleGrayRankCascade(PIX* pixs, int level1, int level2, int level3, int level4);
        LEPT_DLL extern PIX* pixScaleGrayRank2(PIX* pixs, int rank);
        LEPT_DLL extern int pixScaleAndTransferAlpha(PIX* pixd, PIX* pixs, float scalex, float scaley);
        LEPT_DLL extern PIX* pixScaleWithAlpha(PIX* pixs, float scalex, float scaley, PIX* pixg, float fract);
        LEPT_DLL extern void scaleColorLILow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleGrayLILow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleColor2xLILow(l_uint32* datad, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleColor2xLILineLow(l_uint32* lined, int wpld, l_uint32* lines, int ws, int wpls, int lastlineflag);
        LEPT_DLL extern void scaleGray2xLILow(l_uint32* datad, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleGray2xLILineLow(l_uint32* lined, int wpld, l_uint32* lines, int ws, int wpls, int lastlineflag);
        LEPT_DLL extern void scaleGray4xLILow(l_uint32* datad, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleGray4xLILineLow(l_uint32* lined, int wpld, l_uint32* lines, int ws, int wpls, int lastlineflag);
        LEPT_DLL extern int scaleBySamplingLow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int d, int wpls);
        LEPT_DLL extern int scaleSmoothLow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int d, int wpls, int size);
        LEPT_DLL extern void scaleRGBToGray2Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, float rwt, float gwt, float bwt);
        LEPT_DLL extern void scaleColorAreaMapLow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleGrayAreaMapLow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleAreaMapLow2(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int d, int wpls);
        LEPT_DLL extern int scaleBinaryLow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int ws, int hs, int wpls);
        LEPT_DLL extern void scaleToGray2Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, l_uint32* sumtab, l_uint8* valtab);
        LEPT_DLL extern l_uint32* makeSumTabSG2(void );
        LEPT_DLL extern l_uint8* makeValTabSG2(void );
        LEPT_DLL extern void scaleToGray3Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, l_uint32* sumtab, l_uint8* valtab);
        LEPT_DLL extern l_uint32* makeSumTabSG3(void );
        LEPT_DLL extern l_uint8* makeValTabSG3(void );
        LEPT_DLL extern void scaleToGray4Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, l_uint32* sumtab, l_uint8* valtab);
        LEPT_DLL extern l_uint32* makeSumTabSG4(void );
        LEPT_DLL extern l_uint8* makeValTabSG4(void );
        LEPT_DLL extern void scaleToGray6Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, l_int32* tab8, l_uint8* valtab);
        LEPT_DLL extern l_uint8* makeValTabSG6(void );
        LEPT_DLL extern void scaleToGray8Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, l_int32* tab8, l_uint8* valtab);
        LEPT_DLL extern l_uint8* makeValTabSG8(void );
        LEPT_DLL extern void scaleToGray16Low(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas, int wpls, l_int32* tab8);
        LEPT_DLL extern int scaleMipmapLow(l_uint32* datad, int wd, int hd, int wpld, l_uint32* datas1, int wpls1, l_uint32* datas2, int wpls2, float red);
        LEPT_DLL extern PIX* pixSeedfillBinary(PIX* pixd, PIX* pixs, PIX* pixm, int connectivity);
        LEPT_DLL extern PIX* pixSeedfillBinaryRestricted(PIX* pixd, PIX* pixs, PIX* pixm, int connectivity, int xmax, int ymax);
        LEPT_DLL extern PIX* pixHolesByFilling(PIX* pixs, int connectivity);
        LEPT_DLL extern PIX* pixFillClosedBorders(PIX* pixs, int connectivity);
        LEPT_DLL extern PIX* pixExtractBorderConnComps(PIX* pixs, int connectivity);
        LEPT_DLL extern PIX* pixRemoveBorderConnComps(PIX* pixs, int connectivity);
        LEPT_DLL extern PIX* pixFillBgFromBorder(PIX* pixs, int connectivity);
        LEPT_DLL extern PIX* pixFillHolesToBoundingRect(PIX* pixs, int minsize, float maxhfract, float minfgfract);
        LEPT_DLL extern int pixSeedfillGray(PIX* pixs, PIX* pixm, int connectivity);
        LEPT_DLL extern int pixSeedfillGrayInv(PIX* pixs, PIX* pixm, int connectivity);
        LEPT_DLL extern int pixSeedfillGraySimple(PIX* pixs, PIX* pixm, int connectivity);
        LEPT_DLL extern int pixSeedfillGrayInvSimple(PIX* pixs, PIX* pixm, int connectivity);
        LEPT_DLL extern PIX* pixSeedfillGrayBasin(PIX* pixb, PIX* pixm, int delta, int connectivity);
        LEPT_DLL extern PIX* pixDistanceFunction(PIX* pixs, int connectivity, int outdepth, int boundcond);
        LEPT_DLL extern PIX* pixSeedspread(PIX* pixs, int connectivity);
        LEPT_DLL extern int pixLocalExtrema(PIX* pixs, int maxmin, int minmax, PIX** ppixmin, PIX** ppixmax);
        LEPT_DLL extern int pixSelectedLocalExtrema(PIX* pixs, int mindist, PIX** ppixmin, PIX** ppixmax);
        LEPT_DLL extern PIX* pixFindEqualValues(PIX* pixs1, PIX* pixs2);
        LEPT_DLL extern int pixSelectMinInConnComp(PIX* pixs, PIX* pixm, PTA** ppta, NUMA** pnav);
        LEPT_DLL extern PIX* pixRemoveSeededComponents(PIX* pixd, PIX* pixs, PIX* pixm, int connectivity, int bordersize);
        LEPT_DLL extern void seedfillBinaryLow(l_uint32* datas, int hs, int wpls, l_uint32* datam, int hm, int wplm, int connectivity);
        LEPT_DLL extern void seedfillGrayLow(l_uint32* datas, int w, int h, int wpls, l_uint32* datam, int wplm, int connectivity);
        LEPT_DLL extern void seedfillGrayInvLow(l_uint32* datas, int w, int h, int wpls, l_uint32* datam, int wplm, int connectivity);
        LEPT_DLL extern void seedfillGrayLowSimple(l_uint32* datas, int w, int h, int wpls, l_uint32* datam, int wplm, int connectivity);
        LEPT_DLL extern void seedfillGrayInvLowSimple(l_uint32* datas, int w, int h, int wpls, l_uint32* datam, int wplm, int connectivity);
        LEPT_DLL extern void distanceFunctionLow(l_uint32* datad, int w, int h, int d, int wpld, int connectivity);
        LEPT_DLL extern void seedspreadLow(l_uint32* datad, int w, int h, int wpld, l_uint32* datat, int wplt, int connectivity);
        LEPT_DLL extern SELA* selaCreate(l_int32 n);
        LEPT_DLL extern void selaDestroy(SELA** psela);
        LEPT_DLL extern SEL* selCreate(l_int32 height, int width, const char* name );
        LEPT_DLL extern void selDestroy(SEL** psel);
        LEPT_DLL extern SEL* selCopy(SEL* sel);
        LEPT_DLL extern SEL* selCreateBrick(l_int32 h, int w, int cy, int cx, int type);
        LEPT_DLL extern SEL* selCreateComb(l_int32 factor1, int factor2, int direction);
        LEPT_DLL extern l_int32** create2dIntArray(l_int32 sy, int sx);
        LEPT_DLL extern int selaAddSel(SELA* sela, SEL* sel, const char* selname, int copyflag );
        LEPT_DLL extern int selaGetCount(SELA* sela);
        LEPT_DLL extern SEL* selaGetSel(SELA* sela, int i);
        LEPT_DLL extern char* selGetName(SEL* sel);
        LEPT_DLL extern int selSetName(SEL* sel, const char* name );
        LEPT_DLL extern int selaFindSelByName(SELA* sela, const char* name, int *pindex, SEL** psel );
        LEPT_DLL extern int selGetElement(SEL* sel, int row, int col, l_int32* ptype);
        LEPT_DLL extern int selSetElement(SEL* sel, int row, int col, int type);
        LEPT_DLL extern int selGetParameters(SEL* sel, l_int32* psy, l_int32* psx, l_int32* pcy, l_int32* pcx);
        LEPT_DLL extern int selSetOrigin(SEL* sel, int cy, int cx);
        LEPT_DLL extern int selGetTypeAtOrigin(SEL* sel, l_int32* ptype);
        LEPT_DLL extern char* selaGetBrickName(SELA* sela, int hsize, int vsize);
        LEPT_DLL extern char* selaGetCombName(SELA* sela, int size, int direction);
        LEPT_DLL extern int getCompositeParameters(l_int32 size, l_int32* psize1, l_int32* psize2, char** pnameh1, char** pnameh2, char** pnamev1, char** pnamev2);
        LEPT_DLL extern SARRAY* selaGetSelnames(SELA* sela);
        LEPT_DLL extern int selFindMaxTranslations(SEL* sel, l_int32* pxp, l_int32* pyp, l_int32* pxn, l_int32* pyn);
        LEPT_DLL extern SEL* selRotateOrth(SEL* sel, int quads);
        LEPT_DLL extern SELA* selaRead( const char* fname );
        LEPT_DLL extern SELA* selaReadStream(FILE* fp);
        LEPT_DLL extern SEL* selRead( const char* fname );
        LEPT_DLL extern SEL* selReadStream(FILE* fp);
        LEPT_DLL extern int selaWrite( const char* fname, SELA *sela );
        LEPT_DLL extern int selaWriteStream(FILE* fp, SELA* sela);
        LEPT_DLL extern int selWrite( const char* fname, SEL *sel );
        LEPT_DLL extern int selWriteStream(FILE* fp, SEL* sel);
        LEPT_DLL extern SEL* selCreateFromString( const char* text, int h, int w, const char* name );
        LEPT_DLL extern char* selPrintToString(SEL* sel);
        LEPT_DLL extern SELA* selaCreateFromFile( const char* filename );
        LEPT_DLL extern SEL* selCreateFromPta(PTA* pta, int cy, int cx, const char* name );
        LEPT_DLL extern SEL* selCreateFromPix(PIX* pix, int cy, int cx, const char* name );
        LEPT_DLL extern SEL* selReadFromColorImage( const char* pathname );
        LEPT_DLL extern SEL* selCreateFromColorPix(PIX* pixs, char* selname);
        LEPT_DLL extern PIX* selDisplayInPix(SEL* sel, int size, int gthick);
        LEPT_DLL extern PIX* selaDisplayInPix(SELA* sela, int size, int gthick, int spacing, int ncols);
        LEPT_DLL extern SELA* selaAddBasic(SELA* sela);
        LEPT_DLL extern SELA* selaAddHitMiss(SELA* sela);
        LEPT_DLL extern SELA* selaAddDwaLinear(SELA* sela);
        LEPT_DLL extern SELA* selaAddDwaCombs(SELA* sela);
        LEPT_DLL extern SELA* selaAddCrossJunctions(SELA* sela, float hlsize, float mdist, int norient, int debugflag);
        LEPT_DLL extern SELA* selaAddTJunctions(SELA* sela, float hlsize, float mdist, int norient, int debugflag);
        LEPT_DLL extern SELA* sela4ccThin(SELA* sela);
        LEPT_DLL extern SELA* sela8ccThin(SELA* sela);
        LEPT_DLL extern SELA* sela4and8ccThin(SELA* sela);
        LEPT_DLL extern SEL* pixGenerateSelWithRuns(PIX* pixs, int nhlines, int nvlines, int distance, int minlength, int toppix, int botpix, int leftpix, int rightpix, PIX** ppixe);
        LEPT_DLL extern SEL* pixGenerateSelRandom(PIX* pixs, float hitfract, float missfract, int distance, int toppix, int botpix, int leftpix, int rightpix, PIX** ppixe);
        LEPT_DLL extern SEL* pixGenerateSelBoundary(PIX* pixs, int hitdist, int missdist, int hitskip, int missskip, int topflag, int botflag, int leftflag, int rightflag, PIX** ppixe);
        LEPT_DLL extern NUMA* pixGetRunCentersOnLine(PIX* pixs, int x, int y, int minlength);
        LEPT_DLL extern NUMA* pixGetRunsOnLine(PIX* pixs, int x1, int y1, int x2, int y2);
        LEPT_DLL extern PTA* pixSubsampleBoundaryPixels(PIX* pixs, int skip);
        LEPT_DLL extern int adjacentOnPixelInRaster(PIX* pixs, int x, int y, l_int32* pxa, l_int32* pya);
        LEPT_DLL extern PIX* pixDisplayHitMissSel(PIX* pixs, SEL* sel, int scalefactor, uint hitcolor, uint misscolor);
        LEPT_DLL extern PIX* pixHShear(PIX* pixd, PIX* pixs, int yloc, float radang, int incolor);
        LEPT_DLL extern PIX* pixVShear(PIX* pixd, PIX* pixs, int xloc, float radang, int incolor);
        LEPT_DLL extern PIX* pixHShearCorner(PIX* pixd, PIX* pixs, float radang, int incolor);
        LEPT_DLL extern PIX* pixVShearCorner(PIX* pixd, PIX* pixs, float radang, int incolor);
        LEPT_DLL extern PIX* pixHShearCenter(PIX* pixd, PIX* pixs, float radang, int incolor);
        LEPT_DLL extern PIX* pixVShearCenter(PIX* pixd, PIX* pixs, float radang, int incolor);
        LEPT_DLL extern int pixHShearIP(PIX* pixs, int yloc, float radang, int incolor);
        LEPT_DLL extern int pixVShearIP(PIX* pixs, int xloc, float radang, int incolor);
        LEPT_DLL extern PIX* pixHShearLI(PIX* pixs, int yloc, float radang, int incolor);
        LEPT_DLL extern PIX* pixVShearLI(PIX* pixs, int xloc, float radang, int incolor);
        LEPT_DLL extern PIX* pixDeskewBoth(PIX* pixs, int redsearch);
        LEPT_DLL extern PIX* pixDeskew(PIX* pixs, int redsearch);
        LEPT_DLL extern PIX* pixFindSkewAndDeskew(PIX* pixs, int redsearch, l_float32* pangle, l_float32* pconf);
        LEPT_DLL extern PIX* pixDeskewGeneral(PIX* pixs, int redsweep, float sweeprange, float sweepdelta, int redsearch, int thresh, l_float32* pangle, l_float32* pconf);
        LEPT_DLL extern int pixFindSkew(PIX* pixs, l_float32* pangle, l_float32* pconf);
        LEPT_DLL extern int pixFindSkewSweep(PIX* pixs, l_float32* pangle, int reduction, float sweeprange, float sweepdelta);
        LEPT_DLL extern int pixFindSkewSweepAndSearch(PIX* pixs, l_float32* pangle, l_float32* pconf, int redsweep, int redsearch, float sweeprange, float sweepdelta, float minbsdelta);
        LEPT_DLL extern int pixFindSkewSweepAndSearchScore(PIX* pixs, l_float32* pangle, l_float32* pconf, l_float32* pendscore, int redsweep, int redsearch, float sweepcenter, float sweeprange, float sweepdelta, float minbsdelta);
        LEPT_DLL extern int pixFindSkewSweepAndSearchScorePivot(PIX* pixs, l_float32* pangle, l_float32* pconf, l_float32* pendscore, int redsweep, int redsearch, float sweepcenter, float sweeprange, float sweepdelta, float minbsdelta, int pivot);
        LEPT_DLL extern int pixFindSkewOrthogonalRange(PIX* pixs, l_float32* pangle, l_float32* pconf, int redsweep, int redsearch, float sweeprange, float sweepdelta, float minbsdelta, float confprior);
        LEPT_DLL extern int pixFindDifferentialSquareSum(PIX* pixs, l_float32* psum);
        LEPT_DLL extern int pixFindNormalizedSquareSum(PIX* pixs, l_float32* phratio, l_float32* pvratio, l_float32* pfract);
        LEPT_DLL extern PIX* pixReadStreamSpix(FILE* fp);
        LEPT_DLL extern int readHeaderSpix( const char* filename, int *pwidth, l_int32* pheight, int *pbps, l_int32* pspp, int *piscmap );
        LEPT_DLL extern int freadHeaderSpix(FILE* fp, l_int32* pwidth, l_int32* pheight, l_int32* pbps, l_int32* pspp, l_int32* piscmap);
        LEPT_DLL extern int sreadHeaderSpix( const l_uint32* data, int *pwidth, l_int32* pheight, int *pbps, l_int32* pspp, int *piscmap );
        LEPT_DLL extern int pixWriteStreamSpix(FILE* fp, PIX* pix);
        LEPT_DLL extern PIX* pixReadMemSpix( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixWriteMemSpix(l_uint8** pdata, size_t* psize, PIX* pix);
        LEPT_DLL extern int pixSerializeToMemory(PIX* pixs, l_uint32** pdata, size_t* pnbytes);
        LEPT_DLL extern PIX* pixDeserializeFromMemory( const l_uint32* data, size_t nbytes );
        LEPT_DLL extern L_STACK* lstackCreate(l_int32 nalloc);
        LEPT_DLL extern void lstackDestroy(L_STACK** plstack, int freeflag);
        LEPT_DLL extern int lstackAdd(L_STACK* lstack, void* item);
        LEPT_DLL extern void* lstackRemove(L_STACK* lstack);
        LEPT_DLL extern int lstackGetCount(L_STACK* lstack);
        LEPT_DLL extern int lstackPrint(FILE* fp, L_STACK* lstack);
        LEPT_DLL extern L_STRCODE* strcodeCreate(l_int32 fileno);
        LEPT_DLL extern int strcodeCreateFromFile( const char* filein, int fileno, const char* outdir );
        LEPT_DLL extern int strcodeGenerate(L_STRCODE* strcode, const char* filein, const char* type );
        LEPT_DLL extern int strcodeFinalize(L_STRCODE** pstrcode, const char* outdir );
        LEPT_DLL extern int l_getStructStrFromFile( const char* filename, int field, char** pstr );
        LEPT_DLL extern int pixFindStrokeLength(PIX* pixs, l_int32* tab8, l_int32* plength);
        LEPT_DLL extern int pixFindStrokeWidth(PIX* pixs, float thresh, l_int32* tab8, l_float32* pwidth, NUMA** pnahisto);
        LEPT_DLL extern NUMA* pixaFindStrokeWidth(PIXA* pixa, float thresh, l_int32* tab8, int debug);
        LEPT_DLL extern PIXA* pixaModifyStrokeWidth(PIXA* pixas, float targetw);
        LEPT_DLL extern PIX* pixModifyStrokeWidth(PIX* pixs, float width, float targetw);
        LEPT_DLL extern PIXA* pixaSetStrokeWidth(PIXA* pixas, int width, int thinfirst, int connectivity);
        LEPT_DLL extern PIX* pixSetStrokeWidth(PIX* pixs, int width, int thinfirst, int connectivity);
        LEPT_DLL extern l_int32* sudokuReadFile( const char* filename );
        LEPT_DLL extern l_int32* sudokuReadString( const char* str );
        LEPT_DLL extern L_SUDOKU* sudokuCreate(l_int32* array);
        LEPT_DLL extern void sudokuDestroy(L_SUDOKU** psud);
        LEPT_DLL extern int sudokuSolve(L_SUDOKU* sud);
        LEPT_DLL extern int sudokuTestUniqueness(l_int32* array, l_int32* punique);
        LEPT_DLL extern L_SUDOKU* sudokuGenerate(l_int32* array, int seed, int minelems, int maxtries);
        LEPT_DLL extern int sudokuOutput(L_SUDOKU* sud, int arraytype);
        LEPT_DLL extern PIX* pixAddSingleTextblock(PIX* pixs, L_BMF* bmf, const char* textstr, uint val, int location, int *poverflow );
        LEPT_DLL extern PIX* pixAddTextlines(PIX* pixs, L_BMF* bmf, const char* textstr, uint val, int location );
        LEPT_DLL extern int pixSetTextblock(PIX* pixs, L_BMF* bmf, const char* textstr, uint val, int x0, int y0, int wtext, int firstindent, l_int32* poverflow );
        LEPT_DLL extern int pixSetTextline(PIX* pixs, L_BMF* bmf, const char* textstr, uint val, int x0, int y0, l_int32* pwidth, int *poverflow );
        LEPT_DLL extern PIXA* pixaAddTextNumber(PIXA* pixas, L_BMF* bmf, NUMA* na, uint val, int location);
        LEPT_DLL extern PIXA* pixaAddTextlines(PIXA* pixas, L_BMF* bmf, SARRAY* sa, uint val, int location);
        LEPT_DLL extern int pixaAddPixWithText(PIXA* pixa, PIX* pixs, int reduction, L_BMF* bmf, const char* textstr, uint val, int location );
        LEPT_DLL extern SARRAY* bmfGetLineStrings(L_BMF* bmf, const char* textstr, int maxw, int firstindent, int *ph );
        LEPT_DLL extern NUMA* bmfGetWordWidths(L_BMF* bmf, const char* textstr, SARRAY *sa );
        LEPT_DLL extern int bmfGetStringWidth(L_BMF* bmf, const char* textstr, int *pw );
        LEPT_DLL extern SARRAY* splitStringToParagraphs(char* textstr, int splitflag);
        LEPT_DLL extern PIX* pixReadTiff( const char* filename, int n );
        LEPT_DLL extern PIX* pixReadStreamTiff(FILE* fp, int n);
        LEPT_DLL extern int pixWriteTiff( const char* filename, PIX *pix, int comptype, const char* modestr );
        LEPT_DLL extern int pixWriteTiffCustom( const char* filename, PIX *pix, int comptype, const char* modestr, NUMA *natags, SARRAY* savals, SARRAY *satypes, NUMA* nasizes );
        LEPT_DLL extern int pixWriteStreamTiff(FILE* fp, PIX* pix, int comptype);
        LEPT_DLL extern int pixWriteStreamTiffWA(FILE* fp, PIX* pix, int comptype, const char* modestr );
        LEPT_DLL extern PIX* pixReadFromMultipageTiff( const char* fname, size_t *poffset );
        LEPT_DLL extern PIXA* pixaReadMultipageTiff( const char* filename );
        LEPT_DLL extern int pixaWriteMultipageTiff( const char* fname, PIXA *pixa );
        LEPT_DLL extern int writeMultipageTiff( const char* dirin, const char* substr, const char* fileout );
        LEPT_DLL extern int writeMultipageTiffSA(SARRAY* sa, const char* fileout );
        LEPT_DLL extern int fprintTiffInfo(FILE* fpout, const char* tiffile );
        LEPT_DLL extern int tiffGetCount(FILE* fp, l_int32* pn);
        LEPT_DLL extern int getTiffResolution(FILE* fp, l_int32* pxres, l_int32* pyres);
        LEPT_DLL extern int readHeaderTiff( const char* filename, int n, l_int32* pwidth, int *pheight, l_int32* pbps, int *pspp, l_int32* pres, int *pcmap, l_int32* pformat );
        LEPT_DLL extern int freadHeaderTiff(FILE* fp, int n, l_int32* pwidth, l_int32* pheight, l_int32* pbps, l_int32* pspp, l_int32* pres, l_int32* pcmap, l_int32* pformat);
        LEPT_DLL extern int readHeaderMemTiff( const l_uint8* cdata, size_t size, int n, int *pwidth, l_int32* pheight, int *pbps, l_int32* pspp, int *pres, l_int32* pcmap, int *pformat );
        LEPT_DLL extern int findTiffCompression(FILE* fp, l_int32* pcomptype);
        LEPT_DLL extern int extractG4DataFromFile( const char* filein, byte **pdata, size_t* pnbytes, int *pw, l_int32* ph, int *pminisblack );
        LEPT_DLL extern PIX* pixReadMemTiff( const l_uint8* cdata, size_t size, int n );
        LEPT_DLL extern PIX* pixReadMemFromMultipageTiff( const l_uint8* cdata, size_t size, size_t* poffset );
        LEPT_DLL extern PIXA* pixaReadMemMultipageTiff( const l_uint8* data, size_t size );
        LEPT_DLL extern int pixaWriteMemMultipageTiff(l_uint8** pdata, size_t* psize, PIXA* pixa);
        LEPT_DLL extern int pixWriteMemTiff(l_uint8** pdata, size_t* psize, PIX* pix, int comptype);
        LEPT_DLL extern int pixWriteMemTiffCustom(l_uint8** pdata, size_t* psize, PIX* pix, int comptype, NUMA* natags, SARRAY* savals, SARRAY* satypes, NUMA* nasizes);
        LEPT_DLL extern int setMsgSeverity(l_int32 newsev);
        LEPT_DLL extern int returnErrorInt( const char* msg, const char* procname, int ival );
        LEPT_DLL extern float returnErrorFloat( const char* msg, const char* procname, float fval );
        LEPT_DLL extern void* returnErrorPtr( const char* msg, const char* procname, void* pval );
        LEPT_DLL extern int filesAreIdentical( const char* fname1, const char* fname2, int *psame );
        LEPT_DLL extern l_uint16 convertOnLittleEnd16(l_uint16 shortin);
        LEPT_DLL extern l_uint16 convertOnBigEnd16(l_uint16 shortin);
        LEPT_DLL extern uint convertOnLittleEnd32(l_uint32 wordin);
        LEPT_DLL extern uint convertOnBigEnd32(l_uint32 wordin);
        LEPT_DLL extern int fileCorruptByDeletion( const char* filein, float loc, float size, const char* fileout );
        LEPT_DLL extern int fileCorruptByMutation( const char* filein, float loc, float size, const char* fileout );
        LEPT_DLL extern int genRandomIntegerInRange(l_int32 range, int seed, l_int32* pval);
        LEPT_DLL extern int lept_roundftoi(l_float32 fval);
        LEPT_DLL extern int l_hashStringToUint64( const char* str, l_uint64 *phash );
        LEPT_DLL extern int l_hashPtToUint64(l_int32 x, int y, l_uint64* phash);
        LEPT_DLL extern int l_hashFloat64ToUint64(l_int32 nbuckets, l_float64 val, l_uint64* phash);
        LEPT_DLL extern int findNextLargerPrime(l_int32 start, l_uint32* pprime);
        LEPT_DLL extern int lept_isPrime(l_uint64 n, l_int32* pis_prime, l_uint32* pfactor);
        LEPT_DLL extern uint convertBinaryToGrayCode(l_uint32 val);
        LEPT_DLL extern uint convertGrayCodeToBinary(l_uint32 val);
        LEPT_DLL extern char* getLeptonicaVersion();
        LEPT_DLL extern void startTimer(void );
        LEPT_DLL extern float stopTimer(void );
        LEPT_DLL extern L_TIMER startTimerNested(void );
        LEPT_DLL extern float stopTimerNested(L_TIMER rusage_start);
        LEPT_DLL extern void l_getCurrentTime(l_int32* sec, l_int32* usec);
        LEPT_DLL extern L_WALLTIMER* startWallTimer(void );
        LEPT_DLL extern float stopWallTimer(L_WALLTIMER** ptimer);
        LEPT_DLL extern char* l_getFormattedDate();
        LEPT_DLL extern char* stringNew( const char* src );
        LEPT_DLL extern int stringCopy(char* dest, const char* src, int n );
        LEPT_DLL extern int stringReplace(char** pdest, const char* src );
        LEPT_DLL extern int stringLength( const char* src, size_t size );
        LEPT_DLL extern int stringCat(char* dest, size_t size, const char* src );
        LEPT_DLL extern char* stringConcatNew( const char* first, ... );
        LEPT_DLL extern char* stringJoin( const char* src1, const char* src2 );
        LEPT_DLL extern int stringJoinIP(char** psrc1, const char* src2 );
        LEPT_DLL extern char* stringReverse( const char* src );
        LEPT_DLL extern char* strtokSafe(char* cstr, const char* seps, char** psaveptr );
        LEPT_DLL extern int stringSplitOnToken(char* cstr, const char* seps, char** phead, char** ptail );
        LEPT_DLL extern char* stringRemoveChars( const char* src, const char* remchars );
        LEPT_DLL extern int stringFindSubstr( const char* src, const char* sub, int *ploc );
        LEPT_DLL extern char* stringReplaceSubstr( const char* src, const char* sub1, const char* sub2, int *pfound, l_int32* ploc );
        LEPT_DLL extern char* stringReplaceEachSubstr( const char* src, const char* sub1, const char* sub2, int *pcount );
        LEPT_DLL extern L_DNA* arrayFindEachSequence( const l_uint8* data, size_t datalen, const l_uint8* sequence, size_t seqlen );
        LEPT_DLL extern int arrayFindSequence( const l_uint8* data, size_t datalen, const l_uint8* sequence, size_t seqlen, l_int32* poffset, int *pfound );
        LEPT_DLL extern void* reallocNew(void** pindata, int oldsize, int newsize);
        LEPT_DLL extern l_uint8* l_binaryRead( const char* filename, size_t *pnbytes );
        LEPT_DLL extern l_uint8* l_binaryReadStream(FILE* fp, size_t* pnbytes);
        LEPT_DLL extern l_uint8* l_binaryReadSelect( const char* filename, size_t start, size_t nbytes, size_t *pnread );
        LEPT_DLL extern l_uint8* l_binaryReadSelectStream(FILE* fp, size_t start, size_t nbytes, size_t* pnread);
        LEPT_DLL extern int l_binaryWrite( const char* filename, const char* operation, void* data, size_t nbytes );
        LEPT_DLL extern size_t nbytesInFile( const char* filename );
        LEPT_DLL extern size_t fnbytesInFile(FILE* fp);
        LEPT_DLL extern l_uint8* l_binaryCopy(l_uint8* datas, size_t size);
        LEPT_DLL extern int fileCopy( const char* srcfile, const char* newfile );
        LEPT_DLL extern int fileConcatenate( const char* srcfile, const char* destfile );
        LEPT_DLL extern int fileAppendString( const char* filename, const char* str );
        LEPT_DLL extern FILE* fopenReadStream( const char* filename );
        LEPT_DLL extern FILE* fopenWriteStream( const char* filename, const char* modestring );
        LEPT_DLL extern FILE* fopenReadFromMemory( const l_uint8* data, size_t size );
        LEPT_DLL extern FILE* fopenWriteWinTempfile();
        LEPT_DLL extern FILE* lept_fopen( const char* filename, const char* mode );
        LEPT_DLL extern int lept_fclose(FILE* fp);
        LEPT_DLL extern void* lept_calloc(size_t nmemb, size_t size);
        LEPT_DLL extern void lept_free(void* ptr);
        LEPT_DLL extern int lept_mkdir( const char* subdir );
        LEPT_DLL extern int lept_rmdir( const char* subdir );
        LEPT_DLL extern void lept_direxists( const char* dir, int *pexists );
        LEPT_DLL extern int lept_rm_match( const char* subdir, const char* substr );
        LEPT_DLL extern int lept_rm( const char* subdir, const char* tail );
        LEPT_DLL extern int lept_rmfile( const char* filepath );
        LEPT_DLL extern int lept_mv( const char* srcfile, const char* newdir, const char* newtail, char** pnewpath );
        LEPT_DLL extern int lept_cp( const char* srcfile, const char* newdir, const char* newtail, char** pnewpath );
        LEPT_DLL extern int splitPathAtDirectory( const char* pathname, char** pdir, char** ptail );
        LEPT_DLL extern int splitPathAtExtension( const char* pathname, char** pbasename, char** pextension );
        LEPT_DLL extern char* pathJoin( const char* dir, const char* fname );
        LEPT_DLL extern char* appendSubdirs( const char* basedir, const char* subdirs );
        LEPT_DLL extern int convertSepCharsInPath(char* path, int type);
        LEPT_DLL extern char* genPathname( const char* dir, const char* fname );
        LEPT_DLL extern int makeTempDirname(char* result, size_t nbytes, const char* subdir );
        LEPT_DLL extern int modifyTrailingSlash(char* path, size_t nbytes, int flag);
        LEPT_DLL extern char* l_makeTempFilename();
        LEPT_DLL extern int extractNumberFromFilename( const char* fname, int numpre, int numpost );
        LEPT_DLL extern PIX* pixSimpleCaptcha(PIX* pixs, int border, int nterms, uint seed, uint color, int cmapflag);
        LEPT_DLL extern PIX* pixRandomHarmonicWarp(PIX* pixs, float xmag, float ymag, float xfreq, float yfreq, int nx, int ny, uint seed, int grayval);
        LEPT_DLL extern PIX* pixWarpStereoscopic(PIX* pixs, int zbend, int zshiftt, int zshiftb, int ybendt, int ybendb, int redleft);
        LEPT_DLL extern PIX* pixStretchHorizontal(PIX* pixs, int dir, int type, int hmax, int operation, int incolor);
        LEPT_DLL extern PIX* pixStretchHorizontalSampled(PIX* pixs, int dir, int type, int hmax, int incolor);
        LEPT_DLL extern PIX* pixStretchHorizontalLI(PIX* pixs, int dir, int type, int hmax, int incolor);
        LEPT_DLL extern PIX* pixQuadraticVShear(PIX* pixs, int dir, int vmaxt, int vmaxb, int operation, int incolor);
        LEPT_DLL extern PIX* pixQuadraticVShearSampled(PIX* pixs, int dir, int vmaxt, int vmaxb, int incolor);
        LEPT_DLL extern PIX* pixQuadraticVShearLI(PIX* pixs, int dir, int vmaxt, int vmaxb, int incolor);
        LEPT_DLL extern PIX* pixStereoFromPair(PIX* pix1, PIX* pix2, float rwt, float gwt, float bwt);
        LEPT_DLL extern L_WSHED* wshedCreate(PIX* pixs, PIX* pixm, int mindepth, int debugflag);
        LEPT_DLL extern void wshedDestroy(L_WSHED** pwshed);
        LEPT_DLL extern int wshedApply(L_WSHED* wshed);
        LEPT_DLL extern int wshedBasins(L_WSHED* wshed, PIXA** ppixa, NUMA** pnalevels);
        LEPT_DLL extern PIX* wshedRenderFill(L_WSHED* wshed);
        LEPT_DLL extern PIX* wshedRenderColors(L_WSHED* wshed);
        LEPT_DLL extern PIX* pixReadStreamWebP(FILE* fp);
        LEPT_DLL extern PIX* pixReadMemWebP( const l_uint8* filedata, size_t filesize );
        LEPT_DLL extern int readHeaderWebP( const char* filename, int *pw, l_int32* ph, int *pspp );
        LEPT_DLL extern int readHeaderMemWebP( const l_uint8* data, size_t size, l_int32* pw, int *ph, l_int32* pspp );
        LEPT_DLL extern int pixWriteWebP( const char* filename, PIX *pixs, int quality, int lossless );
        LEPT_DLL extern int pixWriteStreamWebP(FILE* fp, PIX* pixs, int quality, int lossless);
        LEPT_DLL extern int pixWriteMemWebP(l_uint8** pencdata, size_t* pencsize, PIX* pixs, int quality, int lossless);
        LEPT_DLL extern int pixaWriteFiles( const char* rootname, PIXA *pixa, int format );
        LEPT_DLL extern int pixWrite( const char* fname, PIX *pix, int format );
        LEPT_DLL extern int pixWriteAutoFormat( const char* filename, PIX *pix );
        LEPT_DLL extern int pixWriteStream(FILE* fp, PIX* pix, int format);
        LEPT_DLL extern int pixWriteImpliedFormat( const char* filename, PIX *pix, int quality, int progressive );
        LEPT_DLL extern int pixChooseOutputFormat(PIX* pix);
        LEPT_DLL extern int getImpliedFileFormat( const char* filename );
        LEPT_DLL extern int pixGetAutoFormat(PIX* pix, l_int32* pformat);
        LEPT_DLL extern const char* getFormatExtension (l_int32 format );
        LEPT_DLL extern int pixWriteMem(l_uint8** pdata, size_t* psize, PIX* pix, int format);
        LEPT_DLL extern int l_fileDisplay( const char* fname, int x, int y, float scale );
        LEPT_DLL extern int pixDisplay(PIX* pixs, int x, int y);
        LEPT_DLL extern int pixDisplayWithTitle(PIX* pixs, int x, int y, const char* title, int dispflag );
        LEPT_DLL extern int pixSaveTiled(PIX* pixs, PIXA* pixa, float scalefactor, int newrow, int space, int dp);
        LEPT_DLL extern int pixSaveTiledOutline(PIX* pixs, PIXA* pixa, float scalefactor, int newrow, int space, int linewidth, int dp);
        LEPT_DLL extern int pixSaveTiledWithText(PIX* pixs, PIXA* pixa, int outwidth, int newrow, int space, int linewidth, L_BMF* bmf, const char* textstr, uint val, int location );
        LEPT_DLL extern void l_chooseDisplayProg(l_int32 selection);
        LEPT_DLL extern int pixDisplayWrite(PIX* pixs, int reduction);
        LEPT_DLL extern int pixDisplayWriteFormat(PIX* pixs, int reduction, int format);
        LEPT_DLL extern int pixDisplayMultiple(l_int32 res, float scalefactor, const char* fileout );
        LEPT_DLL extern l_uint8* zlibCompress(l_uint8* datain, size_t nin, size_t* pnout);
        LEPT_DLL extern l_uint8* zlibUncompress(l_uint8* datain, size_t nin, size_t* pnout);
        */
    }
}
